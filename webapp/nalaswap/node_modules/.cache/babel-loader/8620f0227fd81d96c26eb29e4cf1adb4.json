{"ast":null,"code":"var _jsxFileName = \"/Users/ja/Desktop/MyProjects/NalaSwap/webapp/nalaswap/src/pages/Pools.js\",\n    _s = $RefreshSig$();\n\nimport * as React from 'react';\nimport { useEffect, useState } from \"react\";\nimport NalaRouterABI from \"../ABIS/NalaRouter.json\";\nimport contractAddresses from \"../utils/contractsAddresses.json\";\nimport { tokens } from \"../utils/availableTokens\";\nimport nalaRouterABI from \"../ABIS/NalaRouter.json\";\nimport pancakeFactoryABI from \"../ABIS/PancakeFactory.json\";\nimport lpTokenABI from \"../ABIS/LPTokenABI.json\";\nimport nalaTokenABI from \"../ABIS/NalaTokenABI.json\";\nimport { BigNumber, ethers } from 'ethers';\nimport { Widget } from \"web3uikit\";\nimport Button from '@mui/material/Button';\nimport TextField from '@mui/material/TextField';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Pools() {\n  _s();\n\n  const nalaRouterAddress = contractAddresses.nalaRouterContract;\n  const nlaTokenAddress = contractAddresses.nalaTokenAddress;\n  const wBNBTokenAddress = \"0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c\";\n  const pancakeFactoryV2Address = \"0xcA143Ce32Fe78f1f7019d7d551a6402fC5350c73\";\n  const BUSDTokenAddress = \"0xe9e7cea3dedca5984780bafc599bd69add087d56\";\n  const [liquidity, setLiquidity] = useState(0);\n  const [amountToAddWBNB, setAmountToAddWBNB] = useState(0);\n  const [amountToAddNLA, setAmountToAddNLA] = useState(0);\n  const [amountToRemove, setAmountToRemove] = useState(0);\n  const [reserveWBNB, setReserveWBNB] = useState(0);\n  const [reserveNLA, setReserveNLA] = useState(0);\n  const [tokenImported, setTokenImported] = useState(false);\n  const [lpTokenBalance, setLPTokenBalance] = useState(0);\n  useEffect(() => {\n    getLPTokenBalance();\n    getReserves();\n  }, []);\n\n  const addLiquidityETH = async () => {\n    if (typeof window.ethereum !== 'undefined') {\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      const signer = provider.getSigner();\n\n      if (signer) {\n        const nalaToken = new ethers.Contract(nlaTokenAddress, nalaTokenABI, signer);\n        const nalaRouter = new ethers.Contract(nalaRouterAddress, nalaRouterABI, signer);\n        await nalaToken.connect(signer).approve(nalaRouterAddress, \"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\"); // const factory = await nalaRouter.factory();\n        // console.log(factory);\n\n        await nalaRouter.connect(signer).addLiquidityETH(nlaTokenAddress, ethers.utils.parseEther(amountToAddNLA.toString()), 0, 0, // amountETHMin\n        {\n          value: ethers.utils.parseEther(amountToAddWBNB.toString())\n        });\n      }\n    }\n  };\n\n  const removeLiquidityETH = async amountOfBNB => {};\n\n  const setAmountsWBNB = async amountOfBNB => {\n    console.log(amountOfBNB);\n\n    if (parseInt(amountOfBNB) === 0 || amountOfBNB === \"\") {\n      setAmountToAddNLA(0);\n      setAmountToAddWBNB(0);\n    } else if (typeof window.ethereum !== 'undefined') {\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      const signer = provider.getSigner();\n\n      if (signer) {\n        const nalaToken = new ethers.Contract(nlaTokenAddress, nalaTokenABI, signer);\n        const nalaRouter = new ethers.Contract(nalaRouterAddress, nalaRouterABI, signer);\n        const amountsOut = await nalaRouter.getAmountsOutTokens(ethers.utils.parseEther(amountOfBNB.toString()), [wBNBTokenAddress, nlaTokenAddress]);\n        console.log(`Amounts out = ${amountsOut[1] / Math.pow(10, 18)}`);\n        setAmountToAddWBNB(amountOfBNB);\n        setAmountToAddNLA(amountsOut[1] / Math.pow(10, 18));\n      }\n    }\n  };\n\n  const setAmountsNLA = async amountOfNLA => {\n    console.log(amountOfNLA);\n\n    if (amountOfNLA === \"\") {\n      setAmountToAddNLA(\"\");\n      setAmountToAddWBNB(\"\");\n    }\n\n    if (parseInt(amountOfNLA) === 0) {\n      setAmountToAddNLA(0);\n      setAmountToAddWBNB(0);\n    } else if (typeof window.ethereum !== 'undefined') {\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      const signer = provider.getSigner();\n\n      if (signer) {\n        const nalaToken = new ethers.Contract(nlaTokenAddress, nalaTokenABI, signer);\n        const nalaRouter = new ethers.Contract(nalaRouterAddress, nalaRouterABI, signer);\n        const amountsOut = await nalaRouter.getAmountsOutTokens(ethers.utils.parseEther(amountOfNLA.toString()), [nlaTokenAddress, wBNBTokenAddress]);\n        console.log(`Amounts out = ${amountsOut[1] / Math.pow(10, 18)}`);\n        setAmountToAddWBNB(amountsOut[1] / Math.pow(10, 18));\n        setAmountToAddNLA(amountOfNLA);\n      }\n    }\n  };\n\n  const findLPTokenAddress = async () => {\n    if (typeof window.ethereum !== 'undefined') {\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      const signer = provider.getSigner();\n\n      if (signer) {\n        const pancakeFactory = new ethers.Contract(pancakeFactoryV2Address, pancakeFactoryABI, signer);\n        const lpTokenAddress = await pancakeFactory.getPair(wBNBTokenAddress, nlaTokenAddress);\n        console.log(\"LP Token address => \", lpTokenAddress);\n        return lpTokenAddress;\n      }\n    }\n  };\n\n  const importTokenToMetamask = async () => {\n    findLPTokenAddress();\n\n    try {\n      const wasAdded = await window.ethereum.request({\n        method: 'wallet_watchAsset',\n        params: {\n          type: 'ERC20',\n          options: {\n            address: await findLPTokenAddress(),\n            symbol: \"WBNB-NLA LP\",\n            decimals: 18,\n            image: \"https://png.pngitem.com/pimgs/s/121-1211195_head-small-to-medium-sized-cats-whiskers-cat.png\"\n          }\n        }\n      });\n\n      if (wasAdded) {\n        setTokenImported(true);\n        console.log('Thanks for your interest!');\n      } else {\n        setTokenImported(false);\n        console.log('NLA LP Token has not been added');\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const getLPTokenBalance = async () => {\n    if (typeof window.ethereum !== 'undefined') {\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      const signer = provider.getSigner();\n\n      if (signer) {\n        const pancakeFactory = new ethers.Contract(pancakeFactoryV2Address, pancakeFactoryABI, signer);\n        const lpTokenAddress = await pancakeFactory.getPair(wBNBTokenAddress, nlaTokenAddress);\n        const lpTokenContract = new ethers.Contract(lpTokenAddress, lpTokenABI, signer);\n        const balance = await lpTokenContract.balanceOf(signer.getAddress());\n        setLPTokenBalance(balance);\n      }\n    }\n  };\n\n  const getReserves = async () => {\n    if (typeof window.ethereum !== 'undefined') {\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      const signer = provider.getSigner();\n\n      if (signer) {\n        const pancakeFactory = new ethers.Contract(pancakeFactoryV2Address, pancakeFactoryABI, signer);\n        const lpTokenAddress = await pancakeFactory.getPair(wBNBTokenAddress, nlaTokenAddress);\n        const lpTokenContract = new ethers.Contract(lpTokenAddress, lpTokenABI, signer);\n        const reserves = await lpTokenContract.getReserves();\n        setReserveWBNB(reserves[0]);\n        setReserveNLA(reserves[1]);\n        console.log(reserves[0] / Math.pow(10, 18));\n        console.log(reserves[1] / Math.pow(10, 18));\n        getTokenPriceInBUSD(reserves[0], reserves[1]);\n      }\n    }\n  };\n\n  const getTokenPriceInBUSD = async (wbnbReserve, nlaReserve) => {\n    if (typeof window.ethereum !== 'undefined') {\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      const signer = provider.getSigner();\n\n      if (signer) {\n        const nalaRouter = new ethers.Contract(nalaRouterAddress, nalaRouterABI, signer);\n        const amountsOut = await nalaRouter.getAmountsOutTokens(ethers.utils.parseEther(\"1\"), [wBNBTokenAddress, nlaTokenAddress]);\n        const amoutOfNLAFor1BNB = amountsOut[1] * Math.pow(10, 18);\n        const nlaPriceInBNB = 1 / amoutOfNLAFor1BNB;\n        console.log(`NLA price in BNB = ${nlaPriceInBNB}`);\n        const bnbPriceInBUSD = await nalaRouter.getAmountsOutTokens(ethers.utils.parseEther(\"1\"), [wBNBTokenAddress, BUSDTokenAddress]);\n        const nlaPriceInBUSD = bnbPriceInBUSD[1] * Math.pow(10, 18) * nlaPriceInBNB;\n        const wbnbValueInBUSD = bnbPriceInBUSD * Math.pow(10, 18) * (wbnbReserve * Math.pow(10, 18));\n        const nlaValueInBUSD = nlaPriceInBUSD * nlaReserve;\n        console.log(\"wbnbValueInBUSD\", wbnbValueInBUSD);\n        console.log(\"nlaValueInBUSD\", nlaValueInBUSD);\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'grid',\n        gap: '20px',\n        padding: '40px 20px',\n        width: \"500px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"section\", {\n        style: {\n          display: 'flex',\n          gap: '20px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Widget, {\n          info: \"WBNB - NLA\",\n          title: \"Pool\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Widget, {\n          info: \"233,182\",\n          title: \"Total liquidity in $\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        style: {\n          display: 'flex',\n          gap: '20px'\n        },\n        children: /*#__PURE__*/_jsxDEV(Widget, {\n          info: (lpTokenBalance / Math.pow(10, 18)).toFixed(6),\n          title: \"Your WBNB-NLA LP Token Balance\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          flexDirection: 'row',\n          justifyContent: 'space-around'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          style: {\n            marginRight: \"25%\"\n          },\n          color: \"secondary\",\n          variant: \"contained\",\n          onClick: () => addLiquidityETH(),\n          children: \"Add liquidity\"\n        }, \"Deposit\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          color: \"secondary\",\n          variant: \"contained\",\n          onClick: () => removeLiquidityETH(),\n          children: \"Remove liquidity\"\n        }, \"Withdraw\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        value: amountToAddWBNB,\n        id: \"outlined-basic\",\n        label: \"Amount of WBNB...\",\n        variant: \"outlined\",\n        size: \"small\",\n        type: \"number\",\n        onChange: e => setAmountsWBNB(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        value: amountToAddNLA,\n        id: \"outlined-basic\",\n        label: \"Amount of NLA...\",\n        variant: \"outlined\",\n        size: \"small\",\n        type: \"number\",\n        onChange: e => setAmountsNLA(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          flexDirection: 'row',\n          justifyContent: 'space-around'\n        },\n        children: tokenImported ? /*#__PURE__*/_jsxDEV(Button, {\n          disabled: true,\n          color: \"info\",\n          variant: \"contained\",\n          children: \"Token imported\"\n        }, \"Deposit\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 21\n        }, this) : /*#__PURE__*/_jsxDEV(Button, {\n          color: \"info\",\n          variant: \"contained\",\n          onClick: () => importTokenToMetamask(),\n          children: \"Import LP Token to metamask\"\n        }, \"Deposit\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 23\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n\n_s(Pools, \"qB+378Pjl+cIr8fSJuUc2beWA2E=\");\n\n_c = Pools;\n\nvar _c;\n\n$RefreshReg$(_c, \"Pools\");","map":{"version":3,"names":["React","useEffect","useState","NalaRouterABI","contractAddresses","tokens","nalaRouterABI","pancakeFactoryABI","lpTokenABI","nalaTokenABI","BigNumber","ethers","Widget","Button","TextField","Pools","nalaRouterAddress","nalaRouterContract","nlaTokenAddress","nalaTokenAddress","wBNBTokenAddress","pancakeFactoryV2Address","BUSDTokenAddress","liquidity","setLiquidity","amountToAddWBNB","setAmountToAddWBNB","amountToAddNLA","setAmountToAddNLA","amountToRemove","setAmountToRemove","reserveWBNB","setReserveWBNB","reserveNLA","setReserveNLA","tokenImported","setTokenImported","lpTokenBalance","setLPTokenBalance","getLPTokenBalance","getReserves","addLiquidityETH","window","ethereum","provider","providers","Web3Provider","signer","getSigner","nalaToken","Contract","nalaRouter","connect","approve","utils","parseEther","toString","value","removeLiquidityETH","amountOfBNB","setAmountsWBNB","console","log","parseInt","amountsOut","getAmountsOutTokens","Math","pow","setAmountsNLA","amountOfNLA","findLPTokenAddress","pancakeFactory","lpTokenAddress","getPair","importTokenToMetamask","wasAdded","request","method","params","type","options","address","symbol","decimals","image","error","lpTokenContract","balance","balanceOf","getAddress","reserves","getTokenPriceInBUSD","wbnbReserve","nlaReserve","amoutOfNLAFor1BNB","nlaPriceInBNB","bnbPriceInBUSD","nlaPriceInBUSD","wbnbValueInBUSD","nlaValueInBUSD","display","gap","padding","width","toFixed","flexDirection","justifyContent","marginRight","e","target"],"sources":["/Users/ja/Desktop/MyProjects/NalaSwap/webapp/nalaswap/src/pages/Pools.js"],"sourcesContent":["import * as React from 'react';\nimport {useEffect, useState} from \"react\";\nimport NalaRouterABI from \"../ABIS/NalaRouter.json\";\nimport contractAddresses from \"../utils/contractsAddresses.json\";\nimport {tokens} from \"../utils/availableTokens\";\nimport nalaRouterABI from \"../ABIS/NalaRouter.json\";\nimport pancakeFactoryABI from \"../ABIS/PancakeFactory.json\";\nimport lpTokenABI from \"../ABIS/LPTokenABI.json\";\nimport nalaTokenABI from \"../ABIS/NalaTokenABI.json\";\nimport { BigNumber, ethers } from 'ethers';\nimport {Widget} from \"web3uikit\";\nimport Button from '@mui/material/Button';\nimport TextField from '@mui/material/TextField';\n\nexport default function Pools () {\n\n    const nalaRouterAddress = contractAddresses.nalaRouterContract;\n    const nlaTokenAddress = contractAddresses.nalaTokenAddress;\n    const wBNBTokenAddress = \"0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c\";\n    const pancakeFactoryV2Address = \"0xcA143Ce32Fe78f1f7019d7d551a6402fC5350c73\";\n    const BUSDTokenAddress = \"0xe9e7cea3dedca5984780bafc599bd69add087d56\";\n\n    const [liquidity, setLiquidity] = useState(0);\n    const [amountToAddWBNB, setAmountToAddWBNB] = useState(0);\n    const [amountToAddNLA, setAmountToAddNLA] = useState(0);\n    const [amountToRemove, setAmountToRemove] = useState(0);\n    const [reserveWBNB, setReserveWBNB] = useState(0);\n    const [reserveNLA, setReserveNLA] = useState(0);\n    const [tokenImported, setTokenImported] = useState(false);\n    const [lpTokenBalance, setLPTokenBalance] = useState(0);\n\n    useEffect(() => {\n        getLPTokenBalance();\n        getReserves();\n    },[])\n   \n    const addLiquidityETH = async () => {\n        if (typeof window.ethereum !== 'undefined') {\n            const provider = new ethers.providers.Web3Provider(window.ethereum)\n            const signer = provider.getSigner();\n            if (signer) {\n                const nalaToken = new ethers.Contract(nlaTokenAddress, nalaTokenABI, signer);\n                const nalaRouter = new ethers.Contract(nalaRouterAddress, nalaRouterABI, signer);\n            \n                await nalaToken.connect(signer).approve(nalaRouterAddress, \"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\");\n                // const factory = await nalaRouter.factory();\n                // console.log(factory);\n                await nalaRouter.connect(signer).addLiquidityETH(\n                    nlaTokenAddress, \n                    ethers.utils.parseEther(amountToAddNLA.toString()),\n                    0, \n                    0, // amountETHMin\n                    {value: ethers.utils.parseEther(amountToAddWBNB.toString())}\n                );\n\n            }\n        }\n    }\n\n    const removeLiquidityETH = async (amountOfBNB) => {\n       \n    }\n\n    const setAmountsWBNB = async (amountOfBNB) => {\n        console.log(amountOfBNB);\n        if(parseInt(amountOfBNB) === 0 || amountOfBNB === \"\") {\n            setAmountToAddNLA(0);\n            setAmountToAddWBNB(0);\n        }\n        else if (typeof window.ethereum !== 'undefined') {\n            const provider = new ethers.providers.Web3Provider(window.ethereum)\n            const signer = provider.getSigner();\n            if (signer) {\n                const nalaToken = new ethers.Contract(nlaTokenAddress, nalaTokenABI, signer);\n                const nalaRouter = new ethers.Contract(nalaRouterAddress, nalaRouterABI, signer);\n\n                const amountsOut = await nalaRouter\n                .getAmountsOutTokens(\n                    ethers.utils.parseEther(amountOfBNB.toString()), \n                    [wBNBTokenAddress, nlaTokenAddress]\n                )\n                console.log(`Amounts out = ${amountsOut[1] / Math.pow(10, 18)}`);\n                \n                setAmountToAddWBNB(amountOfBNB);\n                setAmountToAddNLA(amountsOut[1] / Math.pow(10, 18));\n            }\n        }\n    }\n\n    const setAmountsNLA = async (amountOfNLA) => {\n        console.log(amountOfNLA);\n        if(amountOfNLA === \"\") {\n            setAmountToAddNLA(\"\");\n            setAmountToAddWBNB(\"\");\n        }\n        if(parseInt(amountOfNLA) === 0) {\n            setAmountToAddNLA(0);\n            setAmountToAddWBNB(0);\n        }\n        else if (typeof window.ethereum !== 'undefined') {\n            const provider = new ethers.providers.Web3Provider(window.ethereum)\n            const signer = provider.getSigner();\n            if (signer) {\n                const nalaToken = new ethers.Contract(nlaTokenAddress, nalaTokenABI, signer);\n                const nalaRouter = new ethers.Contract(nalaRouterAddress, nalaRouterABI, signer);\n\n                const amountsOut = await nalaRouter\n                .getAmountsOutTokens(\n                    ethers.utils.parseEther(amountOfNLA.toString()), \n                    [nlaTokenAddress, wBNBTokenAddress]\n                )\n                console.log(`Amounts out = ${amountsOut[1] / Math.pow(10, 18)}`);\n                \n                setAmountToAddWBNB(amountsOut[1] / Math.pow(10, 18));\n                setAmountToAddNLA(amountOfNLA);\n            }\n        }\n    }\n\n    const findLPTokenAddress = async () => {\n        if (typeof window.ethereum !== 'undefined') {\n            const provider = new ethers.providers.Web3Provider(window.ethereum)\n            const signer = provider.getSigner();\n            if (signer) {\n                const pancakeFactory = new ethers.Contract(pancakeFactoryV2Address, pancakeFactoryABI, signer);\n                const lpTokenAddress = await pancakeFactory.getPair(wBNBTokenAddress, nlaTokenAddress);\n                console.log(\"LP Token address => \", lpTokenAddress);\n                return lpTokenAddress;\n            }\n        }\n    }\n\n    const importTokenToMetamask = async () => {\n        findLPTokenAddress();\n        try {\n          const wasAdded = await window.ethereum.request({\n            method: 'wallet_watchAsset',\n            params: {\n              type: 'ERC20', \n              options: {\n                address: await findLPTokenAddress(), \n                symbol: \"WBNB-NLA LP\", \n                decimals: 18, \n                image: \"https://png.pngitem.com/pimgs/s/121-1211195_head-small-to-medium-sized-cats-whiskers-cat.png\", \n              },\n            },\n          });\n          if (wasAdded) {\n            setTokenImported(true);\n            console.log('Thanks for your interest!');\n          } else {\n            setTokenImported(false);\n            console.log('NLA LP Token has not been added');\n          }\n        } catch (error) {\n          console.log(error);\n        }\n    }\n\n    const getLPTokenBalance = async () => {\n        if (typeof window.ethereum !== 'undefined') {\n            const provider = new ethers.providers.Web3Provider(window.ethereum)\n            const signer = provider.getSigner();\n            if (signer) {\n                const pancakeFactory = new ethers.Contract(pancakeFactoryV2Address, pancakeFactoryABI, signer);\n                const lpTokenAddress = await pancakeFactory.getPair(wBNBTokenAddress, nlaTokenAddress);\n                const lpTokenContract = new ethers.Contract(lpTokenAddress, lpTokenABI, signer);\n                const balance = await lpTokenContract.balanceOf(signer.getAddress());\n                setLPTokenBalance(balance)\n            }\n        }\n    }\n\n    const getReserves = async () => {\n        if (typeof window.ethereum !== 'undefined') {\n            const provider = new ethers.providers.Web3Provider(window.ethereum)\n            const signer = provider.getSigner();\n            if (signer) {\n                const pancakeFactory = new ethers.Contract(pancakeFactoryV2Address, pancakeFactoryABI, signer);\n                const lpTokenAddress = await pancakeFactory.getPair(wBNBTokenAddress, nlaTokenAddress);\n                const lpTokenContract = new ethers.Contract(lpTokenAddress, lpTokenABI, signer);\n                const reserves = await lpTokenContract.getReserves();\n                setReserveWBNB(reserves[0]);\n                setReserveNLA(reserves[1])\n                console.log(reserves[0] / Math.pow(10, 18));\n                console.log(reserves[1] / Math.pow(10, 18));\n                getTokenPriceInBUSD(reserves[0], reserves[1])\n            }\n        }\n    }\n\n    const getTokenPriceInBUSD = async (wbnbReserve, nlaReserve) => {\n        if (typeof window.ethereum !== 'undefined') {\n            const provider = new ethers.providers.Web3Provider(window.ethereum)\n            const signer = provider.getSigner()\n            if (signer) {\n                const nalaRouter = new ethers.Contract(nalaRouterAddress, nalaRouterABI, signer);\n                const amountsOut = await nalaRouter\n                .getAmountsOutTokens(\n                    ethers.utils.parseEther(\"1\"), \n                    [wBNBTokenAddress, nlaTokenAddress]\n                )\n\n                const amoutOfNLAFor1BNB = amountsOut[1] * Math.pow(10, 18);\n                const nlaPriceInBNB = 1 / amoutOfNLAFor1BNB;\n\n                console.log(`NLA price in BNB = ${nlaPriceInBNB}`);\n\n                const bnbPriceInBUSD = await nalaRouter\n                .getAmountsOutTokens(\n                    ethers.utils.parseEther(\"1\"), \n                    [wBNBTokenAddress, BUSDTokenAddress]\n                )\n\n                const nlaPriceInBUSD = (bnbPriceInBUSD[1] * Math.pow(10, 18)) * nlaPriceInBNB;\n\n                const wbnbValueInBUSD = (bnbPriceInBUSD * Math.pow(10, 18)) * (wbnbReserve * Math.pow(10, 18));\n                const nlaValueInBUSD = (nlaPriceInBUSD * nlaReserve );\n\n                console.log(\"wbnbValueInBUSD\", wbnbValueInBUSD);\n                console.log(\"nlaValueInBUSD\", nlaValueInBUSD);\n\n            }\n        }\n    }\n\n    return (\n        <>\n            <div style={{ display: 'grid', gap: '20px', padding: '40px 20px', width:\"500px\" }}>\n                <section style={{ display: 'flex', gap: '20px' }}>\n                    <Widget info=\"WBNB - NLA\" title=\"Pool\" />\n                    <Widget info=\"233,182\" title=\"Total liquidity in $\" />\n                </section>\n                <section style={{ display: 'flex', gap: '20px' }}>\n                    <Widget info={(lpTokenBalance / Math.pow(10, 18)).toFixed(6)} title=\"Your WBNB-NLA LP Token Balance\" />\n                    {/* <Widget info={(reserveWBNB / Math.pow(10, 18)).toFixed(2)} title=\"WBNB Reserve\" />\n                    <Widget info={(reserveNLA / Math.pow(10, 18)).toFixed(2)} title=\"NLA Reserve\" /> */}\n                </section>\n                <div style={{display: 'flex', flexDirection: 'row', justifyContent: 'space-around'}}>\n                    <Button style={{marginRight: \"25%\"}} color=\"secondary\" variant=\"contained\" key=\"Deposit\" onClick={() => addLiquidityETH()}>Add liquidity</Button>\n                    <Button color=\"secondary\" variant=\"contained\" key=\"Withdraw\" onClick={() => removeLiquidityETH()}>Remove liquidity</Button>\n                </div>\n                <TextField value={amountToAddWBNB} id=\"outlined-basic\" label=\"Amount of WBNB...\" variant=\"outlined\" size=\"small\" type=\"number\" onChange={(e) => setAmountsWBNB(e.target.value)}/>\n                <TextField value={amountToAddNLA} id=\"outlined-basic\" label=\"Amount of NLA...\" variant=\"outlined\" size=\"small\" type=\"number\" onChange={(e) => setAmountsNLA(e.target.value)}/>\n                <div style={{display: 'flex', flexDirection: 'row', justifyContent: 'space-around'}}>\n                    {tokenImported ?\n                    <Button disabled={true} color=\"info\" variant=\"contained\" key=\"Deposit\">Token imported</Button> \n                    : <Button color=\"info\" variant=\"contained\" key=\"Deposit\" onClick={() => importTokenToMetamask()}>Import LP Token to metamask</Button>}\n                </div>\n            </div>\n        </>\n    )\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}