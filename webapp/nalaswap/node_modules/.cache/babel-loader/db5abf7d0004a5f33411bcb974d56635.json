{"ast":null,"code":"var _jsxFileName = \"/Users/ja/Desktop/MyProjects/NalaSwap/webapp/nalaswap/src/pages/HomePage.js\",\n    _s = $RefreshSig$();\n\nimport * as React from 'react';\nimport TextField from '@mui/material/TextField';\nimport Autocomplete from '@mui/material/Autocomplete';\nimport Box from '@mui/material/Box';\nimport Button from '@mui/material/Button';\nimport InputAdornment from '@mui/material/InputAdornment';\nimport { useEffect, useState, Fragment } from \"react\";\nimport { BigNumber, Contract, ethers, utils } from 'ethers';\nimport NalaRouterAbi from \"../ABIS/NalaRouter.json\";\nimport { tokens } from \"../utils/availableTokens\";\nimport RefreshIcon from '@mui/icons-material/Refresh';\nimport Tooltip from '@mui/material/Tooltip';\nimport { formatUnits } from '@ethersproject/units';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport contractAddresses from \"../utils/contractsAddresses.json\";\nimport { Dropdown } from \"web3uikit\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function HomePage() {\n  _s();\n\n  const [tokenIn, setTokenIn] = useState(tokens[0]);\n  const [tokenOut, setTokenOut] = useState(tokens[1]);\n  const [amountIn, setAmountIn] = useState(0);\n  const [amountOut, setAmountOut] = useState(0);\n  const [tokenInBalance, setTokenInBalance] = useState(0);\n  const [tokenOutBalance, setTokenOutBalance] = useState(0);\n  const [loadingTransaction, setLoadingTransaction] = useState(false);\n  const contractAddress = contractAddresses.nalaRouterContract;\n  useEffect(() => {\n    const getBalances = async () => {\n      setTokenInBalance(await getTokenBalance(tokenIn.address));\n      setTokenOutBalance(await getTokenBalance(tokenOut.address));\n    };\n\n    getBalances();\n  }, []);\n\n  const swapExactTokensForBNB = async (tokenIn, amountIn, signer, nalaRouter) => {\n    setLoadingTransaction(true);\n\n    try {\n      const tokenInContract = new ethers.Contract(tokenIn.address, [\"function approve(address _spender, uint256 _value) public returns (bool success)\"], signer);\n      await tokenInContract.connect(signer).approve(contractAddress, \"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\");\n      const tx = await nalaRouter.connect(signer).swapExactTokensForBNB(tokenIn.address, ethers.utils.parseEther(amountIn.toString()), 0);\n      tx.wait();\n      setLoadingTransaction(false);\n    } catch (error) {\n      console.log(\"Transaction error\");\n      setLoadingTransaction(false);\n    }\n  };\n\n  const swapExactBNBForTokens = async (tokenOut, amountIn, signer, nalaRouter) => {\n    console.log(\"swapExactBNBForTokens\");\n    setLoadingTransaction(true);\n\n    try {\n      const tx = await nalaRouter.connect(signer).swapExactBNBForTokens(0, tokenOut.address, {\n        value: ethers.utils.parseEther(amountIn)\n      });\n      tx.wait();\n      setLoadingTransaction(false);\n    } catch (error) {\n      console.log(\"Transaction error\");\n      setLoadingTransaction(false);\n    }\n  };\n\n  const swapExactTokensForTokens = async (tokenIn, tokenOut, amountIn, signer, nalaRouter) => {\n    setLoadingTransaction(true);\n\n    try {\n      const tokenInContract = new ethers.Contract(tokenIn.address, [\"function approve(address _spender, uint256 _value) public returns (bool success)\"], signer);\n      await tokenInContract.connect(signer).approve(contractAddress, \"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\");\n      const tx = await nalaRouter.connect(signer).swapExactTokensForTokens(ethers.utils.parseEther(amountIn.toString()), 0, [tokenIn.address, tokenOut.address]);\n      tx.wait();\n      setLoadingTransaction(false);\n    } catch (error) {\n      console.log(\"Transaction error\");\n      setLoadingTransaction(false);\n    }\n  };\n\n  const swapTokens = async (tokenIn, tokenOut, amountIn, amountOut) => {\n    if (typeof window.ethereum !== 'undefined') {\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      const signer = provider.getSigner();\n      console.log(signer);\n\n      if (signer) {\n        const contract = new ethers.Contract(contractAddress, NalaRouterAbi, signer);\n\n        if (tokenIn.label === \"BNB\") {\n          swapExactBNBForTokens(tokenOut, amountIn, signer, contract);\n        } else if (tokenOut.label === \"BNB\") {\n          swapExactTokensForBNB(tokenIn, amountIn, signer, contract);\n        } else {\n          swapExactTokensForTokens(tokenIn, tokenOut, amountIn, signer, contract);\n        }\n      }\n    }\n  };\n\n  const switchTokenOrder = async () => {\n    setTokenIn(tokenOut);\n    setTokenOut(tokenIn);\n    setTokenInBalance(await getTokenBalance(tokenOut.address));\n    setTokenOutBalance(await getTokenBalance(tokenIn.address));\n  };\n\n  const getTokenBalance = async tokenAddress => {\n    if (typeof window.ethereum !== 'undefined') {\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      const signer = provider.getSigner();\n\n      if (signer) {\n        const tokenInContract = new ethers.Contract(tokenAddress, [\"function balanceOf(address tokenOwner) public view returns (uint balance)\"], signer);\n        const balance = await tokenInContract.balanceOf(signer.getAddress());\n        console.log(BigNumber.from(balance).toNumber() / Math.pow(10, 18));\n        return (balance / Math.pow(10, 18)).toString();\n      }\n    }\n  };\n\n  const setAmountsToken1 = async amount => {\n    if (amount === \"\") {\n      setAmountToAddNLA(\"\");\n      setAmountToAddWBNB(\"\");\n    }\n\n    if (parseInt(amount) === 0) {\n      setAmountToAddNLA(0);\n      setAmountToAddWBNB(0);\n    } else if (typeof window.ethereum !== 'undefined') {\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      const signer = provider.getSigner();\n\n      if (signer) {\n        const pancakeRouterV2 = new ethers.Contract(\"0x10ED43C718714eb63d5aA57B78B54704E256024E\", [\"function getAmountsOut(uint amountIn, address[] calldata path) external view returns (uint[] memory amounts)\"], signer);\n        setAmountIn(amount);\n        const tokenOutAmount = await pancakeRouterV2.getAmountsOut(ethers.utils.parseEther(amount.toString()), [tokenIn.address, tokenOut.address]);\n        setAmountOut(formatUnits(BigNumber.from(tokenOutAmount[1].toString(), 18)));\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      component: \"form\",\n      sx: {\n        '& > :not(style)': {\n          m: 1,\n          width: '25ch'\n        }\n      },\n      noValidate: true,\n      autoComplete: \"off\",\n      style: {\n        borderRadius: \"10px\",\n        border: \"2px solid #502199\",\n        marginBottom: \"5%\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Autocomplete, {\n        disablePortal: true,\n        id: \"selectBox1\",\n        options: tokens.filter(token => token.address !== tokenOut.address),\n        sx: {\n          width: 300\n        },\n        renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n          label: `Balance: ${tokenInBalance}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 46\n        }, this),\n        style: {\n          border: \"1px solid #502199\",\n          borderRadius: \"10px\"\n        },\n        value: tokenIn.label ? tokenIn.label : \"BNB\",\n        onChange: async (event, newValue) => {\n          if (newValue.address !== tokenOut.address) {\n            setTokenIn(newValue);\n            setTokenInBalance(await getTokenBalance(newValue.address)); // console.log(tokenInBalance);\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        id: \"amountIn\",\n        type: \"number\",\n        placeholder: \"0.0\",\n        variant: \"outlined\",\n        value: amountIn,\n        InputProps: {\n          startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n            position: \"start\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: tokenIn.image ? tokenIn.image : \"https://seeklogo.com/images/B/binance-coin-bnb-logo-97F9D55608-seeklogo.com.png\",\n              style: {\n                width: \"25px\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 27\n          }, this)\n        },\n        onChange: async e => {\n          setAmountsToken1(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Tooltip, {\n          title: \"Switch token order\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => switchTokenOrder(),\n            variant: \"text\",\n            children: /*#__PURE__*/_jsxDEV(RefreshIcon, {\n              sx: {\n                color: \"#FFEF00\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 79\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Autocomplete, {\n        disablePortal: true,\n        id: \"selectBox2\",\n        options: tokens.filter(token => token.address !== tokenIn.address),\n        sx: {\n          width: \"80%\"\n        },\n        renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n          label: `Balance: ${tokenOutBalance}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 46\n        }, this),\n        style: {\n          border: \"1px solid #502199\",\n          borderRadius: \"10px\"\n        },\n        value: tokenOut.label ? tokenOut.label : \"BANANA\",\n        onChange: async (event, newValue) => {\n          if (newValue.address !== tokenIn.address) {\n            setTokenOut(newValue);\n            setTokenOutBalance(await getTokenBalance(newValue.address));\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        id: \"amountOut\",\n        type: \"number\",\n        placeholder: \"0.0\",\n        variant: \"outlined\",\n        value: amountOut,\n        InputProps: {\n          startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n            position: \"start\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: tokenOut.image ? tokenOut.image : \"https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/smartchain/assets/0x603c7f932ED1fc6575303D8Fb018fDCBb0f39a95/logo.png\",\n              style: {\n                width: \"25px\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 27\n          }, this)\n        },\n        onChange: (e, newValue) => {\n          console.log(e.target.value);\n          setAmountOut(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: () => swapTokens(tokenIn, tokenOut, amountIn, amountOut),\n      variant: \"contained\",\n      style: {\n        background: \"black\",\n        width: \"100%\",\n        color: \"#e3d476\"\n      },\n      children: loadingTransaction ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n        sx: {\n          color: \"yellow\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 39\n      }, this) : \"Swap tokens\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(HomePage, \"NubcPH+NSJBIRPW+WqA0zAy+0XM=\");\n\n_c = HomePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"names":["React","TextField","Autocomplete","Box","Button","InputAdornment","useEffect","useState","Fragment","BigNumber","Contract","ethers","utils","NalaRouterAbi","tokens","RefreshIcon","Tooltip","formatUnits","CircularProgress","contractAddresses","Dropdown","HomePage","tokenIn","setTokenIn","tokenOut","setTokenOut","amountIn","setAmountIn","amountOut","setAmountOut","tokenInBalance","setTokenInBalance","tokenOutBalance","setTokenOutBalance","loadingTransaction","setLoadingTransaction","contractAddress","nalaRouterContract","getBalances","getTokenBalance","address","swapExactTokensForBNB","signer","nalaRouter","tokenInContract","connect","approve","tx","parseEther","toString","wait","error","console","log","swapExactBNBForTokens","value","swapExactTokensForTokens","swapTokens","window","ethereum","provider","providers","Web3Provider","getSigner","contract","label","switchTokenOrder","tokenAddress","balance","balanceOf","getAddress","from","toNumber","Math","pow","setAmountsToken1","amount","setAmountToAddNLA","setAmountToAddWBNB","parseInt","pancakeRouterV2","tokenOutAmount","getAmountsOut","m","width","borderRadius","border","marginBottom","filter","token","params","event","newValue","startAdornment","image","e","target","color","background"],"sources":["/Users/ja/Desktop/MyProjects/NalaSwap/webapp/nalaswap/src/pages/HomePage.js"],"sourcesContent":["import * as React from 'react';\nimport TextField from '@mui/material/TextField';\nimport Autocomplete from '@mui/material/Autocomplete';\nimport Box from '@mui/material/Box';\nimport Button from '@mui/material/Button';\nimport InputAdornment from '@mui/material/InputAdornment';\nimport {useEffect, useState, Fragment} from \"react\";\nimport { BigNumber, Contract, ethers, utils } from 'ethers';\nimport NalaRouterAbi from \"../ABIS/NalaRouter.json\"\nimport {tokens} from \"../utils/availableTokens\";\nimport RefreshIcon from '@mui/icons-material/Refresh';\nimport Tooltip from '@mui/material/Tooltip';\nimport { formatUnits } from '@ethersproject/units';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport contractAddresses from \"../utils/contractsAddresses.json\";\nimport {Dropdown} from \"web3uikit\";\n\nexport default function HomePage () {\n\n    const [tokenIn, setTokenIn] = useState(tokens[0]);\n    const [tokenOut, setTokenOut] = useState(tokens[1]);\n\n    const [amountIn, setAmountIn] = useState(0);\n    const [amountOut, setAmountOut] = useState(0);\n\n    const [tokenInBalance, setTokenInBalance] = useState(0);\n    const [tokenOutBalance, setTokenOutBalance] = useState(0);\n\n    const [loadingTransaction, setLoadingTransaction] = useState(false);\n\n    const contractAddress = contractAddresses.nalaRouterContract;\n\n    useEffect(() => {\n        const getBalances = async () => {\n            setTokenInBalance(await getTokenBalance(tokenIn.address));\n            setTokenOutBalance(await getTokenBalance(tokenOut.address));\n        }\n       getBalances();\n    },[]);\n\n    const swapExactTokensForBNB = async (tokenIn, amountIn, signer, nalaRouter) => {\n        setLoadingTransaction(true);\n        try {\n            const tokenInContract = new ethers.Contract(tokenIn.address, [\"function approve(address _spender, uint256 _value) public returns (bool success)\"], signer)\n            await tokenInContract.connect(signer).approve(contractAddress, \"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\")\n            const tx = await nalaRouter.connect(signer).swapExactTokensForBNB(\n                tokenIn.address, \n                ethers.utils.parseEther(amountIn.toString()),\n                0,\n            )\n            tx.wait();\n            setLoadingTransaction(false);\n        } catch (error) {\n            console.log(\"Transaction error\");\n            setLoadingTransaction(false);\n        }\n    }\n\n    const swapExactBNBForTokens = async (tokenOut, amountIn, signer, nalaRouter) => {\n        console.log(\"swapExactBNBForTokens\");\n        setLoadingTransaction(true);\n        try {\n            const tx = await nalaRouter\n                .connect(signer)\n                .swapExactBNBForTokens(\n                    0, \n                    tokenOut.address, \n                    { value: ethers.utils.parseEther(amountIn)}\n                );\n            tx.wait();\n            setLoadingTransaction(false);\n        } catch (error) {\n            console.log(\"Transaction error\");\n            setLoadingTransaction(false);\n        }\n        \n    }\n\n    const swapExactTokensForTokens = async (tokenIn, tokenOut, amountIn, signer, nalaRouter) => {\n        setLoadingTransaction(true);\n        try {\n            const tokenInContract = new ethers.Contract(tokenIn.address, [\"function approve(address _spender, uint256 _value) public returns (bool success)\"], signer)\n            await tokenInContract.connect(signer).approve(contractAddress, \"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\")\n            const tx = await nalaRouter.connect(signer).swapExactTokensForTokens(\n                ethers.utils.parseEther(amountIn.toString()),\n                0,\n                [tokenIn.address, tokenOut.address]\n            )\n            tx.wait();\n            setLoadingTransaction(false);\n        } catch (error) {\n            console.log(\"Transaction error\");\n            setLoadingTransaction(false);\n        }\n    }\n\n    const swapTokens = async (tokenIn, tokenOut, amountIn, amountOut) => {\n        if (typeof window.ethereum !== 'undefined') {\n            const provider = new ethers.providers.Web3Provider(window.ethereum)\n            const signer = provider.getSigner()\n            console.log(signer);\n            if (signer) {\n              const contract = new ethers.Contract(contractAddress, NalaRouterAbi, signer)\n              if(tokenIn.label === \"BNB\") {\n                swapExactBNBForTokens(tokenOut, amountIn, signer, contract);\n              } else if (tokenOut.label === \"BNB\") {\n                swapExactTokensForBNB(tokenIn, amountIn, signer, contract);\n              } else {\n                swapExactTokensForTokens(tokenIn, tokenOut, amountIn, signer, contract);\n              }\n            }\n        }\n    }\n\n    const switchTokenOrder = async () => {\n        setTokenIn(tokenOut);\n        setTokenOut(tokenIn);\n        setTokenInBalance(await getTokenBalance(tokenOut.address))\n        setTokenOutBalance(await getTokenBalance(tokenIn.address))\n    }\n\n    const getTokenBalance = async (tokenAddress) => {\n        if (typeof window.ethereum !== 'undefined') {\n            const provider = new ethers.providers.Web3Provider(window.ethereum)\n            const signer = provider.getSigner();\n            if (signer) {\n                const tokenInContract = new ethers.Contract(tokenAddress, [\"function balanceOf(address tokenOwner) public view returns (uint balance)\"], signer);\n                const balance = await tokenInContract.balanceOf(signer.getAddress());\n                console.log(BigNumber.from(balance).toNumber() / Math.pow(10, 18));\n                return (balance / Math.pow(10, 18)).toString();\n            }\n        }\n    }\n\n    const setAmountsToken1 = async (amount) => {\n        if(amount === \"\") {\n            setAmountToAddNLA(\"\");\n            setAmountToAddWBNB(\"\");\n        }\n        if(parseInt(amount) === 0) {\n            setAmountToAddNLA(0);\n            setAmountToAddWBNB(0);\n        } else if (typeof window.ethereum !== 'undefined') {\n            const provider = new ethers.providers.Web3Provider(window.ethereum)\n            const signer = provider.getSigner();\n            if (signer) {\n                const pancakeRouterV2 = new ethers.Contract(\"0x10ED43C718714eb63d5aA57B78B54704E256024E\", [\"function getAmountsOut(uint amountIn, address[] calldata path) external view returns (uint[] memory amounts)\"], signer);\n                setAmountIn(amount);\n                const tokenOutAmount = await pancakeRouterV2\n                    .getAmountsOut(\n                        ethers.utils.parseEther(amount.toString()), \n                        [tokenIn.address, tokenOut.address]\n                    )\n                setAmountOut(formatUnits(BigNumber.from(tokenOutAmount[1].toString(), 18)))\n            }\n        }\n    }\n\n    return (\n        <>\n            <Box\n                component=\"form\"\n                sx={{\n                    '& > :not(style)': { m: 1, width: '25ch'},\n                }}\n                noValidate\n                autoComplete=\"off\"\n                style={{borderRadius:\"10px\", border:\"2px solid #502199\", marginBottom:\"5%\"}}\n                >\n                <Autocomplete\n                    disablePortal\n                    id=\"selectBox1\"\n                    options={tokens.filter(token => token.address !== tokenOut.address)}\n                    sx={{ width: 300 }}\n                    renderInput={(params) => <TextField {...params} label={`Balance: ${tokenInBalance}`} /> }\n                    style={{border:\"1px solid #502199\", borderRadius: \"10px\"}}\n                    value={tokenIn.label ? tokenIn.label : \"BNB\"}\n                    onChange={async (event, newValue) => {\n                        if(newValue.address !== tokenOut.address) {\n                            setTokenIn(newValue);\n                            setTokenInBalance(await getTokenBalance(newValue.address));\n                            // console.log(tokenInBalance);\n                        } \n                    }}\n                />\n                <TextField \n                    id=\"amountIn\" \n                    type=\"number\" \n                    placeholder=\"0.0\" \n                    variant=\"outlined\" \n                    value={amountIn}\n                    InputProps={{\n                        startAdornment: (\n                          <InputAdornment position=\"start\">\n                            <img src={tokenIn.image ? tokenIn.image : \"https://seeklogo.com/images/B/binance-coin-bnb-logo-97F9D55608-seeklogo.com.png\"} style={{width:\"25px\"}}/>\n                          </InputAdornment>\n                        ),\n                      }}\n                    onChange={async (e) => {\n                        setAmountsToken1(e.target.value)\n                    }}\n                />\n                <div>\n                <Tooltip title=\"Switch token order\"> \n                    <Button onClick={() => switchTokenOrder()} variant=\"text\"><RefreshIcon sx={{ color:\"#FFEF00\"}}/></Button>\n                </Tooltip>\n                </div>\n                <Autocomplete\n                    disablePortal\n                    id=\"selectBox2\"\n                    options={tokens.filter(token => token.address !== tokenIn.address)}\n                    sx={{ width: \"80%\" }}\n                    renderInput={(params) => <TextField {...params} label={`Balance: ${tokenOutBalance}`} />}\n                    style={{border:\"1px solid #502199\", borderRadius: \"10px\"}}\n                    value={tokenOut.label ? tokenOut.label : \"BANANA\"}\n                    onChange={async (event, newValue) => {\n                        if(newValue.address !== tokenIn.address) {\n                            setTokenOut(newValue);\n                            setTokenOutBalance(await getTokenBalance(newValue.address));\n                        } \n                    }}\n                />\n                <TextField \n                    id=\"amountOut\" \n                    type=\"number\" \n                    placeholder=\"0.0\" \n                    variant=\"outlined\" \n                    value={amountOut}\n                    InputProps={{\n                        startAdornment: (\n                          <InputAdornment position=\"start\">\n                            <img src={tokenOut.image ? tokenOut.image : \"https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/smartchain/assets/0x603c7f932ED1fc6575303D8Fb018fDCBb0f39a95/logo.png\"} style={{width:\"25px\"}}/>\n                          </InputAdornment>\n                        ),\n                      }}\n                    onChange={(e, newValue) => {\n                        console.log(e.target.value);\n                        setAmountOut(e.target.value);\n                    }}\n                />\n            </Box>\n            <Button \n                onClick={() => swapTokens(tokenIn, tokenOut, amountIn, amountOut)} \n                variant=\"contained\" \n                style={{background: \"black\", width: \"100%\", color: \"#e3d476\"}}\n            >\n                {loadingTransaction ? <CircularProgress sx={{color:\"yellow\"}}/> : \"Swap tokens\"}\n            </Button>\n        </>\n        \n    )\n\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}