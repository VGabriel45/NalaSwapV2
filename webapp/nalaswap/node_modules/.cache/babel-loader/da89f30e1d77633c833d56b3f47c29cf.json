{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.DependencyGraph = void 0;\n\nclass DependencyGraph {\n  constructor() {\n    this._resolvedFiles = new Map();\n    this._dependenciesPerFile = new Map();\n    this._visitedFiles = new Set();\n  }\n\n  static async createFromResolvedFiles(resolver, resolvedFiles) {\n    const graph = new DependencyGraph();\n\n    for (const resolvedFile of resolvedFiles) {\n      await graph._addDependenciesFrom(resolver, resolvedFile);\n    }\n\n    return graph;\n  }\n\n  getResolvedFiles() {\n    return Array.from(this._resolvedFiles.values());\n  }\n\n  has(file) {\n    return this._resolvedFiles.has(file.sourceName);\n  }\n\n  isEmpty() {\n    return this._resolvedFiles.size === 0;\n  }\n\n  entries() {\n    return Array.from(this._dependenciesPerFile.entries()).map(_ref => {\n      let [key, value] = _ref;\n      return [this._resolvedFiles.get(key), value];\n    });\n  }\n\n  getDependencies(file) {\n    var _a;\n\n    const dependencies = (_a = this._dependenciesPerFile.get(file.sourceName)) !== null && _a !== void 0 ? _a : new Set();\n    return [...dependencies];\n  }\n\n  getTransitiveDependencies(file) {\n    const visited = new Set();\n\n    const transitiveDependencies = this._getTransitiveDependencies(file, visited, []);\n\n    return [...transitiveDependencies];\n  }\n\n  getConnectedComponents() {\n    var _a, _b;\n\n    const undirectedGraph = {};\n\n    for (const [sourceName, dependencies] of this._dependenciesPerFile.entries()) {\n      undirectedGraph[sourceName] = (_a = undirectedGraph[sourceName]) !== null && _a !== void 0 ? _a : new Set();\n\n      for (const dependency of dependencies) {\n        undirectedGraph[dependency.sourceName] = (_b = undirectedGraph[dependency.sourceName]) !== null && _b !== void 0 ? _b : new Set();\n        undirectedGraph[sourceName].add(dependency.sourceName);\n        undirectedGraph[dependency.sourceName].add(sourceName);\n      }\n    }\n\n    const components = [];\n    const visited = new Set();\n\n    for (const node of Object.keys(undirectedGraph)) {\n      if (visited.has(node)) {\n        continue;\n      }\n\n      visited.add(node);\n      const component = new Set([node]);\n      const stack = [...undirectedGraph[node]];\n\n      while (stack.length > 0) {\n        const newNode = stack.pop();\n\n        if (visited.has(newNode)) {\n          continue;\n        }\n\n        visited.add(newNode);\n        component.add(newNode);\n        [...undirectedGraph[newNode]].forEach(adjacent => {\n          if (!visited.has(adjacent)) {\n            stack.push(adjacent);\n          }\n        });\n      }\n\n      components.push(component);\n    }\n\n    const connectedComponents = [];\n\n    for (const component of components) {\n      const dependencyGraph = new DependencyGraph();\n\n      for (const sourceName of component) {\n        const file = this._resolvedFiles.get(sourceName);\n\n        const dependencies = this._dependenciesPerFile.get(sourceName);\n\n        dependencyGraph._resolvedFiles.set(sourceName, file);\n\n        dependencyGraph._dependenciesPerFile.set(sourceName, dependencies);\n      }\n\n      connectedComponents.push(dependencyGraph);\n    }\n\n    return connectedComponents;\n  }\n\n  _getTransitiveDependencies(file, visited, path) {\n    if (visited.has(file)) {\n      return new Set();\n    }\n\n    visited.add(file);\n    const directDependencies = this.getDependencies(file).map(dependency => ({\n      dependency,\n      path\n    }));\n    const transitiveDependencies = new Set(directDependencies);\n\n    for (const {\n      dependency\n    } of transitiveDependencies) {\n      this._getTransitiveDependencies(dependency, visited, path.concat(dependency)).forEach(x => transitiveDependencies.add(x));\n    }\n\n    return transitiveDependencies;\n  }\n\n  async _addDependenciesFrom(resolver, file) {\n    if (this._visitedFiles.has(file.absolutePath)) {\n      return;\n    }\n\n    this._visitedFiles.add(file.absolutePath);\n\n    const dependencies = new Set();\n\n    this._resolvedFiles.set(file.sourceName, file);\n\n    this._dependenciesPerFile.set(file.sourceName, dependencies);\n\n    for (const imp of file.content.imports) {\n      const dependency = await resolver.resolveImport(file, imp);\n      dependencies.add(dependency);\n      await this._addDependenciesFrom(resolver, dependency);\n    }\n  }\n\n}\n\nexports.DependencyGraph = DependencyGraph;","map":{"version":3,"mappings":"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","names":["DependencyGraph","constructor","Map","Set","createFromResolvedFiles","resolver","resolvedFiles","graph","resolvedFile","_addDependenciesFrom","getResolvedFiles","Array","from","_resolvedFiles","values","has","file","sourceName","isEmpty","size","entries","_dependenciesPerFile","map","key","value","get","getDependencies","dependencies","_a","getTransitiveDependencies","visited","transitiveDependencies","_getTransitiveDependencies","getConnectedComponents","undirectedGraph","dependency","_b","add","components","node","Object","keys","component","stack","length","newNode","pop","forEach","adjacent","push","connectedComponents","dependencyGraph","set","path","directDependencies","concat","x","_visitedFiles","absolutePath","imp","content","imports","resolveImport","exports"],"sourceRoot":"","sources":["../../src/internal/solidity/dependencyGraph.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}