{"ast":null,"code":"'use strict';\n\nconst {\n  InvalidArgumentError,\n  NotSupportedError\n} = require('./errors');\n\nconst util = require('./util');\n\nconst assert = require('assert');\n\nconst kHandler = Symbol('handler');\nconst channels = {};\n\ntry {\n  const diagnosticsChannel = require('diagnostics_channel');\n\n  channels.create = diagnosticsChannel.channel('undici:request:create');\n  channels.bodySent = diagnosticsChannel.channel('undici:request:bodySent');\n  channels.headers = diagnosticsChannel.channel('undici:request:headers');\n  channels.trailers = diagnosticsChannel.channel('undici:request:trailers');\n  channels.error = diagnosticsChannel.channel('undici:request:error');\n} catch {\n  channels.create = {\n    hasSubscribers: false\n  };\n  channels.bodySent = {\n    hasSubscribers: false\n  };\n  channels.headers = {\n    hasSubscribers: false\n  };\n  channels.trailers = {\n    hasSubscribers: false\n  };\n  channels.error = {\n    hasSubscribers: false\n  };\n}\n\nclass Request {\n  constructor(origin, _ref, handler) {\n    let {\n      path,\n      method,\n      body,\n      headers,\n      idempotent,\n      blocking,\n      upgrade,\n      headersTimeout,\n      bodyTimeout\n    } = _ref;\n\n    if (typeof path !== 'string') {\n      throw new InvalidArgumentError('path must be a string');\n    } else if (path[0] !== '/' && !(path.startsWith('http://') || path.startsWith('https://'))) {\n      throw new InvalidArgumentError('path must be an absolute URL or start with a slash');\n    }\n\n    if (typeof method !== 'string') {\n      throw new InvalidArgumentError('method must be a string');\n    }\n\n    if (upgrade && typeof upgrade !== 'string') {\n      throw new InvalidArgumentError('upgrade must be a string');\n    }\n\n    if (headersTimeout != null && (!Number.isFinite(headersTimeout) || headersTimeout < 0)) {\n      throw new InvalidArgumentError('invalid headersTimeout');\n    }\n\n    if (bodyTimeout != null && (!Number.isFinite(bodyTimeout) || bodyTimeout < 0)) {\n      throw new InvalidArgumentError('invalid bodyTimeout');\n    }\n\n    this.headersTimeout = headersTimeout;\n    this.bodyTimeout = bodyTimeout;\n    this.method = method;\n\n    if (body == null) {\n      this.body = null;\n    } else if (util.isStream(body)) {\n      this.body = body;\n    } else if (body instanceof DataView) {\n      // TODO: Why is DataView special?\n      this.body = body.buffer.byteLength ? Buffer.from(body.buffer) : null;\n    } else if (body instanceof ArrayBuffer || ArrayBuffer.isView(body)) {\n      this.body = body.byteLength ? Buffer.from(body) : null;\n    } else if (util.isBuffer(body)) {\n      this.body = body.byteLength ? body : null;\n    } else if (typeof body === 'string') {\n      this.body = body.length ? Buffer.from(body) : null;\n    } else if (util.isIterable(body) || util.isBlobLike(body)) {\n      this.body = body;\n    } else {\n      throw new InvalidArgumentError('body must be a string, a Buffer, a Readable stream, an iterable, or an async iterable');\n    }\n\n    this.completed = false;\n    this.aborted = false;\n    this.upgrade = upgrade || null;\n    this.path = path;\n    this.origin = origin;\n    this.idempotent = idempotent == null ? method === 'HEAD' || method === 'GET' : idempotent;\n    this.blocking = blocking == null ? false : blocking;\n    this.host = null;\n    this.contentLength = null;\n    this.contentType = null;\n    this.headers = '';\n\n    if (Array.isArray(headers)) {\n      if (headers.length % 2 !== 0) {\n        throw new InvalidArgumentError('headers array must be even');\n      }\n\n      for (let i = 0; i < headers.length; i += 2) {\n        processHeader(this, headers[i], headers[i + 1]);\n      }\n    } else if (headers && typeof headers === 'object') {\n      const keys = Object.keys(headers);\n\n      for (let i = 0; i < keys.length; i++) {\n        const key = keys[i];\n        processHeader(this, key, headers[key]);\n      }\n    } else if (headers != null) {\n      throw new InvalidArgumentError('headers must be an object or an array');\n    }\n\n    if (util.isBlobLike(body) && this.contentType == null && body.type) {\n      this.contentType = body.type;\n      this.headers += `content-type: ${body.type}\\r\\n`;\n    }\n\n    util.validateHandler(handler, method, upgrade);\n    this.servername = util.getServerName(this.host);\n    this[kHandler] = handler;\n\n    if (channels.create.hasSubscribers) {\n      channels.create.publish({\n        request: this\n      });\n    }\n  }\n\n  onBodySent(chunk) {\n    if (this[kHandler].onBodySent) {\n      try {\n        this[kHandler].onBodySent(chunk);\n      } catch (err) {\n        this.onError(err);\n      }\n    }\n  }\n\n  onRequestSent() {\n    if (channels.bodySent.hasSubscribers) {\n      channels.bodySent.publish({\n        request: this\n      });\n    }\n  }\n\n  onConnect(abort) {\n    assert(!this.aborted);\n    assert(!this.completed);\n    return this[kHandler].onConnect(abort);\n  }\n\n  onHeaders(statusCode, headers, resume, statusText) {\n    assert(!this.aborted);\n    assert(!this.completed);\n\n    if (channels.headers.hasSubscribers) {\n      channels.headers.publish({\n        request: this,\n        response: {\n          statusCode,\n          headers,\n          statusText\n        }\n      });\n    }\n\n    return this[kHandler].onHeaders(statusCode, headers, resume, statusText);\n  }\n\n  onData(chunk) {\n    assert(!this.aborted);\n    assert(!this.completed);\n    return this[kHandler].onData(chunk);\n  }\n\n  onUpgrade(statusCode, headers, socket) {\n    assert(!this.aborted);\n    assert(!this.completed);\n    return this[kHandler].onUpgrade(statusCode, headers, socket);\n  }\n\n  onComplete(trailers) {\n    assert(!this.aborted);\n    this.completed = true;\n\n    if (channels.trailers.hasSubscribers) {\n      channels.trailers.publish({\n        request: this,\n        trailers\n      });\n    }\n\n    return this[kHandler].onComplete(trailers);\n  }\n\n  onError(error) {\n    if (channels.error.hasSubscribers) {\n      channels.error.publish({\n        request: this,\n        error\n      });\n    }\n\n    if (this.aborted) {\n      return;\n    }\n\n    this.aborted = true;\n    return this[kHandler].onError(error);\n  }\n\n  addHeader(key, value) {\n    processHeader(this, key, value);\n    return this;\n  }\n\n}\n\nfunction processHeader(request, key, val) {\n  if (val && typeof val === 'object') {\n    throw new InvalidArgumentError(`invalid ${key} header`);\n  } else if (val === undefined) {\n    return;\n  }\n\n  if (request.host === null && key.length === 4 && key.toLowerCase() === 'host') {\n    // Consumed by Client\n    request.host = val;\n  } else if (request.contentLength === null && key.length === 14 && key.toLowerCase() === 'content-length') {\n    request.contentLength = parseInt(val, 10);\n\n    if (!Number.isFinite(request.contentLength)) {\n      throw new InvalidArgumentError('invalid content-length header');\n    }\n  } else if (request.contentType === null && key.length === 12 && key.toLowerCase() === 'content-type') {\n    request.contentType = val;\n    request.headers += `${key}: ${val}\\r\\n`;\n  } else if (key.length === 17 && key.toLowerCase() === 'transfer-encoding') {\n    throw new InvalidArgumentError('invalid transfer-encoding header');\n  } else if (key.length === 10 && key.toLowerCase() === 'connection') {\n    throw new InvalidArgumentError('invalid connection header');\n  } else if (key.length === 10 && key.toLowerCase() === 'keep-alive') {\n    throw new InvalidArgumentError('invalid keep-alive header');\n  } else if (key.length === 7 && key.toLowerCase() === 'upgrade') {\n    throw new InvalidArgumentError('invalid upgrade header');\n  } else if (key.length === 6 && key.toLowerCase() === 'expect') {\n    throw new NotSupportedError('expect header not supported');\n  } else {\n    request.headers += `${key}: ${val}\\r\\n`;\n  }\n}\n\nmodule.exports = Request;","map":{"version":3,"names":["InvalidArgumentError","NotSupportedError","require","util","assert","kHandler","Symbol","channels","diagnosticsChannel","create","channel","bodySent","headers","trailers","error","hasSubscribers","Request","constructor","origin","handler","path","method","body","idempotent","blocking","upgrade","headersTimeout","bodyTimeout","startsWith","Number","isFinite","isStream","DataView","buffer","byteLength","Buffer","from","ArrayBuffer","isView","isBuffer","length","isIterable","isBlobLike","completed","aborted","host","contentLength","contentType","Array","isArray","i","processHeader","keys","Object","key","type","validateHandler","servername","getServerName","publish","request","onBodySent","chunk","err","onError","onRequestSent","onConnect","abort","onHeaders","statusCode","resume","statusText","response","onData","onUpgrade","socket","onComplete","addHeader","value","val","undefined","toLowerCase","parseInt","module","exports"],"sources":["/Users/ja/Desktop/MyProjects/NalaSwap/webapp/nalaswap/node_modules/undici/lib/core/request.js"],"sourcesContent":["'use strict'\n\nconst {\n  InvalidArgumentError,\n  NotSupportedError\n} = require('./errors')\nconst util = require('./util')\nconst assert = require('assert')\n\nconst kHandler = Symbol('handler')\n\nconst channels = {}\n\ntry {\n  const diagnosticsChannel = require('diagnostics_channel')\n  channels.create = diagnosticsChannel.channel('undici:request:create')\n  channels.bodySent = diagnosticsChannel.channel('undici:request:bodySent')\n  channels.headers = diagnosticsChannel.channel('undici:request:headers')\n  channels.trailers = diagnosticsChannel.channel('undici:request:trailers')\n  channels.error = diagnosticsChannel.channel('undici:request:error')\n} catch {\n  channels.create = { hasSubscribers: false }\n  channels.bodySent = { hasSubscribers: false }\n  channels.headers = { hasSubscribers: false }\n  channels.trailers = { hasSubscribers: false }\n  channels.error = { hasSubscribers: false }\n}\n\nclass Request {\n  constructor (origin, {\n    path,\n    method,\n    body,\n    headers,\n    idempotent,\n    blocking,\n    upgrade,\n    headersTimeout,\n    bodyTimeout\n  }, handler) {\n    if (typeof path !== 'string') {\n      throw new InvalidArgumentError('path must be a string')\n    } else if (path[0] !== '/' && !(path.startsWith('http://') || path.startsWith('https://'))) {\n      throw new InvalidArgumentError('path must be an absolute URL or start with a slash')\n    }\n\n    if (typeof method !== 'string') {\n      throw new InvalidArgumentError('method must be a string')\n    }\n\n    if (upgrade && typeof upgrade !== 'string') {\n      throw new InvalidArgumentError('upgrade must be a string')\n    }\n\n    if (headersTimeout != null && (!Number.isFinite(headersTimeout) || headersTimeout < 0)) {\n      throw new InvalidArgumentError('invalid headersTimeout')\n    }\n\n    if (bodyTimeout != null && (!Number.isFinite(bodyTimeout) || bodyTimeout < 0)) {\n      throw new InvalidArgumentError('invalid bodyTimeout')\n    }\n\n    this.headersTimeout = headersTimeout\n\n    this.bodyTimeout = bodyTimeout\n\n    this.method = method\n\n    if (body == null) {\n      this.body = null\n    } else if (util.isStream(body)) {\n      this.body = body\n    } else if (body instanceof DataView) {\n      // TODO: Why is DataView special?\n      this.body = body.buffer.byteLength ? Buffer.from(body.buffer) : null\n    } else if (body instanceof ArrayBuffer || ArrayBuffer.isView(body)) {\n      this.body = body.byteLength ? Buffer.from(body) : null\n    } else if (util.isBuffer(body)) {\n      this.body = body.byteLength ? body : null\n    } else if (typeof body === 'string') {\n      this.body = body.length ? Buffer.from(body) : null\n    } else if (util.isIterable(body) || util.isBlobLike(body)) {\n      this.body = body\n    } else {\n      throw new InvalidArgumentError('body must be a string, a Buffer, a Readable stream, an iterable, or an async iterable')\n    }\n\n    this.completed = false\n\n    this.aborted = false\n\n    this.upgrade = upgrade || null\n\n    this.path = path\n\n    this.origin = origin\n\n    this.idempotent = idempotent == null\n      ? method === 'HEAD' || method === 'GET'\n      : idempotent\n\n    this.blocking = blocking == null ? false : blocking\n\n    this.host = null\n\n    this.contentLength = null\n\n    this.contentType = null\n\n    this.headers = ''\n\n    if (Array.isArray(headers)) {\n      if (headers.length % 2 !== 0) {\n        throw new InvalidArgumentError('headers array must be even')\n      }\n      for (let i = 0; i < headers.length; i += 2) {\n        processHeader(this, headers[i], headers[i + 1])\n      }\n    } else if (headers && typeof headers === 'object') {\n      const keys = Object.keys(headers)\n      for (let i = 0; i < keys.length; i++) {\n        const key = keys[i]\n        processHeader(this, key, headers[key])\n      }\n    } else if (headers != null) {\n      throw new InvalidArgumentError('headers must be an object or an array')\n    }\n\n    if (util.isBlobLike(body) && this.contentType == null && body.type) {\n      this.contentType = body.type\n      this.headers += `content-type: ${body.type}\\r\\n`\n    }\n\n    util.validateHandler(handler, method, upgrade)\n\n    this.servername = util.getServerName(this.host)\n\n    this[kHandler] = handler\n\n    if (channels.create.hasSubscribers) {\n      channels.create.publish({ request: this })\n    }\n  }\n\n  onBodySent (chunk) {\n    if (this[kHandler].onBodySent) {\n      try {\n        this[kHandler].onBodySent(chunk)\n      } catch (err) {\n        this.onError(err)\n      }\n    }\n  }\n\n  onRequestSent () {\n    if (channels.bodySent.hasSubscribers) {\n      channels.bodySent.publish({ request: this })\n    }\n  }\n\n  onConnect (abort) {\n    assert(!this.aborted)\n    assert(!this.completed)\n\n    return this[kHandler].onConnect(abort)\n  }\n\n  onHeaders (statusCode, headers, resume, statusText) {\n    assert(!this.aborted)\n    assert(!this.completed)\n\n    if (channels.headers.hasSubscribers) {\n      channels.headers.publish({ request: this, response: { statusCode, headers, statusText } })\n    }\n\n    return this[kHandler].onHeaders(statusCode, headers, resume, statusText)\n  }\n\n  onData (chunk) {\n    assert(!this.aborted)\n    assert(!this.completed)\n\n    return this[kHandler].onData(chunk)\n  }\n\n  onUpgrade (statusCode, headers, socket) {\n    assert(!this.aborted)\n    assert(!this.completed)\n\n    return this[kHandler].onUpgrade(statusCode, headers, socket)\n  }\n\n  onComplete (trailers) {\n    assert(!this.aborted)\n\n    this.completed = true\n    if (channels.trailers.hasSubscribers) {\n      channels.trailers.publish({ request: this, trailers })\n    }\n    return this[kHandler].onComplete(trailers)\n  }\n\n  onError (error) {\n    if (channels.error.hasSubscribers) {\n      channels.error.publish({ request: this, error })\n    }\n\n    if (this.aborted) {\n      return\n    }\n    this.aborted = true\n    return this[kHandler].onError(error)\n  }\n\n  addHeader (key, value) {\n    processHeader(this, key, value)\n    return this\n  }\n}\n\nfunction processHeader (request, key, val) {\n  if (val && typeof val === 'object') {\n    throw new InvalidArgumentError(`invalid ${key} header`)\n  } else if (val === undefined) {\n    return\n  }\n\n  if (\n    request.host === null &&\n    key.length === 4 &&\n    key.toLowerCase() === 'host'\n  ) {\n    // Consumed by Client\n    request.host = val\n  } else if (\n    request.contentLength === null &&\n    key.length === 14 &&\n    key.toLowerCase() === 'content-length'\n  ) {\n    request.contentLength = parseInt(val, 10)\n    if (!Number.isFinite(request.contentLength)) {\n      throw new InvalidArgumentError('invalid content-length header')\n    }\n  } else if (\n    request.contentType === null &&\n    key.length === 12 &&\n    key.toLowerCase() === 'content-type'\n  ) {\n    request.contentType = val\n    request.headers += `${key}: ${val}\\r\\n`\n  } else if (\n    key.length === 17 &&\n    key.toLowerCase() === 'transfer-encoding'\n  ) {\n    throw new InvalidArgumentError('invalid transfer-encoding header')\n  } else if (\n    key.length === 10 &&\n    key.toLowerCase() === 'connection'\n  ) {\n    throw new InvalidArgumentError('invalid connection header')\n  } else if (\n    key.length === 10 &&\n    key.toLowerCase() === 'keep-alive'\n  ) {\n    throw new InvalidArgumentError('invalid keep-alive header')\n  } else if (\n    key.length === 7 &&\n    key.toLowerCase() === 'upgrade'\n  ) {\n    throw new InvalidArgumentError('invalid upgrade header')\n  } else if (\n    key.length === 6 &&\n    key.toLowerCase() === 'expect'\n  ) {\n    throw new NotSupportedError('expect header not supported')\n  } else {\n    request.headers += `${key}: ${val}\\r\\n`\n  }\n}\n\nmodule.exports = Request\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}