{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getRecommendedGitIgnore = exports.getUserConfigPath = exports.isCwdInsideProject = void 0;\n\nconst find_up_1 = __importDefault(require(\"find-up\"));\n\nconst fs_extra_1 = __importDefault(require(\"fs-extra\"));\n\nconst path_1 = __importDefault(require(\"path\"));\n\nconst packageInfo_1 = require(\"../util/packageInfo\");\n\nconst errors_1 = require(\"./errors\");\n\nconst errors_list_1 = require(\"./errors-list\");\n\nconst JS_CONFIG_FILENAME = \"hardhat.config.js\";\nconst TS_CONFIG_FILENAME = \"hardhat.config.ts\";\n\nfunction isCwdInsideProject() {\n  return find_up_1.default.sync(TS_CONFIG_FILENAME) !== null || find_up_1.default.sync(JS_CONFIG_FILENAME) !== null;\n}\n\nexports.isCwdInsideProject = isCwdInsideProject;\n\nfunction getUserConfigPath() {\n  const tsConfigPath = find_up_1.default.sync(TS_CONFIG_FILENAME);\n\n  if (tsConfigPath !== null) {\n    return tsConfigPath;\n  }\n\n  const pathToConfigFile = find_up_1.default.sync(JS_CONFIG_FILENAME);\n\n  if (pathToConfigFile === null) {\n    throw new errors_1.HardhatError(errors_list_1.ERRORS.GENERAL.NOT_INSIDE_PROJECT);\n  }\n\n  return pathToConfigFile;\n}\n\nexports.getUserConfigPath = getUserConfigPath;\n\nasync function getRecommendedGitIgnore() {\n  const packageRoot = (0, packageInfo_1.getPackageRoot)();\n  const gitIgnorePath = path_1.default.join(packageRoot, \"recommended-gitignore.txt\");\n  return fs_extra_1.default.readFile(gitIgnorePath, \"utf-8\");\n}\n\nexports.getRecommendedGitIgnore = getRecommendedGitIgnore;","map":{"version":3,"mappings":";;;;;;;;;;;;;AAAA;;AACA;;AACA;;AAEA;;AAEA;;AACA;;AACA,MAAMA,kBAAkB,GAAG,mBAA3B;AACA,MAAMC,kBAAkB,GAAG,mBAA3B;;AAEA,SAAgBC,kBAAhB,GAAkC;EAChC,OACEC,kBAAOC,IAAP,CAAYH,kBAAZ,MAAoC,IAApC,IACAE,kBAAOC,IAAP,CAAYJ,kBAAZ,MAAoC,IAFtC;AAID;;AALDK;;AAOA,SAAgBC,iBAAhB,GAAiC;EAC/B,MAAMC,YAAY,GAAGJ,kBAAOC,IAAP,CAAYH,kBAAZ,CAArB;;EACA,IAAIM,YAAY,KAAK,IAArB,EAA2B;IACzB,OAAOA,YAAP;EACD;;EAED,MAAMC,gBAAgB,GAAGL,kBAAOC,IAAP,CAAYJ,kBAAZ,CAAzB;;EACA,IAAIQ,gBAAgB,KAAK,IAAzB,EAA+B;IAC7B,MAAM,IAAIC,qBAAJ,CAAiBC,qBAAOC,OAAP,CAAeC,kBAAhC,CAAN;EACD;;EAED,OAAOJ,gBAAP;AACD;;AAZDH;;AAcO,eAAeQ,uBAAf,GAAsC;EAC3C,MAAMC,WAAW,GAAG,mCAApB;EACA,MAAMC,aAAa,GAAGC,eAAKC,IAAL,CAAUH,WAAV,EAAuB,2BAAvB,CAAtB;EAEA,OAAOI,mBAAQC,QAAR,CAAiBJ,aAAjB,EAAgC,OAAhC,CAAP;AACD;;AALDV","names":["JS_CONFIG_FILENAME","TS_CONFIG_FILENAME","isCwdInsideProject","find_up_1","sync","exports","getUserConfigPath","tsConfigPath","pathToConfigFile","errors_1","errors_list_1","GENERAL","NOT_INSIDE_PROJECT","getRecommendedGitIgnore","packageRoot","gitIgnorePath","path_1","join","fs_extra_1","readFile"],"sourceRoot":"","sources":["../../src/internal/core/project-structure.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}