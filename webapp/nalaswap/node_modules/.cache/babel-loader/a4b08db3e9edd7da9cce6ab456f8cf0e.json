{"ast":null,"code":"import _typeof from '@babel/runtime/helpers/typeof';\nimport _asyncToGenerator from '@babel/runtime/helpers/asyncToGenerator';\nimport _classCallCheck from '@babel/runtime/helpers/classCallCheck';\nimport _createClass from '@babel/runtime/helpers/createClass';\nimport _defineProperty from '@babel/runtime/helpers/defineProperty';\nimport _regeneratorRuntime from '@babel/runtime/regenerator';\nimport { generatePrivate, getPublic, decrypt } from '@toruslabs/eccrypto';\nimport { post, generateJsonRPCObject, get, setAPIKey, setEmbedHost } from '@toruslabs/http-helpers';\nimport BN from 'bn.js';\nimport { ec } from 'elliptic';\nimport JsonStringify from 'json-stable-stringify';\nimport { toChecksumAddress } from 'web3-utils';\nimport loglevel from 'loglevel';\nimport _assertThisInitialized from '@babel/runtime/helpers/assertThisInitialized';\nimport _inherits from '@babel/runtime/helpers/inherits';\nimport _possibleConstructorReturn from '@babel/runtime/helpers/possibleConstructorReturn';\nimport _getPrototypeOf from '@babel/runtime/helpers/getPrototypeOf';\nimport _wrapNativeSuper from '@babel/runtime/helpers/wrapNativeSuper';\nimport _toConsumableArray from '@babel/runtime/helpers/toConsumableArray';\nimport createKeccakHash from 'keccak';\nvar log = loglevel.getLogger(\"torus.js\");\nlog.disableAll();\n\nfunction _createSuper$1(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct$1();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _isNativeReflectConstruct$1() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction capitalizeFirstLetter(str) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\n\nvar SomeError = /*#__PURE__*/function (_Error) {\n  _inherits(SomeError, _Error);\n\n  var _super = _createSuper$1(SomeError);\n\n  function SomeError(_ref) {\n    var _this;\n\n    var errors = _ref.errors,\n        responses = _ref.responses,\n        predicate = _ref.predicate;\n\n    _classCallCheck(this, SomeError);\n\n    _this = _super.call(this, \"Unable to resolve enough promises.\");\n\n    _defineProperty(_assertThisInitialized(_this), \"errors\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"responses\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"predicate\", void 0);\n\n    _this.errors = errors;\n    _this.responses = responses;\n    _this.predicate = predicate;\n    return _this;\n  }\n\n  return _createClass(SomeError);\n}( /*#__PURE__*/_wrapNativeSuper(Error));\n\nvar Some = function Some(promises, predicate) {\n  return new Promise(function (resolve, reject) {\n    var finishedCount = 0;\n    var sharedState = {\n      resolved: false\n    };\n    var errorArr = new Array(promises.length).fill(undefined);\n    var resultArr = new Array(promises.length).fill(undefined);\n    var predicateError;\n    return promises.forEach(function (x, index) {\n      return x.then(function (resp) {\n        resultArr[index] = resp;\n        return undefined;\n      }).catch(function (error) {\n        errorArr[index] = error;\n      }) // eslint-disable-next-line promise/no-return-in-finally\n      .finally(function () {\n        if (sharedState.resolved) return;\n        return predicate(resultArr.slice(0), sharedState).then(function (data) {\n          sharedState.resolved = true;\n          resolve(data);\n          return undefined;\n        }).catch(function (error) {\n          // log only the last predicate error\n          predicateError = error;\n        }).finally(function () {\n          finishedCount += 1;\n\n          if (finishedCount === promises.length) {\n            var errors = Object.values(resultArr.reduce(function (acc, z) {\n              if (z) {\n                var _error$data;\n\n                var id = z.id,\n                    error = z.error;\n\n                if ((error === null || error === void 0 ? void 0 : (_error$data = error.data) === null || _error$data === void 0 ? void 0 : _error$data.length) > 0) {\n                  if (error.data.startsWith(\"Error occurred while verifying params\")) acc[id] = capitalizeFirstLetter(error.data);else acc[id] = error.data;\n                }\n              }\n\n              return acc;\n            }, {}));\n\n            if (errors.length > 0) {\n              // Format-able errors\n              var msg = errors.length > 1 ? \"\\n\".concat(errors.map(function (it) {\n                return \"\\u2022 \".concat(it);\n              }).join(\"\\n\")) : errors[0];\n              reject(new Error(msg));\n            } else {\n              var _predicateError;\n\n              reject(new SomeError({\n                errors: errorArr,\n                responses: resultArr,\n                predicate: ((_predicateError = predicateError) === null || _predicateError === void 0 ? void 0 : _predicateError.message) || predicateError\n              }));\n            }\n          }\n        });\n      });\n    });\n  });\n};\n\nfunction ownKeys$1(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread$1(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys$1(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys$1(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nvar GetOrSetNonceError = /*#__PURE__*/function (_Error) {\n  _inherits(GetOrSetNonceError, _Error);\n\n  var _super = _createSuper(GetOrSetNonceError);\n\n  function GetOrSetNonceError() {\n    _classCallCheck(this, GetOrSetNonceError);\n\n    return _super.apply(this, arguments);\n  }\n\n  return _createClass(GetOrSetNonceError);\n}( /*#__PURE__*/_wrapNativeSuper(Error));\n\nvar kCombinations = function kCombinations(s, k) {\n  var set = s;\n\n  if (typeof set === \"number\") {\n    set = Array.from({\n      length: set\n    }, function (_, i) {\n      return i;\n    });\n  }\n\n  if (k > set.length || k <= 0) {\n    return [];\n  }\n\n  if (k === set.length) {\n    return [set];\n  }\n\n  if (k === 1) {\n    return set.reduce(function (acc, cur) {\n      return [].concat(_toConsumableArray(acc), [[cur]]);\n    }, []);\n  }\n\n  var combs = [];\n  var tailCombs = [];\n\n  for (var i = 0; i <= set.length - k + 1; i += 1) {\n    tailCombs = kCombinations(set.slice(i + 1), k - 1);\n\n    for (var j = 0; j < tailCombs.length; j += 1) {\n      combs.push([set[i]].concat(_toConsumableArray(tailCombs[j])));\n    }\n  }\n\n  return combs;\n};\n\nvar thresholdSame = function thresholdSame(arr, t) {\n  var hashMap = {};\n\n  for (var i = 0; i < arr.length; i += 1) {\n    var str = JsonStringify(arr[i]);\n    hashMap[str] = hashMap[str] ? hashMap[str] + 1 : 1;\n\n    if (hashMap[str] === t) {\n      return arr[i];\n    }\n  }\n\n  return undefined;\n};\n\nvar keyLookup = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(endpoints, verifier, verifierId) {\n    var lookupPromises;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            lookupPromises = endpoints.map(function (x) {\n              return post(x, generateJsonRPCObject(\"VerifierLookupRequest\", {\n                verifier: verifier,\n                verifier_id: verifierId.toString()\n              })).catch(function (err) {\n                return log.error(\"lookup request failed\", err);\n              });\n            });\n            return _context.abrupt(\"return\", Some(lookupPromises, function (lookupResults) {\n              var lookupShares = lookupResults.filter(function (x1) {\n                return x1;\n              });\n              var errorResult = thresholdSame(lookupShares.map(function (x2) {\n                return x2 && x2.error;\n              }), ~~(endpoints.length / 2) + 1);\n              var keyResult = thresholdSame(lookupShares.map(function (x3) {\n                return x3 && x3.result;\n              }), ~~(endpoints.length / 2) + 1);\n\n              if (keyResult || errorResult) {\n                return Promise.resolve({\n                  keyResult: keyResult,\n                  errorResult: errorResult\n                });\n              }\n\n              return Promise.reject(new Error(\"invalid results \".concat(JSON.stringify(lookupResults))));\n            }));\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function keyLookup(_x, _x2, _x3) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nvar waitKeyLookup = function waitKeyLookup(endpoints, verifier, verifierId, timeout) {\n  return new Promise(function (resolve, reject) {\n    setTimeout(function () {\n      keyLookup(endpoints, verifier, verifierId).then(resolve).catch(reject);\n    }, timeout);\n  });\n};\n\nvar keyAssign = /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(_ref2) {\n    var endpoints, torusNodePubs, lastPoint, firstPoint, verifier, verifierId, signerHost, network, nodeNum, initialPoint, data, signedData, acceptedErrorMsgs;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            endpoints = _ref2.endpoints, torusNodePubs = _ref2.torusNodePubs, lastPoint = _ref2.lastPoint, firstPoint = _ref2.firstPoint, verifier = _ref2.verifier, verifierId = _ref2.verifierId, signerHost = _ref2.signerHost, network = _ref2.network;\n\n            if (lastPoint === undefined) {\n              nodeNum = Math.floor(Math.random() * endpoints.length);\n              initialPoint = nodeNum;\n            } else {\n              nodeNum = lastPoint % endpoints.length;\n            }\n\n            if (!(nodeNum === firstPoint)) {\n              _context2.next = 4;\n              break;\n            }\n\n            throw new Error(\"Looped through all\");\n\n          case 4:\n            if (firstPoint !== undefined) initialPoint = firstPoint;\n            data = generateJsonRPCObject(\"KeyAssign\", {\n              verifier: verifier,\n              verifier_id: verifierId.toString()\n            });\n            _context2.prev = 6;\n            _context2.next = 9;\n            return post(signerHost, data, {\n              headers: {\n                pubKeyX: torusNodePubs[nodeNum].X,\n                pubKeyY: torusNodePubs[nodeNum].Y,\n                network: network\n              }\n            }, {\n              useAPIKey: true\n            });\n\n          case 9:\n            signedData = _context2.sent;\n            _context2.next = 12;\n            return post(endpoints[nodeNum], _objectSpread$1(_objectSpread$1({}, data), signedData), {\n              headers: {\n                \"Content-Type\": \"application/json; charset=utf-8\"\n              }\n            });\n\n          case 12:\n            return _context2.abrupt(\"return\", _context2.sent);\n\n          case 15:\n            _context2.prev = 15;\n            _context2.t0 = _context2[\"catch\"](6);\n            log.error(_context2.t0);\n            acceptedErrorMsgs = [// Slow node\n            \"Timed out\", // Happens when the node is not reachable (dns issue etc)\n            \"TypeError: Failed to fetch\", \"TypeError: cancelled\", \"TypeError: NetworkError when attempting to fetch resource.\" // Firefox\n            ];\n\n            if (!acceptedErrorMsgs.includes(_context2.t0.message)) {\n              _context2.next = 21;\n              break;\n            }\n\n            return _context2.abrupt(\"return\", keyAssign({\n              endpoints: endpoints,\n              torusNodePubs: torusNodePubs,\n              lastPoint: nodeNum + 1,\n              firstPoint: initialPoint,\n              verifier: verifier,\n              verifierId: verifierId,\n              signerHost: signerHost,\n              network: network\n            }));\n\n          case 21:\n            throw new Error(\"Sorry, the Torus Network that powers Web3Auth is currently very busy.\\n    We will generate your key in time. Pls try again later. \\n\\n    \".concat(_context2.t0.message || \"\"));\n\n          case 22:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, null, [[6, 15]]);\n  }));\n\n  return function keyAssign(_x4) {\n    return _ref3.apply(this, arguments);\n  };\n}();\n\nfunction keccak256(a) {\n  var hash = createKeccakHash(\"keccak256\").update(a).digest().toString(\"hex\");\n  return \"0x\".concat(hash);\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n} // of Torus nodes to handle malicious node responses\n\n\nvar Torus = /*#__PURE__*/function () {\n  function Torus() {\n    var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n        _ref$enableOneKey = _ref.enableOneKey,\n        enableOneKey = _ref$enableOneKey === void 0 ? false : _ref$enableOneKey,\n        _ref$metadataHost = _ref.metadataHost,\n        metadataHost = _ref$metadataHost === void 0 ? \"https://metadata.tor.us\" : _ref$metadataHost,\n        _ref$allowHost = _ref.allowHost,\n        allowHost = _ref$allowHost === void 0 ? \"https://signer.tor.us/api/allow\" : _ref$allowHost,\n        _ref$signerHost = _ref.signerHost,\n        signerHost = _ref$signerHost === void 0 ? \"https://signer.tor.us/api/sign\" : _ref$signerHost,\n        _ref$serverTimeOffset = _ref.serverTimeOffset,\n        serverTimeOffset = _ref$serverTimeOffset === void 0 ? 0 : _ref$serverTimeOffset,\n        _ref$network = _ref.network,\n        network = _ref$network === void 0 ? \"mainnet\" : _ref$network;\n\n    _classCallCheck(this, Torus);\n\n    _defineProperty(this, \"metadataHost\", void 0);\n\n    _defineProperty(this, \"allowHost\", void 0);\n\n    _defineProperty(this, \"serverTimeOffset\", void 0);\n\n    _defineProperty(this, \"enableOneKey\", void 0);\n\n    _defineProperty(this, \"signerHost\", void 0);\n\n    _defineProperty(this, \"network\", void 0);\n\n    _defineProperty(this, \"ec\", void 0);\n\n    this.ec = new ec(\"secp256k1\");\n    this.metadataHost = metadataHost;\n    this.allowHost = allowHost;\n    this.enableOneKey = enableOneKey;\n    this.serverTimeOffset = serverTimeOffset || 0; // ms\n\n    this.signerHost = signerHost;\n    this.network = network;\n  }\n\n  _createClass(Torus, [{\n    key: \"getUserTypeAndAddress\",\n    value:\n    /**\n     * Note: use this function only for openlogin tkey account lookups.\n     */\n    function () {\n      var _getUserTypeAndAddress = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(endpoints, torusNodePubs, _ref2) {\n        var verifier,\n            verifierId,\n            doesKeyAssign,\n            _ref3,\n            keyResult,\n            errorResult,\n            isNewKey,\n            finalKeyResult,\n            assignResult,\n            _finalKeyResult$keys$,\n            X,\n            Y,\n            nonceResult,\n            nonce,\n            modifiedPubKey,\n            finalX,\n            finalY,\n            address,\n            _args = arguments;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                verifier = _ref2.verifier, verifierId = _ref2.verifierId;\n                doesKeyAssign = _args.length > 3 && _args[3] !== undefined ? _args[3] : false;\n                _context.next = 4;\n                return keyLookup(endpoints, verifier, verifierId);\n\n              case 4:\n                _context.t0 = _context.sent;\n\n                if (_context.t0) {\n                  _context.next = 7;\n                  break;\n                }\n\n                _context.t0 = {};\n\n              case 7:\n                _ref3 = _context.t0;\n                keyResult = _ref3.keyResult;\n                errorResult = _ref3.errorResult;\n                isNewKey = false;\n\n                if (!(errorResult && JSON.stringify(errorResult).includes(\"Verifier + VerifierID has not yet been assigned\"))) {\n                  _context.next = 23;\n                  break;\n                }\n\n                if (doesKeyAssign) {\n                  _context.next = 14;\n                  break;\n                }\n\n                throw new Error(\"Verifier + VerifierID has not yet been assigned\");\n\n              case 14:\n                _context.next = 16;\n                return keyAssign({\n                  endpoints: endpoints,\n                  torusNodePubs: torusNodePubs,\n                  lastPoint: undefined,\n                  firstPoint: undefined,\n                  verifier: verifier,\n                  verifierId: verifierId,\n                  signerHost: this.signerHost,\n                  network: this.network\n                });\n\n              case 16:\n                _context.next = 18;\n                return waitKeyLookup(endpoints, verifier, verifierId, 1000);\n\n              case 18:\n                assignResult = _context.sent;\n                finalKeyResult = assignResult === null || assignResult === void 0 ? void 0 : assignResult.keyResult;\n                isNewKey = true;\n                _context.next = 28;\n                break;\n\n              case 23:\n                if (!keyResult) {\n                  _context.next = 27;\n                  break;\n                }\n\n                finalKeyResult = keyResult;\n                _context.next = 28;\n                break;\n\n              case 27:\n                throw new Error(\"node results do not match at first lookup \".concat(JSON.stringify(keyResult || {}), \", \").concat(JSON.stringify(errorResult || {})));\n\n              case 28:\n                if (!finalKeyResult) {\n                  _context.next = 58;\n                  break;\n                }\n\n                _finalKeyResult$keys$ = finalKeyResult.keys[0], X = _finalKeyResult$keys$.pub_key_X, Y = _finalKeyResult$keys$.pub_key_Y;\n                _context.prev = 30;\n                _context.next = 33;\n                return this.getOrSetNonce(X, Y, undefined, !isNewKey);\n\n              case 33:\n                nonceResult = _context.sent;\n                nonce = new BN(nonceResult.nonce || \"0\", 16);\n                _context.next = 40;\n                break;\n\n              case 37:\n                _context.prev = 37;\n                _context.t1 = _context[\"catch\"](30);\n                throw new GetOrSetNonceError();\n\n              case 40:\n                if (!(nonceResult.typeOfUser === \"v1\")) {\n                  _context.next = 44;\n                  break;\n                }\n\n                modifiedPubKey = this.ec.keyFromPublic({\n                  x: X,\n                  y: Y\n                }).getPublic().add(this.ec.keyFromPrivate(nonce.toString(16)).getPublic());\n                _context.next = 49;\n                break;\n\n              case 44:\n                if (!(nonceResult.typeOfUser === \"v2\")) {\n                  _context.next = 48;\n                  break;\n                }\n\n                modifiedPubKey = this.ec.keyFromPublic({\n                  x: X,\n                  y: Y\n                }).getPublic().add(this.ec.keyFromPublic({\n                  x: nonceResult.pubNonce.x,\n                  y: nonceResult.pubNonce.y\n                }).getPublic());\n                _context.next = 49;\n                break;\n\n              case 48:\n                throw new Error(\"getOrSetNonce should always return typeOfUser.\");\n\n              case 49:\n                finalX = modifiedPubKey.getX().toString(16);\n                finalY = modifiedPubKey.getY().toString(16);\n                address = this.generateAddressFromPubKey(modifiedPubKey.getX(), modifiedPubKey.getY());\n\n                if (!(nonceResult.typeOfUser === \"v1\")) {\n                  _context.next = 56;\n                  break;\n                }\n\n                return _context.abrupt(\"return\", {\n                  typeOfUser: nonceResult.typeOfUser,\n                  nonce: nonce,\n                  X: finalX,\n                  Y: finalY,\n                  address: address\n                });\n\n              case 56:\n                if (!(nonceResult.typeOfUser === \"v2\")) {\n                  _context.next = 58;\n                  break;\n                }\n\n                return _context.abrupt(\"return\", {\n                  typeOfUser: nonceResult.typeOfUser,\n                  nonce: nonce,\n                  pubNonce: nonceResult.pubNonce,\n                  upgraded: nonceResult.upgraded,\n                  X: finalX,\n                  Y: finalY,\n                  address: address\n                });\n\n              case 58:\n                throw new Error(\"node results do not match at final lookup \".concat(JSON.stringify(keyResult || {}), \", \").concat(JSON.stringify(errorResult || {})));\n\n              case 59:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[30, 37]]);\n      }));\n\n      function getUserTypeAndAddress(_x, _x2, _x3) {\n        return _getUserTypeAndAddress.apply(this, arguments);\n      }\n\n      return getUserTypeAndAddress;\n    }()\n  }, {\n    key: \"setCustomKey\",\n    value: function () {\n      var _setCustomKey = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(_ref4) {\n        var privKeyHex, metadataNonce, torusKeyHex, customKeyHex, torusKey, privKey, customKey, newMetadataNonce, data;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                privKeyHex = _ref4.privKeyHex, metadataNonce = _ref4.metadataNonce, torusKeyHex = _ref4.torusKeyHex, customKeyHex = _ref4.customKeyHex;\n\n                if (torusKeyHex) {\n                  torusKey = new BN(torusKeyHex, 16);\n                } else {\n                  privKey = new BN(privKeyHex, 16);\n                  torusKey = privKey.sub(metadataNonce).umod(this.ec.curve.n);\n                }\n\n                customKey = new BN(customKeyHex, 16);\n                newMetadataNonce = customKey.sub(torusKey).umod(this.ec.curve.n);\n                data = this.generateMetadataParams(newMetadataNonce.toString(16), torusKey);\n                _context2.next = 7;\n                return this.setMetadata(data);\n\n              case 7:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function setCustomKey(_x4) {\n        return _setCustomKey.apply(this, arguments);\n      }\n\n      return setCustomKey;\n    }()\n  }, {\n    key: \"retrieveShares\",\n    value: function () {\n      var _retrieveShares = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(endpoints, indexes, verifier, verifierParams, idToken) {\n        var _this = this;\n\n        var extraParams,\n            promiseArr,\n            tmpKey,\n            pubKey,\n            pubKeyX,\n            pubKeyY,\n            tokenCommitment,\n            i,\n            p,\n            _args5 = arguments;\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                extraParams = _args5.length > 5 && _args5[5] !== undefined ? _args5[5] : {};\n                promiseArr = [];\n                _context5.next = 4;\n                return get(this.allowHost, {\n                  headers: {\n                    verifier: verifier,\n                    verifier_id: verifierParams.verifier_id,\n                    network: this.network\n                  }\n                }, {\n                  useAPIKey: true\n                });\n\n              case 4:\n                /*\n                  CommitmentRequestParams struct {\n                    MessagePrefix      string `json:\"messageprefix\"`\n                    TokenCommitment    string `json:\"tokencommitment\"`\n                    TempPubX           string `json:\"temppubx\"`\n                    TempPubY           string `json:\"temppuby\"`\n                    VerifierIdentifier string `json:\"verifieridentifier\"`\n                  }\n                  */\n                // generate temporary private and public key that is used to secure receive shares\n                tmpKey = generatePrivate();\n                pubKey = getPublic(tmpKey).toString(\"hex\");\n                pubKeyX = pubKey.slice(2, 66);\n                pubKeyY = pubKey.slice(66);\n                tokenCommitment = keccak256(idToken); // make commitment requests to endpoints\n\n                for (i = 0; i < endpoints.length; i += 1) {\n                  p = post(endpoints[i], generateJsonRPCObject(\"CommitmentRequest\", {\n                    messageprefix: \"mug00\",\n                    tokencommitment: tokenCommitment.slice(2),\n                    temppubx: pubKeyX,\n                    temppuby: pubKeyY,\n                    verifieridentifier: verifier\n                  })).catch(function (err) {\n                    log.error(\"commitment\", err);\n                  });\n                  promiseArr.push(p);\n                }\n                /*\n                  ShareRequestParams struct {\n                    Item []bijson.RawMessage `json:\"item\"`\n                  }\n                  ShareRequestItem struct {\n                    IDToken            string          `json:\"idtoken\"`\n                    NodeSignatures     []NodeSignature `json:\"nodesignatures\"`\n                    VerifierIdentifier string          `json:\"verifieridentifier\"`\n                  }\n                  NodeSignature struct {\n                    Signature   string\n                    Data        string\n                    NodePubKeyX string\n                    NodePubKeyY string\n                  }\n                  CommitmentRequestResult struct {\n                    Signature string `json:\"signature\"`\n                    Data      string `json:\"data\"`\n                    NodePubX  string `json:\"nodepubx\"`\n                    NodePubY  string `json:\"nodepuby\"`\n                  }\n                  */\n                // send share request once k + t number of commitment requests have completed\n\n\n                return _context5.abrupt(\"return\", Some(promiseArr, function (resultArr) {\n                  var completedRequests = resultArr.filter(function (x) {\n                    if (!x || _typeof(x) !== \"object\") {\n                      return false;\n                    }\n\n                    if (x.error) {\n                      return false;\n                    }\n\n                    return true;\n                  });\n\n                  if (completedRequests.length >= ~~(endpoints.length / 4) * 3 + 1) {\n                    return Promise.resolve(resultArr);\n                  }\n\n                  return Promise.reject(new Error(\"invalid \".concat(JSON.stringify(resultArr))));\n                }).then(function (responses) {\n                  var promiseArrRequest = [];\n                  var nodeSigs = [];\n\n                  for (var _i = 0; _i < responses.length; _i += 1) {\n                    if (responses[_i]) nodeSigs.push(responses[_i].result);\n                  }\n\n                  for (var _i2 = 0; _i2 < endpoints.length; _i2 += 1) {\n                    // eslint-disable-next-line promise/no-nesting\n                    var _p = post(endpoints[_i2], generateJsonRPCObject(\"ShareRequest\", {\n                      encrypted: \"yes\",\n                      item: [_objectSpread(_objectSpread({}, verifierParams), {}, {\n                        idtoken: idToken,\n                        nodesignatures: nodeSigs,\n                        verifieridentifier: verifier\n                      }, extraParams)]\n                    })).catch(function (err) {\n                      return log.error(\"share req\", err);\n                    });\n\n                    promiseArrRequest.push(_p);\n                  }\n\n                  return Some(promiseArrRequest, /*#__PURE__*/function () {\n                    var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(shareResponses, sharedState) {\n                      var completedRequests, thresholdPublicKey, sharePromises, nodeIndexes, _i3, _currentShareResponse, _currentShareResponse2, currentShareResponse, firstKey, metadata, sharesResolved, decryptedShares, allCombis, privateKey, _loop, j, _ret;\n\n                      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n                        while (1) {\n                          switch (_context3.prev = _context3.next) {\n                            case 0:\n                              /*\n                                  ShareRequestResult struct {\n                                    Keys []KeyAssignment\n                                  }\n                                          / KeyAssignmentPublic -\n                                  type KeyAssignmentPublic struct {\n                                    Index     big.Int\n                                    PublicKey common.Point\n                                    Threshold int\n                                    Verifiers map[string][]string // Verifier => VerifierID\n                                  }\n                                         // KeyAssignment -\n                                  type KeyAssignment struct {\n                                    KeyAssignmentPublic\n                                    Share big.Int // Or Si\n                                  }\n                                */\n                              // check if threshold number of nodes have returned the same user public key\n                              completedRequests = shareResponses.filter(function (x) {\n                                return x;\n                              });\n                              thresholdPublicKey = thresholdSame(shareResponses.map(function (x) {\n                                return x && x.result && x.result.keys[0].PublicKey;\n                              }), ~~(endpoints.length / 2) + 1); // optimistically run lagrange interpolation once threshold number of shares have been received\n                              // this is matched against the user public key to ensure that shares are consistent\n\n                              if (!(completedRequests.length >= ~~(endpoints.length / 2) + 1 && thresholdPublicKey)) {\n                                _context3.next = 28;\n                                break;\n                              }\n\n                              sharePromises = [];\n                              nodeIndexes = [];\n\n                              for (_i3 = 0; _i3 < shareResponses.length; _i3 += 1) {\n                                currentShareResponse = shareResponses[_i3];\n\n                                if ((currentShareResponse === null || currentShareResponse === void 0 ? void 0 : (_currentShareResponse = currentShareResponse.result) === null || _currentShareResponse === void 0 ? void 0 : (_currentShareResponse2 = _currentShareResponse.keys) === null || _currentShareResponse2 === void 0 ? void 0 : _currentShareResponse2.length) > 0) {\n                                  currentShareResponse.result.keys.sort(function (a, b) {\n                                    return new BN(a.Index, 16).cmp(new BN(b.Index, 16));\n                                  });\n                                  firstKey = currentShareResponse.result.keys[0];\n\n                                  if (firstKey.Metadata) {\n                                    metadata = {\n                                      ephemPublicKey: Buffer.from(firstKey.Metadata.ephemPublicKey, \"hex\"),\n                                      iv: Buffer.from(firstKey.Metadata.iv, \"hex\"),\n                                      mac: Buffer.from(firstKey.Metadata.mac, \"hex\") // mode: Buffer.from(firstKey.Metadata.mode, \"hex\"),\n\n                                    };\n                                    sharePromises.push( // eslint-disable-next-line promise/no-nesting\n                                    decrypt(tmpKey, _objectSpread(_objectSpread({}, metadata), {}, {\n                                      ciphertext: Buffer.from(Buffer.from(firstKey.Share, \"base64\").toString(\"binary\").padStart(64, \"0\"), \"hex\")\n                                    })).catch(function (err) {\n                                      return log.debug(\"share decryption\", err);\n                                    }));\n                                  } else {\n                                    sharePromises.push(Promise.resolve(Buffer.from(firstKey.Share.padStart(64, \"0\"), \"hex\")));\n                                  }\n                                } else {\n                                  sharePromises.push(Promise.resolve(undefined));\n                                }\n\n                                nodeIndexes.push(new BN(indexes[_i3], 16));\n                              }\n\n                              _context3.next = 8;\n                              return Promise.all(sharePromises);\n\n                            case 8:\n                              sharesResolved = _context3.sent;\n\n                              if (!sharedState.resolved) {\n                                _context3.next = 11;\n                                break;\n                              }\n\n                              return _context3.abrupt(\"return\", undefined);\n\n                            case 11:\n                              decryptedShares = sharesResolved.reduce(function (acc, curr, index) {\n                                if (curr) acc.push({\n                                  index: nodeIndexes[index],\n                                  value: new BN(curr)\n                                });\n                                return acc;\n                              }, []); // run lagrange interpolation on all subsets, faster in the optimistic scenario than berlekamp-welch due to early exit\n                              // run lagrange interpolation on all subsets, faster in the optimistic scenario than berlekamp-welch due to early exit\n\n                              allCombis = kCombinations(decryptedShares.length, ~~(endpoints.length / 2) + 1);\n                              privateKey = null;\n\n                              _loop = function _loop(j) {\n                                var currentCombi = allCombis[j];\n                                var currentCombiShares = decryptedShares.filter(function (v, index) {\n                                  return currentCombi.includes(index);\n                                });\n                                var shares = currentCombiShares.map(function (x) {\n                                  return x.value;\n                                });\n                                var indices = currentCombiShares.map(function (x) {\n                                  return x.index;\n                                });\n\n                                var derivedPrivateKey = _this.lagrangeInterpolation(shares, indices);\n\n                                if (!derivedPrivateKey) return \"continue\";\n                                var decryptedPubKey = getPublic(Buffer.from(derivedPrivateKey.toString(16, 64), \"hex\")).toString(\"hex\");\n                                var decryptedPubKeyX = decryptedPubKey.slice(2, 66);\n                                var decryptedPubKeyY = decryptedPubKey.slice(66);\n\n                                if (new BN(decryptedPubKeyX, 16).cmp(new BN(thresholdPublicKey.X, 16)) === 0 && new BN(decryptedPubKeyY, 16).cmp(new BN(thresholdPublicKey.Y, 16)) === 0) {\n                                  privateKey = derivedPrivateKey;\n                                  return \"break\";\n                                }\n                              };\n\n                              j = 0;\n\n                            case 16:\n                              if (!(j < allCombis.length)) {\n                                _context3.next = 25;\n                                break;\n                              }\n\n                              _ret = _loop(j);\n\n                              if (!(_ret === \"continue\")) {\n                                _context3.next = 20;\n                                break;\n                              }\n\n                              return _context3.abrupt(\"continue\", 22);\n\n                            case 20:\n                              if (!(_ret === \"break\")) {\n                                _context3.next = 22;\n                                break;\n                              }\n\n                              return _context3.abrupt(\"break\", 25);\n\n                            case 22:\n                              j += 1;\n                              _context3.next = 16;\n                              break;\n\n                            case 25:\n                              if (!(privateKey === undefined || privateKey === null)) {\n                                _context3.next = 27;\n                                break;\n                              }\n\n                              throw new Error(\"could not derive private key\");\n\n                            case 27:\n                              return _context3.abrupt(\"return\", privateKey);\n\n                            case 28:\n                              throw new Error(\"invalid\");\n\n                            case 29:\n                            case \"end\":\n                              return _context3.stop();\n                          }\n                        }\n                      }, _callee3);\n                    }));\n\n                    return function (_x10, _x11) {\n                      return _ref5.apply(this, arguments);\n                    };\n                  }());\n                }).then( /*#__PURE__*/function () {\n                  var _ref6 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(returnedKey) {\n                    var privateKey, decryptedPubKey, decryptedPubKeyX, decryptedPubKeyY, metadataNonce, _yield$_this$getNonce, nonce, ethAddress;\n\n                    return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n                      while (1) {\n                        switch (_context4.prev = _context4.next) {\n                          case 0:\n                            privateKey = returnedKey;\n\n                            if (privateKey) {\n                              _context4.next = 3;\n                              break;\n                            }\n\n                            throw new Error(\"Invalid private key returned\");\n\n                          case 3:\n                            decryptedPubKey = getPublic(Buffer.from(privateKey.toString(16, 64), \"hex\")).toString(\"hex\");\n                            decryptedPubKeyX = decryptedPubKey.slice(2, 66);\n                            decryptedPubKeyY = decryptedPubKey.slice(66);\n\n                            if (!_this.enableOneKey) {\n                              _context4.next = 14;\n                              break;\n                            }\n\n                            _context4.next = 9;\n                            return _this.getNonce(decryptedPubKeyX, decryptedPubKeyY, privateKey);\n\n                          case 9:\n                            _yield$_this$getNonce = _context4.sent;\n                            nonce = _yield$_this$getNonce.nonce;\n                            metadataNonce = new BN(nonce || \"0\", 16);\n                            _context4.next = 17;\n                            break;\n\n                          case 14:\n                            _context4.next = 16;\n                            return _this.getMetadata({\n                              pub_key_X: decryptedPubKeyX,\n                              pub_key_Y: decryptedPubKeyY\n                            });\n\n                          case 16:\n                            metadataNonce = _context4.sent;\n\n                          case 17:\n                            log.debug(\"> torus.js/retrieveShares\", {\n                              privKey: privateKey.toString(16),\n                              metadataNonce: metadataNonce.toString(16)\n                            });\n                            privateKey = privateKey.add(metadataNonce).umod(_this.ec.curve.n);\n                            ethAddress = _this.generateAddressFromPrivKey(privateKey);\n                            log.debug(\"> torus.js/retrieveShares\", {\n                              ethAddress: ethAddress,\n                              privKey: privateKey.toString(16)\n                            }); // return reconstructed private key and ethereum address\n\n                            return _context4.abrupt(\"return\", {\n                              ethAddress: ethAddress,\n                              privKey: privateKey.toString(\"hex\", 64),\n                              metadataNonce: metadataNonce\n                            });\n\n                          case 22:\n                          case \"end\":\n                            return _context4.stop();\n                        }\n                      }\n                    }, _callee4);\n                  }));\n\n                  return function (_x12) {\n                    return _ref6.apply(this, arguments);\n                  };\n                }()));\n\n              case 11:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n\n      function retrieveShares(_x5, _x6, _x7, _x8, _x9) {\n        return _retrieveShares.apply(this, arguments);\n      }\n\n      return retrieveShares;\n    }()\n  }, {\n    key: \"getMetadata\",\n    value: function () {\n      var _getMetadata = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6(data) {\n        var options,\n            metadataResponse,\n            _args6 = arguments;\n        return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                options = _args6.length > 1 && _args6[1] !== undefined ? _args6[1] : {};\n                _context6.prev = 1;\n                _context6.next = 4;\n                return post(\"\".concat(this.metadataHost, \"/get\"), data, options, {\n                  useAPIKey: true\n                });\n\n              case 4:\n                metadataResponse = _context6.sent;\n\n                if (!(!metadataResponse || !metadataResponse.message)) {\n                  _context6.next = 7;\n                  break;\n                }\n\n                return _context6.abrupt(\"return\", new BN(0));\n\n              case 7:\n                return _context6.abrupt(\"return\", new BN(metadataResponse.message, 16));\n\n              case 10:\n                _context6.prev = 10;\n                _context6.t0 = _context6[\"catch\"](1);\n                log.error(\"get metadata error\", _context6.t0);\n                return _context6.abrupt(\"return\", new BN(0));\n\n              case 14:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, this, [[1, 10]]);\n      }));\n\n      function getMetadata(_x13) {\n        return _getMetadata.apply(this, arguments);\n      }\n\n      return getMetadata;\n    }()\n  }, {\n    key: \"generateMetadataParams\",\n    value: function generateMetadataParams(message, privateKey) {\n      var key = this.ec.keyFromPrivate(privateKey.toString(\"hex\", 64));\n      var setData = {\n        data: message,\n        timestamp: new BN(~~(this.serverTimeOffset + Date.now() / 1000)).toString(16)\n      };\n      var sig = key.sign(keccak256(JsonStringify(setData)).slice(2));\n      return {\n        pub_key_X: key.getPublic().getX().toString(\"hex\"),\n        pub_key_Y: key.getPublic().getY().toString(\"hex\"),\n        set_data: setData,\n        signature: Buffer.from(sig.r.toString(16, 64) + sig.s.toString(16, 64) + new BN(\"\").toString(16, 2), \"hex\").toString(\"base64\")\n      };\n    }\n  }, {\n    key: \"setMetadata\",\n    value: function () {\n      var _setMetadata = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7(data) {\n        var options,\n            metadataResponse,\n            _args7 = arguments;\n        return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                options = _args7.length > 1 && _args7[1] !== undefined ? _args7[1] : {};\n                _context7.prev = 1;\n                _context7.next = 4;\n                return post(\"\".concat(this.metadataHost, \"/set\"), data, options, {\n                  useAPIKey: true\n                });\n\n              case 4:\n                metadataResponse = _context7.sent;\n                return _context7.abrupt(\"return\", metadataResponse.message);\n\n              case 8:\n                _context7.prev = 8;\n                _context7.t0 = _context7[\"catch\"](1);\n                log.error(\"set metadata error\", _context7.t0);\n                return _context7.abrupt(\"return\", \"\");\n\n              case 12:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7, this, [[1, 8]]);\n      }));\n\n      function setMetadata(_x14) {\n        return _setMetadata.apply(this, arguments);\n      }\n\n      return setMetadata;\n    }()\n  }, {\n    key: \"lagrangeInterpolation\",\n    value: function lagrangeInterpolation(shares, nodeIndex) {\n      if (shares.length !== nodeIndex.length) {\n        return null;\n      }\n\n      var secret = new BN(0);\n\n      for (var i = 0; i < shares.length; i += 1) {\n        var upper = new BN(1);\n        var lower = new BN(1);\n\n        for (var j = 0; j < shares.length; j += 1) {\n          if (i !== j) {\n            upper = upper.mul(nodeIndex[j].neg());\n            upper = upper.umod(this.ec.curve.n);\n            var temp = nodeIndex[i].sub(nodeIndex[j]);\n            temp = temp.umod(this.ec.curve.n);\n            lower = lower.mul(temp).umod(this.ec.curve.n);\n          }\n        }\n\n        var delta = upper.mul(lower.invm(this.ec.curve.n)).umod(this.ec.curve.n);\n        delta = delta.mul(shares[i]).umod(this.ec.curve.n);\n        secret = secret.add(delta);\n      }\n\n      return secret.umod(this.ec.curve.n);\n    }\n  }, {\n    key: \"generateAddressFromPrivKey\",\n    value: function generateAddressFromPrivKey(privateKey) {\n      var key = this.ec.keyFromPrivate(privateKey.toString(\"hex\", 64), \"hex\");\n      var publicKey = key.getPublic().encode(\"hex\", false).slice(2);\n      log.info(publicKey, \"public key\");\n      var ethAddressLower = \"0x\".concat(keccak256(Buffer.from(publicKey, \"hex\")).slice(64 - 38));\n      return toChecksumAddress(ethAddressLower);\n    }\n  }, {\n    key: \"generateAddressFromPubKey\",\n    value: function generateAddressFromPubKey(publicKeyX, publicKeyY) {\n      var key = this.ec.keyFromPublic({\n        x: publicKeyX.toString(\"hex\", 64),\n        y: publicKeyY.toString(\"hex\", 64)\n      });\n      var publicKey = key.getPublic().encode(\"hex\", false).slice(2);\n      log.info(key.getPublic().encode(\"hex\", false), \"public key\");\n      var ethAddressLower = \"0x\".concat(keccak256(Buffer.from(publicKey, \"hex\")).slice(64 - 38));\n      return toChecksumAddress(ethAddressLower);\n    }\n    /**\n     * Note: use this function only with custom auth, don't use to lookup openlogin accounts.\n     */\n\n  }, {\n    key: \"getPublicAddress\",\n    value: function () {\n      var _getPublicAddress = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee8(endpoints, torusNodePubs, _ref7) {\n        var verifier,\n            verifierId,\n            isExtended,\n            finalKeyResult,\n            isNewKey,\n            _ref8,\n            keyResult,\n            errorResult,\n            assignResult,\n            _nonce,\n            _finalKeyResult$keys$2,\n            X,\n            Y,\n            nonceResult,\n            nonce,\n            modifiedPubKey,\n            typeOfUser,\n            pubNonce,\n            address,\n            _args8 = arguments;\n\n        return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                verifier = _ref7.verifier, verifierId = _ref7.verifierId;\n                isExtended = _args8.length > 3 && _args8[3] !== undefined ? _args8[3] : false;\n                log.debug(\"> torus.js/getPublicAddress\", {\n                  endpoints: endpoints,\n                  torusNodePubs: torusNodePubs,\n                  verifier: verifier,\n                  verifierId: verifierId,\n                  isExtended: isExtended\n                });\n                isNewKey = false;\n                _context8.next = 6;\n                return keyLookup(endpoints, verifier, verifierId);\n\n              case 6:\n                _context8.t0 = _context8.sent;\n\n                if (_context8.t0) {\n                  _context8.next = 9;\n                  break;\n                }\n\n                _context8.t0 = {};\n\n              case 9:\n                _ref8 = _context8.t0;\n                keyResult = _ref8.keyResult;\n                errorResult = _ref8.errorResult;\n\n                if (!(errorResult && JSON.stringify(errorResult).includes(\"Verifier not supported\"))) {\n                  _context8.next = 16;\n                  break;\n                }\n\n                throw new Error(\"Verifier not supported. Check if you: \\n\\n      1. Are on the right network (Torus testnet/mainnet) \\n\\n      2. Have setup a verifier on dashboard.web3auth.io?\");\n\n              case 16:\n                if (!(errorResult && JSON.stringify(errorResult).includes(\"Verifier + VerifierID has not yet been assigned\"))) {\n                  _context8.next = 26;\n                  break;\n                }\n\n                _context8.next = 19;\n                return keyAssign({\n                  endpoints: endpoints,\n                  torusNodePubs: torusNodePubs,\n                  lastPoint: undefined,\n                  firstPoint: undefined,\n                  verifier: verifier,\n                  verifierId: verifierId,\n                  signerHost: this.signerHost,\n                  network: this.network\n                });\n\n              case 19:\n                _context8.next = 21;\n                return waitKeyLookup(endpoints, verifier, verifierId, 1000);\n\n              case 21:\n                assignResult = _context8.sent;\n                finalKeyResult = assignResult === null || assignResult === void 0 ? void 0 : assignResult.keyResult;\n                isNewKey = true;\n                _context8.next = 31;\n                break;\n\n              case 26:\n                if (!keyResult) {\n                  _context8.next = 30;\n                  break;\n                }\n\n                finalKeyResult = keyResult;\n                _context8.next = 31;\n                break;\n\n              case 30:\n                throw new Error(\"node results do not match at first lookup \".concat(JSON.stringify(keyResult || {}), \", \").concat(JSON.stringify(errorResult || {})));\n\n              case 31:\n                log.debug(\"> torus.js/getPublicAddress\", {\n                  finalKeyResult: finalKeyResult,\n                  isNewKey: isNewKey\n                });\n\n                if (!finalKeyResult) {\n                  _context8.next = 69;\n                  break;\n                }\n\n                _finalKeyResult$keys$2 = finalKeyResult.keys[0], X = _finalKeyResult$keys$2.pub_key_X, Y = _finalKeyResult$keys$2.pub_key_Y;\n\n                if (!this.enableOneKey) {\n                  _context8.next = 57;\n                  break;\n                }\n\n                _context8.prev = 35;\n                _context8.next = 38;\n                return this.getOrSetNonce(X, Y, undefined, !isNewKey);\n\n              case 38:\n                nonceResult = _context8.sent;\n                nonce = new BN(nonceResult.nonce || \"0\", 16);\n                typeOfUser = nonceResult.typeOfUser;\n                _context8.next = 46;\n                break;\n\n              case 43:\n                _context8.prev = 43;\n                _context8.t1 = _context8[\"catch\"](35);\n                throw new GetOrSetNonceError();\n\n              case 46:\n                if (!(nonceResult.typeOfUser === \"v1\")) {\n                  _context8.next = 50;\n                  break;\n                }\n\n                modifiedPubKey = this.ec.keyFromPublic({\n                  x: X,\n                  y: Y\n                }).getPublic().add(this.ec.keyFromPrivate(nonce.toString(16)).getPublic());\n                _context8.next = 55;\n                break;\n\n              case 50:\n                if (!(nonceResult.typeOfUser === \"v2\")) {\n                  _context8.next = 54;\n                  break;\n                }\n\n                if (nonceResult.upgraded) {\n                  // OneKey is upgraded to 2/n, returned address is address of Torus key (postbox key), not tKey\n                  modifiedPubKey = this.ec.keyFromPublic({\n                    x: X,\n                    y: Y\n                  }).getPublic();\n                } else {\n                  modifiedPubKey = this.ec.keyFromPublic({\n                    x: X,\n                    y: Y\n                  }).getPublic().add(this.ec.keyFromPublic({\n                    x: nonceResult.pubNonce.x,\n                    y: nonceResult.pubNonce.y\n                  }).getPublic());\n                  pubNonce = nonceResult.pubNonce;\n                }\n\n                _context8.next = 55;\n                break;\n\n              case 54:\n                throw new Error(\"getOrSetNonce should always return typeOfUser.\");\n\n              case 55:\n                _context8.next = 62;\n                break;\n\n              case 57:\n                typeOfUser = \"v1\";\n                _context8.next = 60;\n                return this.getMetadata({\n                  pub_key_X: X,\n                  pub_key_Y: Y\n                });\n\n              case 60:\n                nonce = _context8.sent;\n                modifiedPubKey = this.ec.keyFromPublic({\n                  x: X,\n                  y: Y\n                }).getPublic().add(this.ec.keyFromPrivate(nonce.toString(16)).getPublic());\n\n              case 62:\n                X = modifiedPubKey.getX().toString(16);\n                Y = modifiedPubKey.getY().toString(16);\n                address = this.generateAddressFromPubKey(modifiedPubKey.getX(), modifiedPubKey.getY());\n                log.debug(\"> torus.js/getPublicAddress\", {\n                  X: X,\n                  Y: Y,\n                  address: address,\n                  typeOfUser: typeOfUser,\n                  nonce: (_nonce = nonce) === null || _nonce === void 0 ? void 0 : _nonce.toString(16),\n                  pubNonce: pubNonce\n                });\n\n                if (isExtended) {\n                  _context8.next = 68;\n                  break;\n                }\n\n                return _context8.abrupt(\"return\", address);\n\n              case 68:\n                return _context8.abrupt(\"return\", {\n                  typeOfUser: typeOfUser,\n                  address: address,\n                  X: X,\n                  Y: Y,\n                  metadataNonce: nonce,\n                  pubNonce: pubNonce\n                });\n\n              case 69:\n                throw new Error(\"node results do not match at final lookup \".concat(JSON.stringify(keyResult || {}), \", \").concat(JSON.stringify(errorResult || {})));\n\n              case 70:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, _callee8, this, [[35, 43]]);\n      }));\n\n      function getPublicAddress(_x15, _x16, _x17) {\n        return _getPublicAddress.apply(this, arguments);\n      }\n\n      return getPublicAddress;\n    }()\n    /**\n     * Internal functions for OneKey (OpenLogin v2), only call these functions if you know what you're doing\n     */\n\n  }, {\n    key: \"getOrSetNonce\",\n    value: function () {\n      var _getOrSetNonce = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee9(X, Y, privKey) {\n        var getOnly,\n            data,\n            msg,\n            _args9 = arguments;\n        return _regeneratorRuntime.wrap(function _callee9$(_context9) {\n          while (1) {\n            switch (_context9.prev = _context9.next) {\n              case 0:\n                getOnly = _args9.length > 3 && _args9[3] !== undefined ? _args9[3] : false;\n                msg = getOnly ? \"getNonce\" : \"getOrSetNonce\";\n\n                if (privKey) {\n                  data = this.generateMetadataParams(msg, privKey);\n                } else {\n                  data = {\n                    pub_key_X: X,\n                    pub_key_Y: Y,\n                    set_data: {\n                      data: msg\n                    }\n                  };\n                }\n\n                return _context9.abrupt(\"return\", post(\"\".concat(this.metadataHost, \"/get_or_set_nonce\"), data, undefined, {\n                  useAPIKey: true\n                }));\n\n              case 4:\n              case \"end\":\n                return _context9.stop();\n            }\n          }\n        }, _callee9, this);\n      }));\n\n      function getOrSetNonce(_x18, _x19, _x20) {\n        return _getOrSetNonce.apply(this, arguments);\n      }\n\n      return getOrSetNonce;\n    }()\n  }, {\n    key: \"getNonce\",\n    value: function () {\n      var _getNonce = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee10(X, Y, privKey) {\n        return _regeneratorRuntime.wrap(function _callee10$(_context10) {\n          while (1) {\n            switch (_context10.prev = _context10.next) {\n              case 0:\n                return _context10.abrupt(\"return\", this.getOrSetNonce(X, Y, privKey, true));\n\n              case 1:\n              case \"end\":\n                return _context10.stop();\n            }\n          }\n        }, _callee10, this);\n      }));\n\n      function getNonce(_x21, _x22, _x23) {\n        return _getNonce.apply(this, arguments);\n      }\n\n      return getNonce;\n    }()\n  }, {\n    key: \"getPostboxKeyFrom1OutOf1\",\n    value: function getPostboxKeyFrom1OutOf1(privKey, nonce) {\n      var privKeyBN = new BN(privKey, 16);\n      var nonceBN = new BN(nonce, 16);\n      return privKeyBN.sub(nonceBN).umod(this.ec.curve.n).toString(\"hex\");\n    }\n  }], [{\n    key: \"enableLogging\",\n    value: function enableLogging() {\n      var v = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n      if (v) log.enableAll();else log.disableAll();\n    }\n  }, {\n    key: \"setAPIKey\",\n    value: function setAPIKey$1(apiKey) {\n      setAPIKey(apiKey);\n    }\n  }, {\n    key: \"setEmbedHost\",\n    value: function setEmbedHost$1(embedHost) {\n      setEmbedHost(embedHost);\n    }\n  }, {\n    key: \"isGetOrSetNonceError\",\n    value: function isGetOrSetNonceError(err) {\n      return err instanceof GetOrSetNonceError;\n    }\n  }]);\n\n  return Torus;\n}();\n\nexport { GetOrSetNonceError, Torus as default, kCombinations, keccak256, keyAssign, keyLookup, thresholdSame, waitKeyLookup };","map":{"version":3,"mappings":"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","names":["log","loglevel","getLogger","disableAll","capitalizeFirstLetter","str","charAt","toUpperCase","slice","SomeError","_inherits","_ref","errors","responses","predicate","_classCallCheck","_this","_defineProperty","Error","Some","promises","Promise","resolve","reject","finishedCount","sharedState","resolved","errorArr","Array","length","fill","undefined","resultArr","predicateError","forEach","x","index","then","resp","catch","error","finally","data","Object","values","reduce","acc","z","id","startsWith","msg","map","it","join","message","GetOrSetNonceError","kCombinations","s","k","set","from","_","i","cur","combs","tailCombs","j","push","thresholdSame","arr","t","hashMap","JsonStringify","keyLookup","endpoints","verifier","verifierId","lookupPromises","post","generateJsonRPCObject","verifier_id","toString","err","lookupResults","lookupShares","filter","x1","errorResult","x2","keyResult","x3","result","JSON","stringify","waitKeyLookup","timeout","setTimeout","keyAssign","_ref3","torusNodePubs","lastPoint","firstPoint","signerHost","network","nodeNum","Math","floor","random","initialPoint","_context2","headers","pubKeyX","X","pubKeyY","Y","useAPIKey","signedData","acceptedErrorMsgs","includes","keccak256","a","hash","createKeccakHash","update","digest","Torus","enableOneKey","metadataHost","allowHost","serverTimeOffset","ec","EC","doesKeyAssign","_context","isNewKey","assignResult","finalKeyResult","_finalKeyResult$keys$","keys","pub_key_X","pub_key_Y","getOrSetNonce","nonceResult","nonce","BN","typeOfUser","modifiedPubKey","keyFromPublic","y","getPublic","add","keyFromPrivate","pubNonce","finalX","getX","finalY","getY","address","generateAddressFromPubKey","upgraded","privKeyHex","metadataNonce","torusKeyHex","customKeyHex","torusKey","privKey","sub","umod","curve","n","customKey","newMetadataNonce","generateMetadataParams","setMetadata","indexes","verifierParams","idToken","extraParams","promiseArr","_context5","get","tmpKey","generatePrivate","pubKey","tokenCommitment","p","messageprefix","tokencommitment","temppubx","temppuby","verifieridentifier","completedRequests","_typeof","promiseArrRequest","nodeSigs","encrypted","item","idtoken","nodesignatures","_ref5","shareResponses","thresholdPublicKey","PublicKey","_context3","sharePromises","nodeIndexes","currentShareResponse","sort","b","Index","cmp","firstKey","Metadata","metadata","ephemPublicKey","Buffer","iv","mac","decrypt","ciphertext","Share","padStart","debug","all","sharesResolved","decryptedShares","curr","value","allCombis","privateKey","_loop","currentCombi","currentCombiShares","v","shares","indices","derivedPrivateKey","lagrangeInterpolation","decryptedPubKey","decryptedPubKeyX","decryptedPubKeyY","_ret","returnedKey","_context4","getNonce","_yield$_this$getNonce","getMetadata","ethAddress","generateAddressFromPrivKey","options","_context6","metadataResponse","key","setData","timestamp","Date","now","sig","sign","set_data","signature","r","_context7","nodeIndex","secret","upper","lower","mul","neg","temp","delta","invm","publicKey","encode","info","ethAddressLower","toChecksumAddress","publicKeyX","publicKeyY","isExtended","_context8","_ref8","_finalKeyResult$keys$2","_nonce","getOnly","_context10","privKeyBN","nonceBN","enableLogging","enableAll","apiKey","setAPIKey","embedHost","setEmbedHost"],"sources":["../src/loglevel.ts","../src/some.ts","../src/utils.ts","../src/torus.ts"],"sourcesContent":[null,null,null,null]},"metadata":{},"sourceType":"module"}