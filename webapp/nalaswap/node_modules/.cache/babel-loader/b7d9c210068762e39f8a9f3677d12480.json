{"ast":null,"code":"\"use strict\";\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  Object.defineProperty(o, k2, {\n    enumerable: true,\n    get: function () {\n      return m[k];\n    }\n  });\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n\n  __setModuleDefault(result, mod);\n\n  return result;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.HARDHAT_PARAM_DEFINITIONS = void 0;\n\nconst types = __importStar(require(\"./argumentTypes\"));\n\nexports.HARDHAT_PARAM_DEFINITIONS = {\n  network: {\n    name: \"network\",\n    defaultValue: undefined,\n    description: \"The network to connect to.\",\n    type: types.string,\n    isOptional: true,\n    isFlag: false,\n    isVariadic: false\n  },\n  showStackTraces: {\n    name: \"showStackTraces\",\n    defaultValue: false,\n    description: \"Show stack traces.\",\n    type: types.boolean,\n    isFlag: true,\n    isOptional: true,\n    isVariadic: false\n  },\n  version: {\n    name: \"version\",\n    defaultValue: false,\n    description: \"Shows hardhat's version.\",\n    type: types.boolean,\n    isFlag: true,\n    isOptional: true,\n    isVariadic: false\n  },\n  help: {\n    name: \"help\",\n    defaultValue: false,\n    description: \"Shows this message, or a task's help if its name is provided\",\n    type: types.boolean,\n    isFlag: true,\n    isOptional: true,\n    isVariadic: false\n  },\n  emoji: {\n    name: \"emoji\",\n    defaultValue: process.platform === \"darwin\",\n    description: \"Use emoji in messages.\",\n    type: types.boolean,\n    isFlag: true,\n    isOptional: true,\n    isVariadic: false\n  },\n  config: {\n    name: \"config\",\n    defaultValue: undefined,\n    description: \"A Hardhat config file.\",\n    type: types.inputFile,\n    isFlag: false,\n    isOptional: true,\n    isVariadic: false\n  },\n  verbose: {\n    name: \"verbose\",\n    defaultValue: false,\n    description: \"Enables Hardhat verbose logging\",\n    type: types.boolean,\n    isFlag: true,\n    isOptional: true,\n    isVariadic: false\n  },\n  maxMemory: {\n    name: \"maxMemory\",\n    defaultValue: undefined,\n    description: \"The maximum amount of memory that Hardhat can use.\",\n    type: types.int,\n    isOptional: true,\n    isFlag: false,\n    isVariadic: false\n  },\n  tsconfig: {\n    name: \"tsconfig\",\n    defaultValue: undefined,\n    description: \"A TypeScript config file.\",\n    type: types.inputFile,\n    isOptional: true,\n    isFlag: false,\n    isVariadic: false\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA;;AAEaA,oCAAqD;EAChEC,OAAO,EAAE;IACPC,IAAI,EAAE,SADC;IAEPC,YAAY,EAAEC,SAFP;IAGPC,WAAW,EAAE,4BAHN;IAIPC,IAAI,EAAEC,KAAK,CAACC,MAJL;IAKPC,UAAU,EAAE,IALL;IAMPC,MAAM,EAAE,KAND;IAOPC,UAAU,EAAE;EAPL,CADuD;EAUhEC,eAAe,EAAE;IACfV,IAAI,EAAE,iBADS;IAEfC,YAAY,EAAE,KAFC;IAGfE,WAAW,EAAE,oBAHE;IAIfC,IAAI,EAAEC,KAAK,CAACM,OAJG;IAKfH,MAAM,EAAE,IALO;IAMfD,UAAU,EAAE,IANG;IAOfE,UAAU,EAAE;EAPG,CAV+C;EAmBhEG,OAAO,EAAE;IACPZ,IAAI,EAAE,SADC;IAEPC,YAAY,EAAE,KAFP;IAGPE,WAAW,EAAE,0BAHN;IAIPC,IAAI,EAAEC,KAAK,CAACM,OAJL;IAKPH,MAAM,EAAE,IALD;IAMPD,UAAU,EAAE,IANL;IAOPE,UAAU,EAAE;EAPL,CAnBuD;EA4BhEI,IAAI,EAAE;IACJb,IAAI,EAAE,MADF;IAEJC,YAAY,EAAE,KAFV;IAGJE,WAAW,EAAE,8DAHT;IAIJC,IAAI,EAAEC,KAAK,CAACM,OAJR;IAKJH,MAAM,EAAE,IALJ;IAMJD,UAAU,EAAE,IANR;IAOJE,UAAU,EAAE;EAPR,CA5B0D;EAqChEK,KAAK,EAAE;IACLd,IAAI,EAAE,OADD;IAELC,YAAY,EAAEc,OAAO,CAACC,QAAR,KAAqB,QAF9B;IAGLb,WAAW,EAAE,wBAHR;IAILC,IAAI,EAAEC,KAAK,CAACM,OAJP;IAKLH,MAAM,EAAE,IALH;IAMLD,UAAU,EAAE,IANP;IAOLE,UAAU,EAAE;EAPP,CArCyD;EA8ChEQ,MAAM,EAAE;IACNjB,IAAI,EAAE,QADA;IAENC,YAAY,EAAEC,SAFR;IAGNC,WAAW,EAAE,wBAHP;IAINC,IAAI,EAAEC,KAAK,CAACa,SAJN;IAKNV,MAAM,EAAE,KALF;IAMND,UAAU,EAAE,IANN;IAONE,UAAU,EAAE;EAPN,CA9CwD;EAuDhEU,OAAO,EAAE;IACPnB,IAAI,EAAE,SADC;IAEPC,YAAY,EAAE,KAFP;IAGPE,WAAW,EAAE,iCAHN;IAIPC,IAAI,EAAEC,KAAK,CAACM,OAJL;IAKPH,MAAM,EAAE,IALD;IAMPD,UAAU,EAAE,IANL;IAOPE,UAAU,EAAE;EAPL,CAvDuD;EAgEhEW,SAAS,EAAE;IACTpB,IAAI,EAAE,WADG;IAETC,YAAY,EAAEC,SAFL;IAGTC,WAAW,EAAE,oDAHJ;IAITC,IAAI,EAAEC,KAAK,CAACgB,GAJH;IAKTd,UAAU,EAAE,IALH;IAMTC,MAAM,EAAE,KANC;IAOTC,UAAU,EAAE;EAPH,CAhEqD;EAyEhEa,QAAQ,EAAE;IACRtB,IAAI,EAAE,UADE;IAERC,YAAY,EAAEC,SAFN;IAGRC,WAAW,EAAE,2BAHL;IAIRC,IAAI,EAAEC,KAAK,CAACa,SAJJ;IAKRX,UAAU,EAAE,IALJ;IAMRC,MAAM,EAAE,KANA;IAORC,UAAU,EAAE;EAPJ;AAzEsD,CAArD","names":["exports","network","name","defaultValue","undefined","description","type","types","string","isOptional","isFlag","isVariadic","showStackTraces","boolean","version","help","emoji","process","platform","config","inputFile","verbose","maxMemory","int","tsconfig"],"sourceRoot":"","sources":["../../../src/internal/core/params/hardhat-params.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}