{"ast":null,"code":"var _jsxFileName = \"/Users/ja/Desktop/MyProjects/NalaSwap/webapp/nalaswap/src/components/Navbar.js\",\n    _s = $RefreshSig$();\n\nimport AppBar from '@mui/material/AppBar';\nimport Box from '@mui/material/Box';\nimport Toolbar from '@mui/material/Toolbar';\nimport IconButton from '@mui/material/IconButton';\nimport Typography from '@mui/material/Typography';\nimport Container from '@mui/material/Container';\nimport Button from '@mui/material/Button';\nimport Tooltip from '@mui/material/Tooltip';\nimport { ThemeProvider, createTheme } from '@mui/material/styles';\nimport Stack from '@mui/material/Stack';\nimport { useNavigate } from 'react-router-dom';\nimport logo from \"../logo.svg\";\nimport { ethers } from \"ethers\";\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst pages = ['Swap', 'Pools', 'Stake NLA', 'Mint NFT', 'Stake NFT'];\n\nconst ResponsiveAppBar = () => {\n  _s();\n\n  const [anchorElNav, setAnchorElNav] = React.useState(null);\n  const [anchorElUser, setAnchorElUser] = React.useState(null);\n  const [errorMessage, setErrorMessage] = useState(null);\n  const [account, setAccount] = useState(null);\n  const [balance, setBalance] = useState(null);\n  const navigate = useNavigate();\n  useEffect(() => {\n    if (window.ethereum) {\n      window.ethereum.on(\"accountsChanged\", accountsChanged);\n      window.ethereum.on(\"chainChanged\", chainChanged);\n    }\n  }, []);\n\n  const connectHandler = async () => {\n    if (window.ethereum) {\n      try {\n        const res = await window.ethereum.request({\n          method: \"eth_requestAccounts\"\n        });\n        await accountsChanged(res[0]);\n      } catch (err) {\n        console.error(err);\n        setErrorMessage(\"There was a problem connecting to MetaMask\");\n      }\n    } else {\n      setErrorMessage(\"Install MetaMask\");\n    }\n  };\n\n  const accountsChanged = async newAccount => {\n    setAccount(newAccount);\n\n    try {\n      const balance = await window.ethereum.request({\n        method: \"eth_getBalance\",\n        params: [newAccount.toString(), \"latest\"]\n      });\n      setBalance(ethers.utils.formatEther(balance));\n    } catch (err) {\n      console.error(err);\n      setErrorMessage(\"There was a problem connecting to MetaMask\");\n    }\n  };\n\n  const chainChanged = () => {\n    setErrorMessage(null);\n    setAccount(null);\n    setBalance(null);\n  };\n\n  const handlePageChange = () => {\n    setAnchorElNav(null);\n  };\n\n  const darkTheme = createTheme({\n    palette: {\n      mode: 'dark',\n      primary: {\n        main: '#1976d2'\n      }\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(Stack, {\n    spacing: 2,\n    sx: {\n      flexGrow: 1\n    },\n    children: /*#__PURE__*/_jsxDEV(ThemeProvider, {\n      theme: darkTheme,\n      children: /*#__PURE__*/_jsxDEV(AppBar, {\n        position: \"static\",\n        children: /*#__PURE__*/_jsxDEV(Container, {\n          maxWidth: \"xl\",\n          children: /*#__PURE__*/_jsxDEV(Toolbar, {\n            disableGutters: true,\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              noWrap: true,\n              component: \"div\",\n              sx: {\n                mr: 2,\n                display: {\n                  xs: 'none',\n                  md: 'flex'\n                }\n              },\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                style: {\n                  width: \"50px\",\n                  height: \"50px\",\n                  margin: \"0px\",\n                  padding: \"0px\"\n                },\n                src: logo,\n                className: \"App-logo\",\n                alt: \"logo\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                flexGrow: 1,\n                display: {\n                  xs: 'none',\n                  md: 'flex'\n                }\n              },\n              children: pages.map(page => /*#__PURE__*/_jsxDEV(Button, {\n                onClick: () => navigate(page.toLowerCase()),\n                sx: {\n                  my: 1,\n                  color: 'yellow',\n                  display: 'block'\n                },\n                children: page\n              }, page, false, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 25\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                flexGrow: 0,\n                display: {\n                  xs: 'none',\n                  md: 'flex'\n                }\n              },\n              children: [/*#__PURE__*/_jsxDEV(Tooltip, {\n                title: \"Connect to metamask\",\n                children: /*#__PURE__*/_jsxDEV(IconButton, {\n                  onClick: connectHandler,\n                  sx: {\n                    p: 0\n                  },\n                  children: /*#__PURE__*/_jsxDEV(\"img\", {\n                    style: {\n                      width: \"50px\",\n                      height: \"50px\",\n                      margin: \"0px\",\n                      padding: \"0px\"\n                    },\n                    src: \"https://upload.wikimedia.org/wikipedia/commons/thumb/3/36/MetaMask_Fox.svg/800px-MetaMask_Fox.svg.png\",\n                    className: \"App-logo\",\n                    alt: \"logo\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 114,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 113,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 21\n              }, this), account !== null ? /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"small\",\n                noWrap: true,\n                component: \"div\",\n                sx: {\n                  my: 2,\n                  ml: 1,\n                  display: 'block'\n                },\n                children: `${account.substr(0, 5)}...${account.substr(account.length - 5, account.length)}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 118,\n                columnNumber: 25\n              }, this) : \"\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ResponsiveAppBar, \"gElAOhduhZLE9qL1FwltUdO6eRU=\", false, function () {\n  return [useNavigate];\n});\n\n_c = ResponsiveAppBar;\nexport default ResponsiveAppBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"ResponsiveAppBar\");","map":{"version":3,"names":["AppBar","Box","Toolbar","IconButton","Typography","Container","Button","Tooltip","ThemeProvider","createTheme","Stack","useNavigate","ethers","React","useEffect","useState","pages","ResponsiveAppBar","anchorElNav","setAnchorElNav","anchorElUser","setAnchorElUser","errorMessage","setErrorMessage","account","setAccount","balance","setBalance","navigate","window","ethereum","on","accountsChanged","chainChanged","connectHandler","res","request","method","err","console","error","newAccount","params","toString","utils","formatEther","handlePageChange","darkTheme","palette","mode","primary","main","flexGrow","mr","display","xs","md","width","height","margin","padding","logo","map","page","toLowerCase","my","color","p","ml","substr","length"],"sources":["/Users/ja/Desktop/MyProjects/NalaSwap/webapp/nalaswap/src/components/Navbar.js"],"sourcesContent":["import AppBar from '@mui/material/AppBar';\nimport Box from '@mui/material/Box';\nimport Toolbar from '@mui/material/Toolbar';\nimport IconButton from '@mui/material/IconButton';\nimport Typography from '@mui/material/Typography';\nimport Container from '@mui/material/Container';\nimport Button from '@mui/material/Button';\nimport Tooltip from '@mui/material/Tooltip';\nimport { ThemeProvider, createTheme } from '@mui/material/styles';\nimport Stack from '@mui/material/Stack';\nimport { useNavigate } from 'react-router-dom';\n\nimport logo from \"../logo.svg\";\n\nimport { ethers } from \"ethers\";\nimport React, { useEffect, useState } from \"react\";\n\nconst pages = ['Swap', 'Pools', 'Stake NLA', 'Mint NFT', 'Stake NFT'];\n\nconst ResponsiveAppBar = () => {\n    const [anchorElNav, setAnchorElNav] = React.useState(null);\n    const [anchorElUser, setAnchorElUser] = React.useState(null);\n\n    const [errorMessage, setErrorMessage] = useState(null);\n    const [account, setAccount] = useState(null);\n    const [balance, setBalance] = useState(null);\n\n    const navigate = useNavigate();\n\n    useEffect(() => {\n        if (window.ethereum) {\n            window.ethereum.on(\"accountsChanged\", accountsChanged);\n            window.ethereum.on(\"chainChanged\", chainChanged);\n        }\n    },[]);\n\n    const connectHandler = async () => {\n        if (window.ethereum) {\n          try {\n            const res = await window.ethereum.request({\n              method: \"eth_requestAccounts\",\n            });\n            await accountsChanged(res[0]);\n          } catch (err) {\n            console.error(err);\n            setErrorMessage(\"There was a problem connecting to MetaMask\");\n          }\n        } else {\n          setErrorMessage(\"Install MetaMask\");\n        }\n    };\n    \n    const accountsChanged = async (newAccount) => {\n        setAccount(newAccount);\n        try {\n            const balance = await window.ethereum.request({\n            method: \"eth_getBalance\",\n            params: [newAccount.toString(), \"latest\"],\n            });\n            setBalance(ethers.utils.formatEther(balance));\n        } catch (err) {\n            console.error(err);\n            setErrorMessage(\"There was a problem connecting to MetaMask\");\n        }\n    };\n\n    const chainChanged = () => {\n        setErrorMessage(null);\n        setAccount(null);\n        setBalance(null);\n    };\n\n  const handlePageChange = () => {\n    setAnchorElNav(null);\n  };\n\n  const darkTheme = createTheme({\n    palette: {\n      mode: 'dark',\n      primary: {\n        main: '#1976d2',\n      },\n    },\n  });\n\n  return (\n    <Stack spacing={2} sx={{ flexGrow: 1 }}>\n        <ThemeProvider theme={darkTheme}>\n            <AppBar position=\"static\">\n            <Container maxWidth=\"xl\">\n                <Toolbar disableGutters>\n                <Typography\n                    variant=\"h6\"\n                    noWrap\n                    component=\"div\"\n                    sx={{ mr: 2, display: { xs: 'none', md: 'flex' } }}\n                >\n                    <img style={{width: \"50px\", height:\"50px\", margin:\"0px\", padding:\"0px\"}} src={logo} className=\"App-logo\" alt=\"logo\" />\n                </Typography>\n                <Box sx={{ flexGrow: 1, display: { xs: 'none', md: 'flex' } }}>\n                    {pages.map((page) => (\n                        <Button\n                            key={page}\n                            onClick={()=> navigate(page.toLowerCase())}\n                            sx={{ my: 1, color: 'yellow', display: 'block' }}\n                        >\n                            {page}\n                        </Button>\n                    ))}\n                </Box>\n                <Box sx={{ flexGrow: 0, display: { xs: 'none', md: 'flex' } }}>\n                    <Tooltip title=\"Connect to metamask\">\n                    <IconButton onClick={connectHandler} sx={{ p: 0 }}>\n                        <img style={{width: \"50px\", height:\"50px\", margin:\"0px\", padding:\"0px\"}} src={\"https://upload.wikimedia.org/wikipedia/commons/thumb/3/36/MetaMask_Fox.svg/800px-MetaMask_Fox.svg.png\"} className=\"App-logo\" alt=\"logo\" />\n                    </IconButton>\n                    </Tooltip>\n                    {account !== null ? \n                        <Typography\n                        variant=\"small\"\n                        noWrap\n                        component=\"div\"\n                        sx={{ my: 2, ml: 1, display: 'block' }}\n                        >\n                            {`${account.substr(0,5)}...${account.substr(account.length - 5, account.length)}`}\n                        </Typography>\n                    : \"\"}\n                </Box>\n                </Toolbar>\n            </Container>\n            </AppBar>\n        </ThemeProvider>\n    </Stack>\n  );\n};\nexport default ResponsiveAppBar;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}