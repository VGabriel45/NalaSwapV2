{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.panicErrorCodeToMessage = void 0;\n\nfunction panicErrorCodeToMessage(errorCode) {\n  const reason = panicErrorCodeToReason(errorCode);\n\n  if (reason !== undefined) {\n    return `reverted with panic code 0x${errorCode.toString(16)} (${reason})`;\n  }\n\n  return `reverted with unknown panic code 0x${errorCode.toString(16)}`;\n}\n\nexports.panicErrorCodeToMessage = panicErrorCodeToMessage;\n\nfunction panicErrorCodeToReason(errorCode) {\n  switch (errorCode.toNumber()) {\n    case 0x1:\n      return \"Assertion error\";\n\n    case 0x11:\n      return \"Arithmetic operation underflowed or overflowed outside of an unchecked block\";\n\n    case 0x12:\n      return \"Division or modulo division by zero\";\n\n    case 0x21:\n      return \"Tried to convert a value into an enum, but the value was too big or negative\";\n\n    case 0x22:\n      return \"Incorrectly encoded storage byte array\";\n\n    case 0x31:\n      return \".pop() was called on an empty array\";\n\n    case 0x32:\n      return \"Array accessed at an out-of-bounds or negative index\";\n\n    case 0x41:\n      return \"Too much memory was allocated, or an array was created that is too large\";\n\n    case 0x51:\n      return \"Called a zero-initialized variable of internal function type\";\n  }\n}","map":{"version":3,"mappings":";;;;;;;AAEA,SAAgBA,uBAAhB,CAAwCC,SAAxC,EAAqD;EACnD,MAAMC,MAAM,GAAGC,sBAAsB,CAACF,SAAD,CAArC;;EAEA,IAAIC,MAAM,KAAKE,SAAf,EAA0B;IACxB,OAAO,8BAA8BH,SAAS,CAACI,QAAV,CAAmB,EAAnB,CAAsB,KAAKH,MAAM,GAAtE;EACD;;EAED,OAAO,sCAAsCD,SAAS,CAACI,QAAV,CAAmB,EAAnB,CAAsB,EAAnE;AACD;;AARDC;;AAUA,SAASH,sBAAT,CAAgCF,SAAhC,EAA6C;EAC3C,QAAQA,SAAS,CAACM,QAAV,EAAR;IACE,KAAK,GAAL;MACE,OAAO,iBAAP;;IACF,KAAK,IAAL;MACE,OAAO,8EAAP;;IACF,KAAK,IAAL;MACE,OAAO,qCAAP;;IACF,KAAK,IAAL;MACE,OAAO,8EAAP;;IACF,KAAK,IAAL;MACE,OAAO,wCAAP;;IACF,KAAK,IAAL;MACE,OAAO,qCAAP;;IACF,KAAK,IAAL;MACE,OAAO,sDAAP;;IACF,KAAK,IAAL;MACE,OAAO,0EAAP;;IACF,KAAK,IAAL;MACE,OAAO,8DAAP;EAlBJ;AAoBD","names":["panicErrorCodeToMessage","errorCode","reason","panicErrorCodeToReason","undefined","toString","exports","toNumber"],"sourceRoot":"","sources":["../../../src/internal/hardhat-network/stack-traces/panic-errors.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}