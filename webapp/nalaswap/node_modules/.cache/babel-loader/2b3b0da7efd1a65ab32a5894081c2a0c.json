{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SolidityError = exports.encodeSolidityStackTrace = exports.wrapWithSolidityErrorsCorrection = exports.getCurrentStack = void 0;\n\nconst ethereumjs_util_1 = require(\"ethereumjs-util\");\n\nconst panic_errors_1 = require(\"./panic-errors\");\n\nconst solidity_stack_trace_1 = require(\"./solidity-stack-trace\");\n\nconst inspect = Symbol.for(\"nodejs.util.inspect.custom\");\n\nfunction getCurrentStack() {\n  const previousPrepareStackTrace = Error.prepareStackTrace;\n\n  Error.prepareStackTrace = (e, s) => s;\n\n  const error = new Error();\n  const stack = error.stack;\n  Error.prepareStackTrace = previousPrepareStackTrace;\n  return stack;\n}\n\nexports.getCurrentStack = getCurrentStack;\n\nasync function wrapWithSolidityErrorsCorrection(f, stackFramesToRemove) {\n  const stackTraceAtCall = getCurrentStack().slice(stackFramesToRemove);\n\n  try {\n    return await f();\n  } catch (error) {\n    if (error.stackTrace === undefined) {\n      // eslint-disable-next-line @nomiclabs/hardhat-internal-rules/only-hardhat-error\n      throw error;\n    } // eslint-disable-next-line @nomiclabs/hardhat-internal-rules/only-hardhat-error\n\n\n    throw encodeSolidityStackTrace(error.message, error.stackTrace, stackTraceAtCall);\n  }\n}\n\nexports.wrapWithSolidityErrorsCorrection = wrapWithSolidityErrorsCorrection;\n\nfunction encodeSolidityStackTrace(fallbackMessage, stackTrace, previousStack) {\n  if (Error.prepareStackTrace === undefined) {\n    // Node 12 doesn't have a default Error.prepareStackTrace\n    require(\"source-map-support/register\");\n  }\n\n  const previousPrepareStackTrace = Error.prepareStackTrace;\n\n  Error.prepareStackTrace = (error, stack) => {\n    if (previousStack !== undefined) {\n      stack = previousStack;\n    } else {\n      // We remove Hardhat Network related stack traces\n      stack.splice(0, 3);\n    }\n\n    for (const entry of stackTrace) {\n      const callsite = encodeStackTraceEntry(entry);\n\n      if (callsite === undefined) {\n        continue;\n      }\n\n      stack.unshift(callsite);\n    }\n\n    return previousPrepareStackTrace(error, stack);\n  };\n\n  const msg = getMessageFromLastStackTraceEntry(stackTrace[stackTrace.length - 1]);\n  const solidityError = new SolidityError(msg !== undefined ? msg : fallbackMessage, stackTrace); // This hack is here because prepare stack is lazy\n\n  solidityError.stack = solidityError.stack;\n  Error.prepareStackTrace = previousPrepareStackTrace;\n  return solidityError;\n}\n\nexports.encodeSolidityStackTrace = encodeSolidityStackTrace;\n\nfunction encodeStackTraceEntry(stackTraceEntry) {\n  switch (stackTraceEntry.type) {\n    case solidity_stack_trace_1.StackTraceEntryType.UNRECOGNIZED_FUNCTION_WITHOUT_FALLBACK_ERROR:\n    case solidity_stack_trace_1.StackTraceEntryType.MISSING_FALLBACK_OR_RECEIVE_ERROR:\n      return sourceReferenceToSolidityCallsite(Object.assign(Object.assign({}, stackTraceEntry.sourceReference), {\n        function: solidity_stack_trace_1.UNRECOGNIZED_FUNCTION_NAME\n      }));\n\n    case solidity_stack_trace_1.StackTraceEntryType.CALLSTACK_ENTRY:\n    case solidity_stack_trace_1.StackTraceEntryType.REVERT_ERROR:\n    case solidity_stack_trace_1.StackTraceEntryType.PANIC_ERROR:\n    case solidity_stack_trace_1.StackTraceEntryType.CUSTOM_ERROR:\n    case solidity_stack_trace_1.StackTraceEntryType.FUNCTION_NOT_PAYABLE_ERROR:\n    case solidity_stack_trace_1.StackTraceEntryType.INVALID_PARAMS_ERROR:\n    case solidity_stack_trace_1.StackTraceEntryType.FALLBACK_NOT_PAYABLE_ERROR:\n    case solidity_stack_trace_1.StackTraceEntryType.FALLBACK_NOT_PAYABLE_AND_NO_RECEIVE_ERROR:\n    case solidity_stack_trace_1.StackTraceEntryType.RETURNDATA_SIZE_ERROR:\n    case solidity_stack_trace_1.StackTraceEntryType.NONCONTRACT_ACCOUNT_CALLED_ERROR:\n    case solidity_stack_trace_1.StackTraceEntryType.CALL_FAILED_ERROR:\n    case solidity_stack_trace_1.StackTraceEntryType.DIRECT_LIBRARY_CALL_ERROR:\n    case solidity_stack_trace_1.StackTraceEntryType.UNMAPPED_SOLC_0_6_3_REVERT_ERROR:\n    case solidity_stack_trace_1.StackTraceEntryType.CONTRACT_TOO_LARGE_ERROR:\n      return sourceReferenceToSolidityCallsite(stackTraceEntry.sourceReference);\n\n    case solidity_stack_trace_1.StackTraceEntryType.UNRECOGNIZED_CREATE_CALLSTACK_ENTRY:\n      return new SolidityCallSite(undefined, solidity_stack_trace_1.UNRECOGNIZED_CONTRACT_NAME, solidity_stack_trace_1.CONSTRUCTOR_FUNCTION_NAME, undefined);\n\n    case solidity_stack_trace_1.StackTraceEntryType.UNRECOGNIZED_CONTRACT_CALLSTACK_ENTRY:\n      return new SolidityCallSite((0, ethereumjs_util_1.bufferToHex)(stackTraceEntry.address), solidity_stack_trace_1.UNRECOGNIZED_CONTRACT_NAME, solidity_stack_trace_1.UNKNOWN_FUNCTION_NAME, undefined);\n\n    case solidity_stack_trace_1.StackTraceEntryType.PRECOMPILE_ERROR:\n      return new SolidityCallSite(undefined, `<PrecompileContract ${stackTraceEntry.precompile}>`, solidity_stack_trace_1.PRECOMPILE_FUNCTION_NAME, undefined);\n\n    case solidity_stack_trace_1.StackTraceEntryType.UNRECOGNIZED_CREATE_ERROR:\n      return new SolidityCallSite(undefined, solidity_stack_trace_1.UNRECOGNIZED_CONTRACT_NAME, solidity_stack_trace_1.CONSTRUCTOR_FUNCTION_NAME, undefined);\n\n    case solidity_stack_trace_1.StackTraceEntryType.UNRECOGNIZED_CONTRACT_ERROR:\n      return new SolidityCallSite((0, ethereumjs_util_1.bufferToHex)(stackTraceEntry.address), solidity_stack_trace_1.UNRECOGNIZED_CONTRACT_NAME, solidity_stack_trace_1.UNKNOWN_FUNCTION_NAME, undefined);\n\n    case solidity_stack_trace_1.StackTraceEntryType.INTERNAL_FUNCTION_CALLSTACK_ENTRY:\n      return new SolidityCallSite(stackTraceEntry.sourceReference.sourceName, stackTraceEntry.sourceReference.contract, `internal@${stackTraceEntry.pc}`, undefined);\n\n    case solidity_stack_trace_1.StackTraceEntryType.CONTRACT_CALL_RUN_OUT_OF_GAS_ERROR:\n      if (stackTraceEntry.sourceReference !== undefined) {\n        return sourceReferenceToSolidityCallsite(stackTraceEntry.sourceReference);\n      }\n\n      return new SolidityCallSite(undefined, solidity_stack_trace_1.UNRECOGNIZED_CONTRACT_NAME, solidity_stack_trace_1.UNKNOWN_FUNCTION_NAME, undefined);\n\n    case solidity_stack_trace_1.StackTraceEntryType.OTHER_EXECUTION_ERROR:\n      if (stackTraceEntry.sourceReference === undefined) {\n        return new SolidityCallSite(undefined, solidity_stack_trace_1.UNRECOGNIZED_CONTRACT_NAME, solidity_stack_trace_1.UNKNOWN_FUNCTION_NAME, undefined);\n      }\n\n      return sourceReferenceToSolidityCallsite(stackTraceEntry.sourceReference);\n  }\n}\n\nfunction sourceReferenceToSolidityCallsite(sourceReference) {\n  return new SolidityCallSite(sourceReference.sourceName, sourceReference.contract, sourceReference.function !== undefined ? sourceReference.function : solidity_stack_trace_1.UNKNOWN_FUNCTION_NAME, sourceReference.line);\n}\n\nfunction getMessageFromLastStackTraceEntry(stackTraceEntry) {\n  switch (stackTraceEntry.type) {\n    case solidity_stack_trace_1.StackTraceEntryType.PRECOMPILE_ERROR:\n      return `Transaction reverted: call to precompile ${stackTraceEntry.precompile} failed`;\n\n    case solidity_stack_trace_1.StackTraceEntryType.FUNCTION_NOT_PAYABLE_ERROR:\n      return `Transaction reverted: non-payable function was called with value ${stackTraceEntry.value.toString(10)}`;\n\n    case solidity_stack_trace_1.StackTraceEntryType.INVALID_PARAMS_ERROR:\n      return `Transaction reverted: function was called with incorrect parameters`;\n\n    case solidity_stack_trace_1.StackTraceEntryType.FALLBACK_NOT_PAYABLE_ERROR:\n      return `Transaction reverted: fallback function is not payable and was called with value ${stackTraceEntry.value.toString(10)}`;\n\n    case solidity_stack_trace_1.StackTraceEntryType.FALLBACK_NOT_PAYABLE_AND_NO_RECEIVE_ERROR:\n      return `Transaction reverted: there's no receive function, fallback function is not payable and was called with value ${stackTraceEntry.value.toString(10)}`;\n\n    case solidity_stack_trace_1.StackTraceEntryType.UNRECOGNIZED_FUNCTION_WITHOUT_FALLBACK_ERROR:\n      return `Transaction reverted: function selector was not recognized and there's no fallback function`;\n\n    case solidity_stack_trace_1.StackTraceEntryType.MISSING_FALLBACK_OR_RECEIVE_ERROR:\n      return `Transaction reverted: function selector was not recognized and there's no fallback nor receive function`;\n\n    case solidity_stack_trace_1.StackTraceEntryType.RETURNDATA_SIZE_ERROR:\n      return `Transaction reverted: function returned an unexpected amount of data`;\n\n    case solidity_stack_trace_1.StackTraceEntryType.NONCONTRACT_ACCOUNT_CALLED_ERROR:\n      return `Transaction reverted: function call to a non-contract account`;\n\n    case solidity_stack_trace_1.StackTraceEntryType.CALL_FAILED_ERROR:\n      return `Transaction reverted: function call failed to execute`;\n\n    case solidity_stack_trace_1.StackTraceEntryType.DIRECT_LIBRARY_CALL_ERROR:\n      return `Transaction reverted: library was called directly`;\n\n    case solidity_stack_trace_1.StackTraceEntryType.UNRECOGNIZED_CREATE_ERROR:\n    case solidity_stack_trace_1.StackTraceEntryType.UNRECOGNIZED_CONTRACT_ERROR:\n      if (stackTraceEntry.message.isErrorReturnData()) {\n        return `VM Exception while processing transaction: reverted with reason string '${stackTraceEntry.message.decodeError()}'`;\n      }\n\n      return \"Transaction reverted without a reason string\";\n\n    case solidity_stack_trace_1.StackTraceEntryType.REVERT_ERROR:\n      if (stackTraceEntry.message.isErrorReturnData()) {\n        return `VM Exception while processing transaction: reverted with reason string '${stackTraceEntry.message.decodeError()}'`;\n      }\n\n      if (stackTraceEntry.isInvalidOpcodeError) {\n        return \"VM Exception while processing transaction: invalid opcode\";\n      }\n\n      return \"Transaction reverted without a reason string\";\n\n    case solidity_stack_trace_1.StackTraceEntryType.PANIC_ERROR:\n      const panicMessage = (0, panic_errors_1.panicErrorCodeToMessage)(stackTraceEntry.errorCode);\n      return `VM Exception while processing transaction: ${panicMessage}`;\n\n    case solidity_stack_trace_1.StackTraceEntryType.CUSTOM_ERROR:\n      return `VM Exception while processing transaction: ${stackTraceEntry.message}`;\n\n    case solidity_stack_trace_1.StackTraceEntryType.OTHER_EXECUTION_ERROR:\n      // TODO: What if there was returnData?\n      return `Transaction reverted and Hardhat couldn't infer the reason. Please report this to help us improve Hardhat.`;\n\n    case solidity_stack_trace_1.StackTraceEntryType.UNMAPPED_SOLC_0_6_3_REVERT_ERROR:\n      return \"Transaction reverted without a reason string and without a valid sourcemap provided by the compiler. Some line numbers may be off. We strongly recommend upgrading solc and always using revert reasons.\";\n\n    case solidity_stack_trace_1.StackTraceEntryType.CONTRACT_TOO_LARGE_ERROR:\n      return \"Transaction reverted: trying to deploy a contract whose code is too large\";\n\n    case solidity_stack_trace_1.StackTraceEntryType.CONTRACT_CALL_RUN_OUT_OF_GAS_ERROR:\n      return \"Transaction reverted: contract call run out of gas and made the transaction revert\";\n  }\n} // Note: This error class MUST NOT extend ProviderError, as libraries\n//   use the code property to detect if they are dealing with a JSON-RPC error,\n//   and take control of errors.\n\n\nclass SolidityError extends Error {\n  constructor(message, stackTrace) {\n    super(message);\n    this.stackTrace = stackTrace;\n  }\n\n  [inspect]() {\n    return this.inspect();\n  }\n\n  inspect() {\n    return this.stack !== undefined ? this.stack : \"Internal error when encoding SolidityError\";\n  }\n\n}\n\nexports.SolidityError = SolidityError;\n\nclass SolidityCallSite {\n  constructor(_sourceName, _contract, _functionName, _line) {\n    this._sourceName = _sourceName;\n    this._contract = _contract;\n    this._functionName = _functionName;\n    this._line = _line;\n  }\n\n  getColumnNumber() {\n    return null;\n  }\n\n  getEvalOrigin() {\n    return undefined;\n  }\n\n  getFileName() {\n    var _a;\n\n    return (_a = this._sourceName) !== null && _a !== void 0 ? _a : \"unknown\";\n  }\n\n  getFunction() {\n    return undefined;\n  }\n\n  getFunctionName() {\n    var _a; // if it's a top-level function, we print its name\n\n\n    if (this._contract === undefined) {\n      return (_a = this._functionName) !== null && _a !== void 0 ? _a : null;\n    }\n\n    return null;\n  }\n\n  getLineNumber() {\n    return this._line !== undefined ? this._line : null;\n  }\n\n  getMethodName() {\n    var _a;\n\n    if (this._contract !== undefined) {\n      return (_a = this._functionName) !== null && _a !== void 0 ? _a : null;\n    }\n\n    return null;\n  }\n\n  getPosition() {\n    return 0;\n  }\n\n  getPromiseIndex() {\n    return 0;\n  }\n\n  getScriptNameOrSourceURL() {\n    return null;\n  }\n\n  getThis() {\n    return undefined;\n  }\n\n  getTypeName() {\n    var _a;\n\n    return (_a = this._contract) !== null && _a !== void 0 ? _a : null;\n  }\n\n  isAsync() {\n    return false;\n  }\n\n  isConstructor() {\n    return false;\n  }\n\n  isEval() {\n    return false;\n  }\n\n  isNative() {\n    return false;\n  }\n\n  isPromiseAll() {\n    return false;\n  }\n\n  isToplevel() {\n    return false;\n  }\n\n}","map":{"version":3,"mappings":"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","names":["inspect","Symbol","for","getCurrentStack","previousPrepareStackTrace","Error","prepareStackTrace","e","s","error","stack","exports","wrapWithSolidityErrorsCorrection","f","stackFramesToRemove","stackTraceAtCall","slice","stackTrace","undefined","encodeSolidityStackTrace","message","fallbackMessage","previousStack","require","splice","entry","callsite","encodeStackTraceEntry","unshift","msg","getMessageFromLastStackTraceEntry","length","solidityError","SolidityError","stackTraceEntry","type","solidity_stack_trace_1","UNRECOGNIZED_FUNCTION_WITHOUT_FALLBACK_ERROR","MISSING_FALLBACK_OR_RECEIVE_ERROR","sourceReferenceToSolidityCallsite","sourceReference","function","CALLSTACK_ENTRY","REVERT_ERROR","PANIC_ERROR","CUSTOM_ERROR","FUNCTION_NOT_PAYABLE_ERROR","INVALID_PARAMS_ERROR","FALLBACK_NOT_PAYABLE_ERROR","FALLBACK_NOT_PAYABLE_AND_NO_RECEIVE_ERROR","RETURNDATA_SIZE_ERROR","NONCONTRACT_ACCOUNT_CALLED_ERROR","CALL_FAILED_ERROR","DIRECT_LIBRARY_CALL_ERROR","UNMAPPED_SOLC_0_6_3_REVERT_ERROR","CONTRACT_TOO_LARGE_ERROR","UNRECOGNIZED_CREATE_CALLSTACK_ENTRY","SolidityCallSite","UNRECOGNIZED_CONTRACT_CALLSTACK_ENTRY","address","PRECOMPILE_ERROR","precompile","UNRECOGNIZED_CREATE_ERROR","UNRECOGNIZED_CONTRACT_ERROR","INTERNAL_FUNCTION_CALLSTACK_ENTRY","sourceName","contract","pc","CONTRACT_CALL_RUN_OUT_OF_GAS_ERROR","OTHER_EXECUTION_ERROR","line","value","toString","isErrorReturnData","decodeError","isInvalidOpcodeError","panicMessage","errorCode","constructor","_sourceName","_contract","_functionName","_line","getColumnNumber","getEvalOrigin","getFileName","_a","getFunction","getFunctionName","getLineNumber","getMethodName","getPosition","getPromiseIndex","getScriptNameOrSourceURL","getThis","getTypeName","isAsync","isConstructor","isEval","isNative","isPromiseAll","isToplevel"],"sourceRoot":"","sources":["../../../src/internal/hardhat-network/stack-traces/solidity-errors.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}