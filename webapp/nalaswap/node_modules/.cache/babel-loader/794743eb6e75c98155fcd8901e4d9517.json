{"ast":null,"code":"var _jsxFileName = \"/Users/ja/Desktop/MyProjects/NalaSwap/webapp/nalaswap/src/pages/Pools.js\",\n    _s = $RefreshSig$();\n\nimport * as React from 'react';\nimport { useEffect, useState } from \"react\";\nimport NalaRouterABI from \"../ABIS/NalaRouter.json\";\nimport contractAddresses from \"../utils/contractsAddresses.json\";\nimport { tokens } from \"../utils/availableTokens\";\nimport nalaRouterABI from \"../ABIS/NalaRouter.json\";\nimport pancakeFactoryABI from \"../ABIS/PancakeFactory.json\";\nimport nalaTokenABI from \"../ABIS/NalaTokenABI.json\";\nimport { BigNumber, ethers } from 'ethers';\nimport { Widget } from \"web3uikit\";\nimport Button from '@mui/material/Button';\nimport TextField from '@mui/material/TextField';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Pools() {\n  _s();\n\n  const nalaRouterAddress = contractAddresses.nalaRouterContract;\n  const nlaTokenAddress = contractAddresses.nalaTokenAddress;\n  const wBNBTokenAddress = \"0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c\";\n  const pancakeFactoryAddress = \"0xBCfCcbde45cE874adCB698cC183deBcF17952812\";\n  const [liquidity, setLiquidity] = useState(0);\n  const [amountToAddWBNB, setAmountToAddWBNB] = useState(0);\n  const [amountToAddNLA, setAmountToAddNLA] = useState(0);\n  const [amountToRemove, setAmountToRemove] = useState(0);\n  useEffect(() => {}, []);\n\n  const addLiquidityETH = async () => {\n    if (typeof window.ethereum !== 'undefined') {\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      const signer = provider.getSigner();\n\n      if (signer) {\n        const nalaToken = new ethers.Contract(nlaTokenAddress, nalaTokenABI, signer);\n        const nalaRouter = new ethers.Contract(nalaRouterAddress, nalaRouterABI, signer); // const amountsOut = await nalaRouter\n        // .getAmountsOutTokens(\n        //     ethers.utils.parseEther(amountOfBNB.toString()), \n        //     [wBNBTokenAddress, nlaTokenAddress]\n        // )\n        // console.log(`Amounts out = ${amountsOut[1] / Math.pow(10, 18)}`);\n\n        await nalaToken.connect(signer).approve(nalaRouterAddress, \"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\");\n        await nalaRouter.connect(signer).addLiquidityETH(nlaTokenAddress, ethers.utils.parseEther(amountToAddNLA.toString()), 0, 0, // amountETHMin\n        {\n          value: ethers.utils.parseEther(amountToAddWBNB.toString())\n        });\n      }\n    }\n  };\n\n  const removeLiquidityETH = async amountOfBNB => {};\n\n  const setAmountsWBNB = async amountOfBNB => {\n    console.log(amountOfBNB);\n\n    if (parseInt(amountOfBNB) === 0 || amountOfBNB === \"\") {\n      setAmountToAddNLA(0);\n      setAmountToAddWBNB(0);\n    } else if (typeof window.ethereum !== 'undefined') {\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      const signer = provider.getSigner();\n\n      if (signer) {\n        const nalaToken = new ethers.Contract(nlaTokenAddress, nalaTokenABI, signer);\n        const nalaRouter = new ethers.Contract(nalaRouterAddress, nalaRouterABI, signer);\n        const amountsOut = await nalaRouter.getAmountsOutTokens(ethers.utils.parseEther(amountOfBNB.toString()), [wBNBTokenAddress, nlaTokenAddress]);\n        console.log(`Amounts out = ${amountsOut[1] / Math.pow(10, 18)}`);\n        setAmountToAddWBNB(amountOfBNB);\n        setAmountToAddNLA(amountsOut[1] / Math.pow(10, 18));\n      }\n    }\n  };\n\n  const setAmountsNLA = async amountOfNLA => {\n    console.log(amountOfNLA);\n\n    if (amountOfNLA === \"\") {\n      setAmountToAddNLA(\"\");\n      setAmountToAddWBNB(\"\");\n    }\n\n    if (parseInt(amountOfNLA) === 0) {\n      setAmountToAddNLA(0);\n      setAmountToAddWBNB(0);\n    } else if (typeof window.ethereum !== 'undefined') {\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      const signer = provider.getSigner();\n\n      if (signer) {\n        const nalaToken = new ethers.Contract(nlaTokenAddress, nalaTokenABI, signer);\n        const nalaRouter = new ethers.Contract(nalaRouterAddress, nalaRouterABI, signer);\n        const amountsOut = await nalaRouter.getAmountsOutTokens(ethers.utils.parseEther(amountOfNLA.toString()), [nlaTokenAddress, wBNBTokenAddress]);\n        console.log(`Amounts out = ${amountsOut[1] / Math.pow(10, 18)}`);\n        setAmountToAddWBNB(amountsOut[1] / Math.pow(10, 18));\n        setAmountToAddNLA(amountOfNLA);\n      }\n    }\n  };\n\n  const findLPTokenAddress = async () => {\n    if (typeof window.ethereum !== 'undefined') {\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      const signer = provider.getSigner();\n\n      if (signer) {// const pancakeFactory = new ethers.Contract(pancakeFactoryAddress, pancakeFactoryABI, signer);\n        // const lpTokenAddress = await pancakeFactory.getPair(wBNBTokenAddress. nlaTokenAddress);\n        // console.log(\"LP Token address => \", lpTokenAddress);\n        // return lpTokenAddress;\n      }\n    }\n  };\n\n  const importTokenToMetamask = async () => {\n    findLPTokenAddress(); // try {\n    //   const wasAdded = await window.ethereum.request({\n    //     method: 'wallet_watchAsset',\n    //     params: {\n    //       type: 'ERC20', \n    //       options: {\n    //         address: await findLPTokenAddress(), \n    //         symbol: \"WBNB-NLA LP\", \n    //         decimals: 18, \n    //         image: \"https://s2.coinmarketcap.com/static/img/coins/200x200/7186.png\", \n    //       },\n    //     },\n    //   });\n    //   if (wasAdded) {\n    //     console.log('Thanks for your interest!');\n    //   } else {\n    //     console.log('NLA LP Token has not been added');\n    //   }\n    // } catch (error) {\n    //   console.log(error);\n    // }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'grid',\n        gap: '20px',\n        padding: '40px 20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"section\", {\n        style: {\n          display: 'flex',\n          gap: '20px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Widget, {\n          info: \"WBNB - NLA\",\n          title: \"Pool\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Widget, {\n          info: \"233,182\",\n          title: \"Total liquidity in $\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        style: {\n          display: 'flex',\n          gap: '20px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Widget, {\n          info: \"72%\",\n          title: \"APR\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Widget, {\n          info: \"232\",\n          title: \"Stakers\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Widget, {\n          info: \"213\",\n          title: \"Rewards per day\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Widget, {\n          info: \"5002300\",\n          title: \"Rewards per year\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          flexDirection: 'row',\n          justifyContent: 'space-around'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          style: {\n            marginRight: \"25%\"\n          },\n          color: \"secondary\",\n          variant: \"contained\",\n          onClick: () => addLiquidityETH(),\n          children: \"Add liquidity\"\n        }, \"Deposit\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          color: \"secondary\",\n          variant: \"contained\",\n          onClick: () => removeLiquidityETH(),\n          children: \"Remove liquidity\"\n        }, \"Withdraw\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        value: amountToAddWBNB,\n        id: \"outlined-basic\",\n        label: \"Amount of WBNB...\",\n        variant: \"outlined\",\n        size: \"small\",\n        type: \"number\",\n        onChange: e => setAmountsWBNB(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        value: amountToAddNLA,\n        id: \"outlined-basic\",\n        label: \"Amount of NLA...\",\n        variant: \"outlined\",\n        size: \"small\",\n        type: \"number\",\n        onChange: e => setAmountsNLA(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          flexDirection: 'row',\n          justifyContent: 'space-around'\n        },\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          color: \"info\",\n          variant: \"contained\",\n          onClick: () => importTokenToMetamask(),\n          children: \"Import LP Token to metamask\"\n        }, \"Deposit\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n\n_s(Pools, \"I/gD1mA3n+Sm3Nd1+u+PxC4tcJE=\");\n\n_c = Pools;\n\nvar _c;\n\n$RefreshReg$(_c, \"Pools\");","map":{"version":3,"names":["React","useEffect","useState","NalaRouterABI","contractAddresses","tokens","nalaRouterABI","pancakeFactoryABI","nalaTokenABI","BigNumber","ethers","Widget","Button","TextField","Pools","nalaRouterAddress","nalaRouterContract","nlaTokenAddress","nalaTokenAddress","wBNBTokenAddress","pancakeFactoryAddress","liquidity","setLiquidity","amountToAddWBNB","setAmountToAddWBNB","amountToAddNLA","setAmountToAddNLA","amountToRemove","setAmountToRemove","addLiquidityETH","window","ethereum","provider","providers","Web3Provider","signer","getSigner","nalaToken","Contract","nalaRouter","connect","approve","utils","parseEther","toString","value","removeLiquidityETH","amountOfBNB","setAmountsWBNB","console","log","parseInt","amountsOut","getAmountsOutTokens","Math","pow","setAmountsNLA","amountOfNLA","findLPTokenAddress","importTokenToMetamask","display","gap","padding","flexDirection","justifyContent","marginRight","e","target"],"sources":["/Users/ja/Desktop/MyProjects/NalaSwap/webapp/nalaswap/src/pages/Pools.js"],"sourcesContent":["import * as React from 'react';\nimport {useEffect, useState} from \"react\";\nimport NalaRouterABI from \"../ABIS/NalaRouter.json\";\nimport contractAddresses from \"../utils/contractsAddresses.json\";\nimport {tokens} from \"../utils/availableTokens\";\nimport nalaRouterABI from \"../ABIS/NalaRouter.json\";\nimport pancakeFactoryABI from \"../ABIS/PancakeFactory.json\";\nimport nalaTokenABI from \"../ABIS/NalaTokenABI.json\";\nimport { BigNumber, ethers } from 'ethers';\nimport {Widget} from \"web3uikit\";\nimport Button from '@mui/material/Button';\nimport TextField from '@mui/material/TextField';\n\nexport default function Pools () {\n\n    const nalaRouterAddress = contractAddresses.nalaRouterContract;\n    const nlaTokenAddress = contractAddresses.nalaTokenAddress;\n    const wBNBTokenAddress = \"0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c\";\n    const pancakeFactoryAddress = \"0xBCfCcbde45cE874adCB698cC183deBcF17952812\";\n\n    const [liquidity, setLiquidity] = useState(0);\n    const [amountToAddWBNB, setAmountToAddWBNB] = useState(0);\n    const [amountToAddNLA, setAmountToAddNLA] = useState(0);\n    const [amountToRemove, setAmountToRemove] = useState(0);\n\n    useEffect(() => {\n    },[])\n   \n    const addLiquidityETH = async () => {\n        if (typeof window.ethereum !== 'undefined') {\n            const provider = new ethers.providers.Web3Provider(window.ethereum)\n            const signer = provider.getSigner();\n            if (signer) {\n                const nalaToken = new ethers.Contract(nlaTokenAddress, nalaTokenABI, signer);\n                const nalaRouter = new ethers.Contract(nalaRouterAddress, nalaRouterABI, signer);\n\n                // const amountsOut = await nalaRouter\n                // .getAmountsOutTokens(\n                //     ethers.utils.parseEther(amountOfBNB.toString()), \n                //     [wBNBTokenAddress, nlaTokenAddress]\n                // )\n                // console.log(`Amounts out = ${amountsOut[1] / Math.pow(10, 18)}`);\n            \n                await nalaToken.connect(signer).approve(nalaRouterAddress, \"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\");\n                \n                await nalaRouter.connect(signer).addLiquidityETH(\n                    nlaTokenAddress, \n                    ethers.utils.parseEther(amountToAddNLA.toString()),\n                    0, \n                    0, // amountETHMin\n                    {value: ethers.utils.parseEther(amountToAddWBNB.toString())}\n                );\n\n            }\n        }\n    }\n\n    const removeLiquidityETH = async (amountOfBNB) => {\n       \n    }\n\n    const setAmountsWBNB = async (amountOfBNB) => {\n        console.log(amountOfBNB);\n        if(parseInt(amountOfBNB) === 0 || amountOfBNB === \"\") {\n            setAmountToAddNLA(0);\n            setAmountToAddWBNB(0);\n        }\n        else if (typeof window.ethereum !== 'undefined') {\n            const provider = new ethers.providers.Web3Provider(window.ethereum)\n            const signer = provider.getSigner();\n            if (signer) {\n                const nalaToken = new ethers.Contract(nlaTokenAddress, nalaTokenABI, signer);\n                const nalaRouter = new ethers.Contract(nalaRouterAddress, nalaRouterABI, signer);\n\n                const amountsOut = await nalaRouter\n                .getAmountsOutTokens(\n                    ethers.utils.parseEther(amountOfBNB.toString()), \n                    [wBNBTokenAddress, nlaTokenAddress]\n                )\n                console.log(`Amounts out = ${amountsOut[1] / Math.pow(10, 18)}`);\n                \n                setAmountToAddWBNB(amountOfBNB);\n                setAmountToAddNLA(amountsOut[1] / Math.pow(10, 18));\n            }\n        }\n    }\n\n    const setAmountsNLA = async (amountOfNLA) => {\n        console.log(amountOfNLA);\n        if(amountOfNLA === \"\") {\n            setAmountToAddNLA(\"\");\n            setAmountToAddWBNB(\"\");\n        }\n        if(parseInt(amountOfNLA) === 0) {\n            setAmountToAddNLA(0);\n            setAmountToAddWBNB(0);\n        }\n        else if (typeof window.ethereum !== 'undefined') {\n            const provider = new ethers.providers.Web3Provider(window.ethereum)\n            const signer = provider.getSigner();\n            if (signer) {\n                const nalaToken = new ethers.Contract(nlaTokenAddress, nalaTokenABI, signer);\n                const nalaRouter = new ethers.Contract(nalaRouterAddress, nalaRouterABI, signer);\n\n                const amountsOut = await nalaRouter\n                .getAmountsOutTokens(\n                    ethers.utils.parseEther(amountOfNLA.toString()), \n                    [nlaTokenAddress, wBNBTokenAddress]\n                )\n                console.log(`Amounts out = ${amountsOut[1] / Math.pow(10, 18)}`);\n                \n                setAmountToAddWBNB(amountsOut[1] / Math.pow(10, 18));\n                setAmountToAddNLA(amountOfNLA);\n            }\n        }\n    }\n\n    const findLPTokenAddress = async () => {\n        if (typeof window.ethereum !== 'undefined') {\n            const provider = new ethers.providers.Web3Provider(window.ethereum)\n            const signer = provider.getSigner();\n            if (signer) {\n                // const pancakeFactory = new ethers.Contract(pancakeFactoryAddress, pancakeFactoryABI, signer);\n\n                // const lpTokenAddress = await pancakeFactory.getPair(wBNBTokenAddress. nlaTokenAddress);\n                // console.log(\"LP Token address => \", lpTokenAddress);\n                // return lpTokenAddress;\n            }\n        }\n    }\n\n    const importTokenToMetamask = async () => {\n        findLPTokenAddress();\n        // try {\n        //   const wasAdded = await window.ethereum.request({\n        //     method: 'wallet_watchAsset',\n        //     params: {\n        //       type: 'ERC20', \n        //       options: {\n        //         address: await findLPTokenAddress(), \n        //         symbol: \"WBNB-NLA LP\", \n        //         decimals: 18, \n        //         image: \"https://s2.coinmarketcap.com/static/img/coins/200x200/7186.png\", \n        //       },\n        //     },\n        //   });\n        //   if (wasAdded) {\n        //     console.log('Thanks for your interest!');\n        //   } else {\n        //     console.log('NLA LP Token has not been added');\n        //   }\n        // } catch (error) {\n        //   console.log(error);\n        // }\n    }\n\n    return (\n        <>\n            <div style={{ display: 'grid', gap: '20px', padding: '40px 20px' }}>\n                <section style={{ display: 'flex', gap: '20px' }}>\n                    <Widget info=\"WBNB - NLA\" title=\"Pool\" />\n                    <Widget info=\"233,182\" title=\"Total liquidity in $\" />\n                </section>\n                <section style={{ display: 'flex', gap: '20px' }}>\n                    <Widget info=\"72%\" title=\"APR\" />\n                    <Widget info=\"232\" title=\"Stakers\" />\n                    <Widget info=\"213\" title=\"Rewards per day\" />\n                    <Widget info=\"5002300\" title=\"Rewards per year\" />\n                </section>\n                <div style={{display: 'flex', flexDirection: 'row', justifyContent: 'space-around'}}>\n                    <Button style={{marginRight: \"25%\"}} color=\"secondary\" variant=\"contained\" key=\"Deposit\" onClick={() => addLiquidityETH()}>Add liquidity</Button>\n                    <Button color=\"secondary\" variant=\"contained\" key=\"Withdraw\" onClick={() => removeLiquidityETH()}>Remove liquidity</Button>\n                </div>\n                <TextField value={amountToAddWBNB} id=\"outlined-basic\" label=\"Amount of WBNB...\" variant=\"outlined\" size=\"small\" type=\"number\" onChange={(e) => setAmountsWBNB(e.target.value)}/>\n                <TextField value={amountToAddNLA} id=\"outlined-basic\" label=\"Amount of NLA...\" variant=\"outlined\" size=\"small\" type=\"number\" onChange={(e) => setAmountsNLA(e.target.value)}/>\n                <div style={{display: 'flex', flexDirection: 'row', justifyContent: 'space-around'}}>\n                    <Button color=\"info\" variant=\"contained\" key=\"Deposit\" onClick={() => importTokenToMetamask()}>Import LP Token to metamask</Button>\n                </div>\n            </div>\n        </>\n    )\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}