{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.loadTsNode = exports.isTypescriptSupported = exports.isRunningWithTypescript = exports.willRunWithTypescript = void 0;\n\nconst config_loading_1 = require(\"./config/config-loading\");\n\nconst errors_1 = require(\"./errors\");\n\nconst errors_list_1 = require(\"./errors-list\");\n\nconst execution_mode_1 = require(\"./execution-mode\");\n\nlet cachedIsTypescriptSupported;\n/**\n * Returns true if Hardhat will run in using typescript mode.\n * @param configPath The config path if provider by the user.\n */\n\nfunction willRunWithTypescript(configPath) {\n  const config = (0, config_loading_1.resolveConfigPath)(configPath);\n  return isTypescriptFile(config);\n}\n\nexports.willRunWithTypescript = willRunWithTypescript;\n/**\n * Returns true if an Hardhat is already running with typescript.\n */\n\nfunction isRunningWithTypescript(config) {\n  return isTypescriptFile(config.paths.configFile);\n}\n\nexports.isRunningWithTypescript = isRunningWithTypescript;\n\nfunction isTypescriptSupported() {\n  if (cachedIsTypescriptSupported === undefined) {\n    try {\n      // We resolve these from Hardhat's installation.\n      require.resolve(\"typescript\");\n\n      require.resolve(\"ts-node\");\n\n      cachedIsTypescriptSupported = true;\n    } catch (_a) {\n      cachedIsTypescriptSupported = false;\n    }\n  }\n\n  return cachedIsTypescriptSupported;\n}\n\nexports.isTypescriptSupported = isTypescriptSupported;\n\nfunction loadTsNode(tsConfigPath) {\n  try {\n    require.resolve(\"typescript\");\n  } catch (_a) {\n    throw new errors_1.HardhatError(errors_list_1.ERRORS.GENERAL.TYPESCRIPT_NOT_INSTALLED);\n  }\n\n  try {\n    require.resolve(\"ts-node\");\n  } catch (_b) {\n    throw new errors_1.HardhatError(errors_list_1.ERRORS.GENERAL.TS_NODE_NOT_INSTALLED);\n  } // If we are running tests we just want to transpile\n\n\n  if ((0, execution_mode_1.isRunningHardhatCoreTests)()) {\n    // eslint-disable-next-line import/no-extraneous-dependencies\n    require(\"ts-node/register/transpile-only\");\n\n    return;\n  }\n\n  if (tsConfigPath !== undefined) {\n    process.env.TS_NODE_PROJECT = tsConfigPath;\n  } // See: https://github.com/nomiclabs/hardhat/issues/265\n\n\n  if (process.env.TS_NODE_FILES === undefined) {\n    process.env.TS_NODE_FILES = \"true\";\n  } // eslint-disable-next-line import/no-extraneous-dependencies\n\n\n  require(\"ts-node/register\");\n}\n\nexports.loadTsNode = loadTsNode;\n\nfunction isTypescriptFile(path) {\n  return path.endsWith(\".ts\");\n}","map":{"version":3,"mappings":";;;;;;;AAEA;;AACA;;AACA;;AACA;;AAEA,IAAIA,2BAAJ;AAEA;;;;;AAIA,SAAgBC,qBAAhB,CAAsCC,UAAtC,EAAyD;EACvD,MAAMC,MAAM,GAAG,wCAAkBD,UAAlB,CAAf;EACA,OAAOE,gBAAgB,CAACD,MAAD,CAAvB;AACD;;AAHDE;AAKA;;;;AAGA,SAAgBC,uBAAhB,CAAwCH,MAAxC,EAA6D;EAC3D,OAAOC,gBAAgB,CAACD,MAAM,CAACI,KAAP,CAAaC,UAAd,CAAvB;AACD;;AAFDH;;AAIA,SAAgBI,qBAAhB,GAAqC;EACnC,IAAIT,2BAA2B,KAAKU,SAApC,EAA+C;IAC7C,IAAI;MACF;MACAC,OAAO,CAACC,OAAR,CAAgB,YAAhB;;MACAD,OAAO,CAACC,OAAR,CAAgB,SAAhB;;MACAZ,2BAA2B,GAAG,IAA9B;IACD,CALD,CAKE,WAAM;MACNA,2BAA2B,GAAG,KAA9B;IACD;EACF;;EAED,OAAOA,2BAAP;AACD;;AAbDK;;AAeA,SAAgBQ,UAAhB,CAA2BC,YAA3B,EAAgD;EAC9C,IAAI;IACFH,OAAO,CAACC,OAAR,CAAgB,YAAhB;EACD,CAFD,CAEE,WAAM;IACN,MAAM,IAAIG,qBAAJ,CAAiBC,qBAAOC,OAAP,CAAeC,wBAAhC,CAAN;EACD;;EAED,IAAI;IACFP,OAAO,CAACC,OAAR,CAAgB,SAAhB;EACD,CAFD,CAEE,WAAM;IACN,MAAM,IAAIG,qBAAJ,CAAiBC,qBAAOC,OAAP,CAAeE,qBAAhC,CAAN;EACD,CAX6C,CAa9C;;;EACA,IAAI,iDAAJ,EAAiC;IAC/B;IACAR,OAAO,CAAC,iCAAD,CAAP;;IACA;EACD;;EAED,IAAIG,YAAY,KAAKJ,SAArB,EAAgC;IAC9BU,OAAO,CAACC,GAAR,CAAYC,eAAZ,GAA8BR,YAA9B;EACD,CAtB6C,CAwB9C;;;EACA,IAAIM,OAAO,CAACC,GAAR,CAAYE,aAAZ,KAA8Bb,SAAlC,EAA6C;IAC3CU,OAAO,CAACC,GAAR,CAAYE,aAAZ,GAA4B,MAA5B;EACD,CA3B6C,CA6B9C;;;EACAZ,OAAO,CAAC,kBAAD,CAAP;AACD;;AA/BDN;;AAiCA,SAASD,gBAAT,CAA0BoB,IAA1B,EAAsC;EACpC,OAAOA,IAAI,CAACC,QAAL,CAAc,KAAd,CAAP;AACD","names":["cachedIsTypescriptSupported","willRunWithTypescript","configPath","config","isTypescriptFile","exports","isRunningWithTypescript","paths","configFile","isTypescriptSupported","undefined","require","resolve","loadTsNode","tsConfigPath","errors_1","errors_list_1","GENERAL","TYPESCRIPT_NOT_INSTALLED","TS_NODE_NOT_INSTALLED","process","env","TS_NODE_PROJECT","TS_NODE_FILES","path","endsWith"],"sourceRoot":"","sources":["../../src/internal/core/typescript-support.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}