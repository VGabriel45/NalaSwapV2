{"ast":null,"code":"\"use strict\";\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  Object.defineProperty(o, k2, {\n    enumerable: true,\n    get: function () {\n      return m[k];\n    }\n  });\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n\n  __setModuleDefault(result, mod);\n\n  return result;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getSubprocessTransport = void 0;\n\nconst child_process_1 = require(\"child_process\");\n\nconst path = __importStar(require(\"path\")); // This class is wrapped in a function to avoid having to\n// import @sentry/node just for the BaseTransport base class\n\n\nfunction getSubprocessTransport() {\n  const {\n    Status,\n    Transports\n  } = require(\"@sentry/node\");\n\n  class SubprocessTransport extends Transports.BaseTransport {\n    async sendEvent(event) {\n      var _a, _b, _c;\n\n      const extra = (_a = event.extra) !== null && _a !== void 0 ? _a : {};\n      const {\n        verbose = false,\n        configPath\n      } = extra; // don't send user's full config path for privacy reasons\n\n      (_b = event.extra) === null || _b === void 0 ? true : delete _b.configPath; // we don't care about the verbose setting\n\n      (_c = event.extra) === null || _c === void 0 ? true : delete _c.verbose;\n      const serializedEvent = JSON.stringify(event);\n      const env = {\n        HARDHAT_SENTRY_EVENT: serializedEvent,\n        HARDHAT_SENTRY_VERBOSE: verbose.toString()\n      };\n\n      if (configPath !== undefined) {\n        env.HARDHAT_SENTRY_CONFIG_PATH = configPath;\n      }\n\n      const subprocessPath = path.join(__dirname, \"subprocess\");\n      const subprocess = (0, child_process_1.spawn)(process.execPath, [subprocessPath], {\n        detached: true,\n        env,\n        stdio: verbose ? \"inherit\" : \"ignore\"\n      });\n      subprocess.unref();\n      return {\n        status: Status.Success\n      };\n    }\n\n  }\n\n  return SubprocessTransport;\n}\n\nexports.getSubprocessTransport = getSubprocessTransport;","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA;;AACA,2C,CAEA;AACA;;;AACA,SAAgBA,sBAAhB,GAAsC;EACpC,MAAM;IAAEC,MAAF;IAAUC;EAAV,IAAyBC,OAAO,CAAC,cAAD,CAAtC;;EAEA,MAAMC,mBAAN,SAAkCF,UAAU,CAACG,aAA7C,CAA0D;IAClC,MAATC,SAAS,CAACC,KAAD,EAAa;;;MACjC,MAAMC,KAAK,GACT,WAAK,CAACA,KAAN,MAAW,IAAX,IAAWC,aAAX,GAAWA,EAAX,GAAe,EADjB;MAEA,MAAM;QAAEC,OAAO,GAAG,KAAZ;QAAmBC;MAAnB,IAAkCH,KAAxC,CAHiC,CAKjC;;MACO,WAAK,CAACA,KAAN,MAAW,IAAX,IAAWI,aAAX,GAAW,IAAX,GAAW,UAAED,UAAb,CAN0B,CAQjC;;MACO,WAAK,CAACH,KAAN,MAAW,IAAX,IAAWK,aAAX,GAAW,IAAX,GAAW,UAAEH,OAAb;MAEP,MAAMI,eAAe,GAAGC,IAAI,CAACC,SAAL,CAAeT,KAAf,CAAxB;MAEA,MAAMU,GAAG,GAA2B;QAClCC,oBAAoB,EAAEJ,eADY;QAElCK,sBAAsB,EAAET,OAAO,CAACU,QAAR;MAFU,CAApC;;MAKA,IAAIT,UAAU,KAAKU,SAAnB,EAA8B;QAC5BJ,GAAG,CAACK,0BAAJ,GAAiCX,UAAjC;MACD;;MAED,MAAMY,cAAc,GAAGC,IAAI,CAACC,IAAL,CAAUC,SAAV,EAAqB,YAArB,CAAvB;MAEA,MAAMC,UAAU,GAAG,2BAAMC,OAAO,CAACC,QAAd,EAAwB,CAACN,cAAD,CAAxB,EAA0C;QAC3DO,QAAQ,EAAE,IADiD;QAE3Db,GAF2D;QAG3Dc,KAAK,EAAGrB,OAAO,GAAG,SAAH,GAAe;MAH6B,CAA1C,CAAnB;MAMAiB,UAAU,CAACK,KAAX;MAEA,OAAO;QACLC,MAAM,EAAEhC,MAAM,CAACiC;MADV,CAAP;IAGD;;EApCuD;;EAuC1D,OAAO9B,mBAAP;AACD;;AA3CD+B","names":["getSubprocessTransport","Status","Transports","require","SubprocessTransport","BaseTransport","sendEvent","event","extra","_a","verbose","configPath","_b","_c","serializedEvent","JSON","stringify","env","HARDHAT_SENTRY_EVENT","HARDHAT_SENTRY_VERBOSE","toString","undefined","HARDHAT_SENTRY_CONFIG_PATH","subprocessPath","path","join","__dirname","subprocess","process","execPath","detached","stdio","unref","status","Success","exports"],"sourceRoot":"","sources":["../../src/internal/sentry/transport.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}