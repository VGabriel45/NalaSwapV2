{"ast":null,"code":"// import * as React from 'react';\n// import {useEffect, useState, Fragment} from \"react\";\n// import { BigNumber, Contract, ethers, utils } from 'ethers';\n// import { formatUnits, parseEther } from '@ethersproject/units';\n// import Box from '@mui/material/Box';\n// import Button from '@mui/material/Button';\n// import TextField from '@mui/material/TextField';\n// import NalaRouterABI from \"../ABIS/NalaRouter.json\";\n// import contractAddresses from \"../utils/contractsAddresses.json\";\n// import Autocomplete from '@mui/material/Autocomplete';\n// import {tokens} from \"../utils/availableTokens\";\n// import InputAdornment from '@mui/material/InputAdornment';\n// import Tooltip from '@mui/material/Tooltip';\n// export default function Pools () {\n//     const nalaRouterAddress = contractAddresses.nalaRouterContract;\n//     const tokenAddress = \"0x0e09fabb73bd3ade0a17ecc321fd13a19e81ce82\";\n//     const [token1, setToken1] = useState(tokens[0]);\n//     const [token2, setToken2] = useState(tokens[1]);\n//     const [amountToken1, setAmountToken1] = useState(0);\n//     const [amountToken2, setAmountToken2] = useState(0);\n//     const erc20ABI = [{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address payable\",\"name\":\"relayerAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"functionSignature\",\"type\":\"bytes\"}],\"name\":\"MetaTransactionExecuted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"CHILD_CHAIN_ID\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"CHILD_CHAIN_ID_BYTES\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DEPOSITOR_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ERC712_VERSION\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ROOT_CHAIN_ID\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ROOT_CHAIN_ID_BYTES\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"depositData\",\"type\":\"bytes\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"functionSignature\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"sigR\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"sigS\",\"type\":\"bytes32\"},{\"internalType\":\"uint8\",\"name\":\"sigV\",\"type\":\"uint8\"}],\"name\":\"executeMetaTransaction\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getChainId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDomainSeperator\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getNonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getRoleMember\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleMemberCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"decimals_\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"childChainManager\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\n//     const addLiquidityETH = async (tokenAddress, amountTokenDesired) => {\n//         if (typeof window.ethereum !== 'undefined') {\n//             const provider = new ethers.providers.Web3Provider(window.ethereum)\n//             const signer = provider.getSigner();\n//             if (signer) {\n//                 const nalaRouterContract = new ethers.Contract(nalaRouterAddress, NalaRouterABI, signer);\n//                 const token = new ethers.Contract(tokenAddress, erc20ABI, signer);\n//                 token.connect(signer).approve(nalaRouterAddress, \"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\");\n//                 nalaRouterContract.connect(signer).addLiquidityETH(tokenAddress, amountTokenDesired, 0, 0, {value: ethers.utils.parseEther(\"1\")});\n//             }\n//         }\n//     }\n//     const addLiquidity = async (token1, token2, token1Amount, token2Amount) => {\n//         if (typeof window.ethereum !== 'undefined') {\n//             const provider = new ethers.providers.Web3Provider(window.ethereum)\n//             const signer = provider.getSigner();\n//             if (signer) {\n//                 const nalaRouterContract = new ethers.Contract(nalaRouterAddress, NalaRouterABI, signer);\n//                 const token1 = new ethers.Contract(token1.address, erc20ABI, signer);\n//                 const token2 = new ethers.Contract(token2.address, erc20ABI, signer);\n//                 token1.connect(signer).approve(nalaRouterAddress, \"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\");\n//                 token2.connect(signer).approve(nalaRouterAddress, \"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\");\n//                 nalaRouterContract.connect(signer).addLiquidityETH(tokenAddress, amountTokenDesired, 0, 0, {value: ethers.utils.parseEther(\"1\")});\n//             }\n//         }\n//     }\n//     return (\n//         <>\n//             <Box\n//                 component=\"form\"\n//                 sx={{\n//                     '& > :not(style)': { m: 1, width: '25ch'},\n//                 }}\n//                 noValidate\n//                 autoComplete=\"off\"\n//                 style={{borderRadius:\"10px\", border:\"2px solid #502199\", marginBottom:\"5%\"}}\n//                 >\n//                 <Autocomplete\n//                     disablePortal\n//                     id=\"selectBox1\"\n//                     options={tokens.filter(token => token.address !== token2.address)}\n//                     sx={{ width: 300 }}\n//                     renderInput={(params) => <TextField {...params} />}\n//                     style={{border:\"1px solid #502199\", borderRadius: \"10px\"}}\n//                     value={token1.label ? token1.label : \"BNB\"}\n//                     onChange={(event, newValue) => {\n//                         if(newValue.address !== token2.address) {\n//                             setToken1(newValue);\n//                             console.log(newValue);\n//                         } \n//                     }}\n//                 />\n//                 <TextField \n//                     id=\"amountToken1\" \n//                     type=\"number\" \n//                     placeholder=\"0.0\" \n//                     variant=\"outlined\" \n//                     value={amountToken1}\n//                     InputProps={{\n//                         startAdornment: (\n//                           <InputAdornment position=\"start\">\n//                             <img src={token1.image ? token1.image : \"https://seeklogo.com/images/B/binance-coin-bnb-logo-97F9D55608-seeklogo.com.png\"} style={{width:\"25px\"}}/>\n//                           </InputAdornment>\n//                         ),\n//                       }}\n//                     onChange={async (e) => {\n//                         if (typeof window.ethereum !== 'undefined') {\n//                             const provider = new ethers.providers.Web3Provider(window.ethereum)\n//                             const signer = provider.getSigner();\n//                             if (signer) {\n//                                 const tokenInContract = new ethers.Contract(\"0x10ED43C718714eb63d5aA57B78B54704E256024E\", [\"function getAmountsOut(uint amountIn, address[] calldata path) external view returns (uint[] memory amounts)\"], signer);\n//                                 setToken1Amount(e.target.value);\n//                                     const tokenOutAmount = await token1Contract\n//                                         .getAmountsOut(\n//                                             ethers.utils.parseEther(amountToken1.toString()), \n//                                             [token1Contract.address, token2Contract.address]\n//                                         )\n//                                     setAmountOut(formatUnits(BigNumber.from(tokenOutAmount[1].toString(), 18)))\n//                             }\n//                         }\n//                     }}\n//                 />\n//                 <div>\n//                     <Tooltip title=\"Add liquidity\"> \n//                         <Button onClick={() => addLiquidity(token1, token2, amountToken1, amountToken2)} variant=\"contained\">Add liquidity</Button>\n//                     </Tooltip>\n//                 </div>\n//                 <Autocomplete\n//                     disablePortal\n//                     id=\"selectBox2\"\n//                     options={tokens.filter(token => token.address !== token1.address)}\n//                     sx={{ width: \"80%\" }}\n//                     renderInput={(params) => <TextField {...params} />}\n//                     style={{border:\"1px solid #502199\", borderRadius: \"10px\"}}\n//                     value={token2.label ? token2.label : \"BANANA\"}\n//                     onChange={(event, newValue) => {\n//                         if(newValue.address !== token1.address) {\n//                             setToken2(newValue);\n//                         } \n//                     }}\n//                 />\n//                 <TextField \n//                     id=\"amountToken2\" \n//                     type=\"number\" \n//                     placeholder=\"0.0\" \n//                     variant=\"outlined\" \n//                     value={amountToken2}\n//                     InputProps={{\n//                         startAdornment: (\n//                           <InputAdornment position=\"start\">\n//                             <img src={token2.image ? token2.image : \"https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/smartchain/assets/0x603c7f932ED1fc6575303D8Fb018fDCBb0f39a95/logo.png\"} style={{width:\"25px\"}}/>\n//                           </InputAdornment>\n//                         ),\n//                       }}\n//                     onChange={(event, newValue) => {\n//                         setToken2Amount(e.target.value);\n//                     }}\n//                 />\n//             </Box>\n//         </>\n//     )\n// }","map":{"version":3,"names":[],"sources":["/Users/ja/Desktop/MyProjects/NalaSwap/webapp/nalaswap/src/pages/Pools.js"],"sourcesContent":["// import * as React from 'react';\n// import {useEffect, useState, Fragment} from \"react\";\n// import { BigNumber, Contract, ethers, utils } from 'ethers';\n// import { formatUnits, parseEther } from '@ethersproject/units';\n// import Box from '@mui/material/Box';\n// import Button from '@mui/material/Button';\n// import TextField from '@mui/material/TextField';\n// import NalaRouterABI from \"../ABIS/NalaRouter.json\";\n// import contractAddresses from \"../utils/contractsAddresses.json\";\n// import Autocomplete from '@mui/material/Autocomplete';\n// import {tokens} from \"../utils/availableTokens\";\n// import InputAdornment from '@mui/material/InputAdornment';\n// import Tooltip from '@mui/material/Tooltip';\n\n// export default function Pools () {\n\n//     const nalaRouterAddress = contractAddresses.nalaRouterContract;\n//     const tokenAddress = \"0x0e09fabb73bd3ade0a17ecc321fd13a19e81ce82\";\n\n//     const [token1, setToken1] = useState(tokens[0]);\n//     const [token2, setToken2] = useState(tokens[1]);\n\n//     const [amountToken1, setAmountToken1] = useState(0);\n//     const [amountToken2, setAmountToken2] = useState(0);\n\n//     const erc20ABI = [{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address payable\",\"name\":\"relayerAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"functionSignature\",\"type\":\"bytes\"}],\"name\":\"MetaTransactionExecuted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"CHILD_CHAIN_ID\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"CHILD_CHAIN_ID_BYTES\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DEPOSITOR_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ERC712_VERSION\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ROOT_CHAIN_ID\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ROOT_CHAIN_ID_BYTES\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"depositData\",\"type\":\"bytes\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"functionSignature\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"sigR\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"sigS\",\"type\":\"bytes32\"},{\"internalType\":\"uint8\",\"name\":\"sigV\",\"type\":\"uint8\"}],\"name\":\"executeMetaTransaction\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getChainId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDomainSeperator\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getNonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getRoleMember\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleMemberCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"decimals_\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"childChainManager\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\n  \n//     const addLiquidityETH = async (tokenAddress, amountTokenDesired) => {\n//         if (typeof window.ethereum !== 'undefined') {\n//             const provider = new ethers.providers.Web3Provider(window.ethereum)\n//             const signer = provider.getSigner();\n//             if (signer) {\n//                 const nalaRouterContract = new ethers.Contract(nalaRouterAddress, NalaRouterABI, signer);\n//                 const token = new ethers.Contract(tokenAddress, erc20ABI, signer);\n\n//                 token.connect(signer).approve(nalaRouterAddress, \"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\");\n//                 nalaRouterContract.connect(signer).addLiquidityETH(tokenAddress, amountTokenDesired, 0, 0, {value: ethers.utils.parseEther(\"1\")});\n\n//             }\n//         }\n//     }\n\n//     const addLiquidity = async (token1, token2, token1Amount, token2Amount) => {\n//         if (typeof window.ethereum !== 'undefined') {\n//             const provider = new ethers.providers.Web3Provider(window.ethereum)\n//             const signer = provider.getSigner();\n//             if (signer) {\n//                 const nalaRouterContract = new ethers.Contract(nalaRouterAddress, NalaRouterABI, signer);\n\n//                 const token1 = new ethers.Contract(token1.address, erc20ABI, signer);\n//                 const token2 = new ethers.Contract(token2.address, erc20ABI, signer);\n\n//                 token1.connect(signer).approve(nalaRouterAddress, \"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\");\n//                 token2.connect(signer).approve(nalaRouterAddress, \"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\");\n//                 nalaRouterContract.connect(signer).addLiquidityETH(tokenAddress, amountTokenDesired, 0, 0, {value: ethers.utils.parseEther(\"1\")});\n\n//             }\n//         }\n//     }\n\n//     return (\n//         <>\n//             <Box\n//                 component=\"form\"\n//                 sx={{\n//                     '& > :not(style)': { m: 1, width: '25ch'},\n//                 }}\n//                 noValidate\n//                 autoComplete=\"off\"\n//                 style={{borderRadius:\"10px\", border:\"2px solid #502199\", marginBottom:\"5%\"}}\n//                 >\n//                 <Autocomplete\n//                     disablePortal\n//                     id=\"selectBox1\"\n//                     options={tokens.filter(token => token.address !== token2.address)}\n//                     sx={{ width: 300 }}\n//                     renderInput={(params) => <TextField {...params} />}\n//                     style={{border:\"1px solid #502199\", borderRadius: \"10px\"}}\n//                     value={token1.label ? token1.label : \"BNB\"}\n//                     onChange={(event, newValue) => {\n//                         if(newValue.address !== token2.address) {\n//                             setToken1(newValue);\n//                             console.log(newValue);\n//                         } \n//                     }}\n//                 />\n//                 <TextField \n//                     id=\"amountToken1\" \n//                     type=\"number\" \n//                     placeholder=\"0.0\" \n//                     variant=\"outlined\" \n//                     value={amountToken1}\n//                     InputProps={{\n//                         startAdornment: (\n//                           <InputAdornment position=\"start\">\n//                             <img src={token1.image ? token1.image : \"https://seeklogo.com/images/B/binance-coin-bnb-logo-97F9D55608-seeklogo.com.png\"} style={{width:\"25px\"}}/>\n//                           </InputAdornment>\n//                         ),\n//                       }}\n//                     onChange={async (e) => {\n//                         if (typeof window.ethereum !== 'undefined') {\n//                             const provider = new ethers.providers.Web3Provider(window.ethereum)\n//                             const signer = provider.getSigner();\n//                             if (signer) {\n//                                 const tokenInContract = new ethers.Contract(\"0x10ED43C718714eb63d5aA57B78B54704E256024E\", [\"function getAmountsOut(uint amountIn, address[] calldata path) external view returns (uint[] memory amounts)\"], signer);\n//                                 setToken1Amount(e.target.value);\n//                                     const tokenOutAmount = await token1Contract\n//                                         .getAmountsOut(\n//                                             ethers.utils.parseEther(amountToken1.toString()), \n//                                             [token1Contract.address, token2Contract.address]\n//                                         )\n//                                     setAmountOut(formatUnits(BigNumber.from(tokenOutAmount[1].toString(), 18)))\n//                             }\n//                         }\n//                     }}\n//                 />\n//                 <div>\n//                     <Tooltip title=\"Add liquidity\"> \n//                         <Button onClick={() => addLiquidity(token1, token2, amountToken1, amountToken2)} variant=\"contained\">Add liquidity</Button>\n//                     </Tooltip>\n//                 </div>\n//                 <Autocomplete\n//                     disablePortal\n//                     id=\"selectBox2\"\n//                     options={tokens.filter(token => token.address !== token1.address)}\n//                     sx={{ width: \"80%\" }}\n//                     renderInput={(params) => <TextField {...params} />}\n//                     style={{border:\"1px solid #502199\", borderRadius: \"10px\"}}\n//                     value={token2.label ? token2.label : \"BANANA\"}\n//                     onChange={(event, newValue) => {\n//                         if(newValue.address !== token1.address) {\n//                             setToken2(newValue);\n//                         } \n//                     }}\n//                 />\n//                 <TextField \n//                     id=\"amountToken2\" \n//                     type=\"number\" \n//                     placeholder=\"0.0\" \n//                     variant=\"outlined\" \n//                     value={amountToken2}\n//                     InputProps={{\n//                         startAdornment: (\n//                           <InputAdornment position=\"start\">\n//                             <img src={token2.image ? token2.image : \"https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/smartchain/assets/0x603c7f932ED1fc6575303D8Fb018fDCBb0f39a95/logo.png\"} style={{width:\"25px\"}}/>\n//                           </InputAdornment>\n//                         ),\n//                       }}\n//                     onChange={(event, newValue) => {\n//                         setToken2Amount(e.target.value);\n//                     }}\n//                 />\n//             </Box>\n//         </>\n//     )\n// }"],"mappings},"metadata":{},"sourceType":"module"}